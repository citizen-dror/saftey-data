{"version":3,"sources":["components/molecules/image/FormImageDetails.tsx","components/molecules/image/CardEditImageFile.tsx","stores/ImageEntity.tsx","components/molecules/image/CardUploadImageFile.tsx","components/pages/UpdateImagePage.tsx"],"names":["styleControl1","width","styleControl2","GroupPlace","observer","name","imageStore","useStore","setCurrImageVal","myVal","currImage","place","Form","Group","as","Col","controlId","Label","Control","style","value","onChange","e","target","GroupTags","tags","GroupTitleHe","titlehe","GroupTitleEn","titleen","GroupTextHe","texthe","GroupTextEn","texten","GroupIndex","undefined","index","toString","Number","parseInt","FormImageDetails","submitImageFile","Row","disabled","filename","xs","titlear","textar","Button","variant","onClick","styleSelect","styleCard","marginLeft","marginRight","CardEditImageFile","t","useTranslation","React","useState","tag","setTags","uiStore","getImagesByTag","setCurrImage","isRTL","language","useEffect","arrayImages","toJS","imageList","images","map","x","original","thumbnail","originalTitle","description","isGotImages","length","Card","items","disableKeyDown","thumbnailPosition","onSlide","currentIndex","handleOnSlide","ImageEntity","_id","file","this","observable","CardUploadImageFile","ifile","setFile","type","event","files","image","URL","createObjectURL","src","alt","marginTop","UpdateImagePage","styleTab","margin","display","justifyContent","Tabs","defaultActiveKey","id","Tab","eventKey","title"],"mappings":"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","file":"static/js/15.00043ebb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// import IimageEntity from '../../stores/ImageEntity';\r\nimport { useStore } from '../../../stores/storeConfig';\r\n\r\n\r\nconst styleControl1 = {\r\n  width: '250px',\r\n};\r\nconst styleControl2 = {\r\n  width: '250px',\r\n};\r\n\r\ninterface IProps { }\r\ninterface IGroupProps {name: string}\r\n// interface IGroupProps {image: IimageEntity}\r\n\r\nconst GroupPlace: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = imageStore.currImage?.place;\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        style={styleControl1}\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('place', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\nconst GroupTags: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = imageStore.currImage?.tags;\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        style={styleControl2}\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('tags', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst GroupTitleHe: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal, currImage } = imageStore;\r\n  const myVal = (currImage && currImage.titlehe != null) ? currImage.titlehe : '';\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('titlehe', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst GroupTitleEn: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal, currImage } = imageStore;\r\n  const myVal = (currImage && currImage.titleen != null) ? currImage.titleen : '';\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('titleen', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\n\r\nconst GroupTextHe: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = imageStore.currImage?.texthe;\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        as=\"textarea\"\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('texthe', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst GroupTextEn: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal, currImage } = imageStore;\r\n  const myVal = (currImage && currImage.texten != null) ? currImage.texten : '';\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        as=\"textarea\"\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('texten', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\n\r\nconst GroupIndex: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = (imageStore.currImage !== null\r\n    && imageStore.currImage.index !== undefined\r\n    && imageStore.currImage.index !== null)\r\n    ? imageStore.currImage.index.toString() : '';\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('index', Number.parseInt(e.target.value))}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst FormImageDetails: React.FC<IProps> = observer(() => {\r\n  const { imageStore } = useStore();\r\n  const { currImage, setCurrImageVal, submitImageFile } = imageStore;\r\n\r\n  const isLoading = false;\r\n  const isValidAllContols = true;\r\n  return (\r\n    <Form>\r\n      <Row>\r\n        <Col />\r\n        <Form.Group as={Col} controlId=\"exampleForm.ControlFileName\">\r\n          <Form.Label>\r\n            file name\r\n          </Form.Label>\r\n          <Form.Control\r\n            disabled\r\n            style={styleControl1}\r\n            value={(currImage !== null) ? currImage.filename : ''}\r\n          />\r\n        </Form.Group>\r\n        <Col xs={3}>\r\n          <GroupTags name=\"tags\" />\r\n        </Col>\r\n        <Col>\r\n          <GroupPlace name=\"place\" />\r\n        </Col>\r\n        <Col>\r\n          <GroupIndex name=\"index\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <GroupTitleHe name=\"titlehe\" />\r\n          <GroupTextHe name=\"texthe\" />\r\n          <GroupTitleEn name=\"titleen\" />\r\n          <GroupTextEn name=\"texten\" />\r\n          <Form.Group as={Col} controlId=\"exampleForm.ControlTitleAr\">\r\n            <Form.Label>\r\n              ar title\r\n            </Form.Label>\r\n            <Form.Control\r\n              value={(currImage !== null) ? currImage.titlear : ''}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('titlear', e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"exampleForm.ControlTextAr\">\r\n            <Form.Label>\r\n              ar text\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              value={(currImage !== null) ? currImage.textar : ''}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('textar', e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={isLoading || !isValidAllContols}\r\n            onClick={() => { submitImageFile(); }}\r\n          >\r\n            {isLoading ? 'Loading…' : 'Submit'}\r\n            {' '}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n});\r\nexport default FormImageDetails;\r\n","import React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useStore } from '../../../stores/storeConfig';\r\nimport { IimageEntity } from '../../../stores/ImageEntity';\r\n\r\ninterface IProps { }\r\nconst styleSelect = {\r\n  width: '150px',\r\n};\r\nconst styleCard = {\r\n  marginLeft: '5px',\r\n  marginRight: '5px',\r\n  width: '90%',\r\n};\r\n\r\nconst CardEditImageFile = observer(() => {\r\n  const { t } = useTranslation();\r\n  const [tag, setTags] = React.useState('כללי');\r\n  const { imageStore, uiStore } = useStore();\r\n  const { getImagesByTag, setCurrImage } = imageStore;\r\n  const { language } = uiStore;\r\n  const isRTL = (language !== 'en');\r\n  useEffect(() => {\r\n    getImagesByTag(tag, '');\r\n  }, [getImagesByTag, tag]);\r\n  // useEffect(() => {\r\n  //   getImagesByTag(tag);\r\n  // }, [getImagesByTag, tag]);\r\n  const arrayImages = toJS(imageStore.imageList);\r\n  const images = arrayImages.map((x: IimageEntity) => ({\r\n    original: x.filename,\r\n    thumbnail: x.filename,\r\n    originalTitle: x.titlehe,\r\n    description: x.texthe,\r\n  }));\r\n  const handleOnSlide = (currentIndex:number) => {\r\n    if (arrayImages.length > 0) setCurrImage(arrayImages[currentIndex]);\r\n    return true;\r\n  };\r\n  const isGotImages = (images.length > 0);\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Group as={Col} controlId=\"exampleForm.SelectTag\">\r\n          <Form.Label>\r\n            tags\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            style={styleSelect}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => { setTags(e.target.value); }}\r\n          >\r\n            <option>כללי</option>\r\n            <option>הולכי רגל</option>\r\n            <option>רוכבי אופניים</option>\r\n            <option>רוכבי אופנוע</option>\r\n            <option>מכוניות</option>\r\n            <option>אוטובוסים</option>\r\n            <option>משאיות</option>\r\n            <option>ילדים</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Card style={styleCard}>\r\n          {isGotImages && (\r\n          <ImageGallery\r\n            items={images}\r\n            // @ts-ignore\r\n            disableKeyDown\r\n            thumbnailPosition=\"top\"\r\n            isRTL={isRTL}\r\n            onSlide={(currentIndex: number) => handleOnSlide(currentIndex)}\r\n          />\r\n          )}\r\n          {!isGotImages && `${t('not-found-images')}`}\r\n        </Card>\r\n      </Form>\r\n    </div>\r\n  );\r\n});\r\nexport default CardEditImageFile;\r\n","import { observable } from 'mobx';\r\n\r\nexport interface ImageEntityLean {\r\n    _id : number;\r\n    filename: string;\r\n    titlehe: string;\r\n    texthe: string;\r\n    tags: string;\r\n    place: string;\r\n  }\r\n\r\nexport interface IimageEntity extends ImageEntityLean {\r\n    titleen?: string;\r\n    texten?: string;\r\n    titlear?: string;\r\n    textar?: string;\r\n    index?: number;\r\n    file?: File\r\n  }\r\n\r\nexport default class ImageEntity implements IimageEntity {\r\n  constructor(_id:number, filename: string, titlehe: string, texthe: string, tags: string, place:string) {\r\n    this._id = _id;\r\n    this.filename = filename;\r\n    this.titlehe = titlehe;\r\n    this.texthe = texthe;\r\n    this.tags = tags;\r\n    this.place = place;\r\n  }\r\n\r\n  _id : number;\r\n\r\n  filename: string;\r\n\r\n  @observable\r\n  titlehe: string;\r\n\r\n  @observable\r\n  texthe: string;\r\n\r\n  @observable\r\n  titleen?: string;\r\n\r\n  @observable\r\n  texten?: string;\r\n\r\n  @observable\r\n  titlear?: string;\r\n\r\n  @observable\r\n  textar?: string;\r\n\r\n  @observable\r\n  tags: string;\r\n\r\n  @observable\r\n  place: string;\r\n\r\n  @observable\r\n  index?: number;\r\n\r\n  file?: File;\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useStore } from '../../../stores/storeConfig';\r\nimport ImageEntity from '../../../stores/ImageEntity';\r\n\r\ninterface IProps { }\r\n\r\nconst CardUploadImageFile = observer(() => {\r\n  const styleInput = {\r\n    marginTop: '15px',\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n    width: '95%',\r\n  };\r\n  const [ifile, setFile] = React.useState('');\r\n  const { imageStore } = useStore();\r\n  const { setCurrImage } = imageStore;\r\n  const onChangeFileHandler = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files !== undefined && event.target.files !== null && event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      const image = new ImageEntity(0, file.name, '', '', '', '');\r\n      image.file = file;\r\n      setCurrImage(image);\r\n      setFile(URL.createObjectURL(file));\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <div>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <input type=\"file\" name=\"file\" onChange={onChangeFileHandler} />\r\n              <img src={ifile} alt=\"\" style={styleInput} />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default CardUploadImageFile;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport FormImageDetails from '../molecules/image/FormImageDetails';\r\nimport CardEditImageFile from '../molecules/image/CardEditImageFile';\r\nimport CardUploadImageFile from '../molecules/image/CardUploadImageFile';\r\n\r\ninterface IProps { }\r\n\r\nconst UpdateImagePage: React.FC<IProps> = observer(() => {\r\n  const styleDiv = {\r\n    margin: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  };\r\n  const styleDiv1 = {\r\n    margin: '20px',\r\n    width: '450px',\r\n  };\r\n  const styleDiv2 = {\r\n    margin: '20px',\r\n  };\r\n  const styleTab = {\r\n    marginTop: '20px',\r\n  };\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div style={styleDiv}>\r\n      <div style={styleDiv1}>\r\n        <Tabs\r\n          defaultActiveKey=\"editimage\"\r\n          id=\"image-tabs\"\r\n        >\r\n          <Tab eventKey=\"editimage\" title={t('edit-image')} style={styleTab}>\r\n            <CardEditImageFile />\r\n          </Tab>\r\n          <Tab eventKey=\"uploadimage\" title={t('upload-image')} style={styleTab}>\r\n            <CardUploadImageFile />\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n      <div style={styleDiv2}>\r\n        <FormImageDetails />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default UpdateImagePage;\r\n"],"sourceRoot":""}