{"version":3,"sources":["components/atoms/ButtonToggle.tsx","components/atoms/Select.tsx","stores/mapUtils.ts","components/molecules/map/markers/IconCar.tsx","components/molecules/map/markers/IconMotorcycle.tsx","components/molecules/map/markers/IconWalk.tsx","components/molecules/map/markers/IconBike.tsx","components/molecules/map/markers/IconScooter.tsx","components/molecules/map/markers/IconQuestion.tsx","components/molecules/map/markers/IconBus.tsx","components/molecules/map/markers/IconTruck.tsx","components/molecules/map/markers/IconEmpty.tsx","components/atoms/AccidentPopUp.tsx","components/molecules/map/MarkerSvg.tsx","components/molecules/map/AccidentsMarkers.tsx","components/molecules/map/AccidentHeatLayer.tsx","components/molecules/map/Legend.jsx","components/molecules/map/LegendWarpper.tsx","components/organisms/MapAccidents.tsx"],"names":["ButtonToggle","condtion","textTrue","textFalse","disabled","onClick","style","t","useTranslation","className","variant","styleSelect","width","Select","label","id","data","value","onChange","opttions","map","x","index","val","text","Group","as","Col","controlId","Label","Control","e","target","getColorByVehicle","category","res","getColorByAccidentType","getColorByAccidentSelfOrNot","getColorBySeverity","severity","getColorByDayNight","getColorByGender","getColorByRoadType","createLegendArr","grades","getColorfunc","labels","forEach","push","IconCar","fill","height","viewBox","xmlns","d","stroke","cx","cy","r","transform","x1","x2","y1","y2","IconMotorcycle","IconWalk","IconBike","IconScooter","strokeWidth","strokeLinecap","points","IconQuestion","IconBus","IconTruck","IconEmpty","AccidentsPopUp","language","pStyle","color","undefined","injured_type_hebrew","Popup","accident_timestamp","day_in_week_hebrew","day_night_hebrew","injury_severity_hebrew","vehicle_vehicle_type_hebrew","sex_hebrew","age_group_hebrew","population_type_hebrew","accident_yishuv_name","street1_hebrew","street2_hebrew","road1","road2","road_segment_name","road_type_hebrew","location_accuracy_hebrew","accident_type_hebrew","vehicles","speed_limit_hebrew","multi_lane_hebrew","one_lane_hebrew","road_width_hebrew","customMarketIcon","iconMarkup","divIcon","html","iconAnchor","popupAnchor","MarkerSvg","colorBy","markerIconsType","lPoint","L","LatLng","latitude","longitude","getColors","icon","pin","renderToStaticMarkup","getEmptyIcon","getSVGPinByCategory","Marker","position","AccidentPopUp","AccidentsMarkers","observer","useStore","filterStore","mapStore","uiStore","isUse2StepsMarkers","markersLoadStep","dataMarkersLean","dataAllInjuries","bboxType","dataMarkersInBounds","useSmallMarkers","markerColorType","markers","BBoxType","NO_BBOX","toJS","_id","error","logger","AccidentHeatLayer","fitBoundsOnUpdate","newArr","fitBoundsOnLoad","longitudeExtractor","m","latitudeExtractor","intensityExtractor","parseFloat","legendHtmlFor","title","header","i18n","createLegendByColorType","unshift","join","Legend","useLeaflet","useEffect","legend","control","onAdd","div","DomUtil","create","innerHTML","addTo","remove","LegendWarpper","styels","buttonsPanel","display","justifyContent","flexWrap","paddingTop","margin","MapAccidents","mapRef","useRef","heatLayerHidden","mapCenter","mapZoom","updateMapBounds","reactMapCenter","onMapLoad","heatLayer","setMapRef","current","leafletElement","getZoom","setZoom","Map","ref","center","zoom","maxWidth","onmoveend","TileLayer","attribution","url","SelectMarkersColorType","SelectMarkersIConType","CurrButtonTuggleHeatLayer","MapInvalidateSize","isLoading","toggleHeatLayer","styles","toggleUseSmallMarkers","divStyle","labelspan","marginTop","fontWeight","setMarkerIconsType","markerIconTypesArr","setMarkerColorType","markerColorTypesArr","didMountRef","isReadyToRenderMap","setTimeout","invalidateSize"],"mappings":"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","file":"static/js/9.72672093.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\ninterface IProps {\r\n  condtion: boolean,\r\n  textTrue: string,\r\n  textFalse: string,\r\n  disabled?: boolean,\r\n  style?: any,\r\n  onClick: () => void\r\n}\r\nconst ButtonToggle: React.FC<IProps> = ({\r\n  condtion, textTrue, textFalse, disabled = false ,onClick,style\r\n} : IProps) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Button\r\n      className=\"btn-sm\"\r\n      variant=\"primary\"\r\n      disabled = {disabled}\r\n      onClick={() => { onClick(); }}\r\n      style={{...style}}\r\n    >\r\n      {condtion ? t(textTrue) : t(textFalse)}\r\n    </Button>\r\n  );\r\n};\r\nexport default ButtonToggle;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  id: string;\r\n  data: any[];\r\n  value: string;\r\n  onChange: (val: string) => void;\r\n}\r\nconst styleSelect = {\r\n  width: '150px',\r\n};\r\n\r\nconst Select: React.FC<IProps> = ({ label, id, data, value, onChange }) => {\r\n  const { t } = useTranslation();\r\n  const opttions = data.map((x: any, index) => <option value={x.val} key={index}>{t(x.text)}</option>)\r\n  return (\r\n    <div>\r\n      <Form.Group as={Col} controlId={id}>\r\n        {label && <Form.Label className=\"selectLabel\">\r\n          {t(label)}:\r\n        </Form.Label>}\r\n        <Form.Control\r\n          as=\"select\"\r\n          className=\"form-select form-select-sm\"\r\n          style={styleSelect}\r\n          value={value}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => { onChange(e.target.value); }}\r\n        >\r\n          {opttions}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import Accident from '../types/Accident';\r\n\r\nexport const getColorByVehicle = (category: string) => {\r\n    let res = '';\r\n    switch (category) {\r\n        case '':\r\n        case 'הולך רגל':\r\n            res = '#4cc9f0';\r\n            break;\r\n        case 'רכב נוסעים פרטי':\r\n        case 'מכונית':\r\n            res = '#f72585';\r\n            break;\r\n        case 'אופנוע עד 50 סמ\"ק':\r\n        case 'אופנוע 51 עד 125 סמ\"ק':\r\n        case 'אופנוע 126 עד 400 סמ\"ק':\r\n        case 'אופנוע 401+ סמ\"ק':\r\n        case 'אופנוע':\r\n            res = '#b5179e';\r\n            break;\r\n        case 'אופניים':\r\n            res = '#4895ef';\r\n            break;\r\n        case 'אופניים חשמליים':\r\n        case 'חשמלי דו גלגלי':\r\n            res = '#3f37c9';\r\n            break;\r\n        case 'קורקינט חשמלי':\r\n            res = '#3f37c9';\r\n            break;\r\n        default:\r\n            res = '#FE4E00';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByAccidentType = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'פגיעה בהולך רגל':\r\n            res = '#f94144';\r\n            break;\r\n        case 'התנגשות אחור אל צד':\r\n            res = '#277da1';\r\n            break;\r\n        case 'התנגשות אחור בחזית':\r\n            res = '#577590';\r\n            break;\r\n        case 'התנגשות חזית באחור':\r\n            res = '#577590';\r\n            break;\r\n        case 'התנגשות חזית בחזית':\r\n            res = '#43aa8b';\r\n            break;\r\n        case 'התנגשות חזית בצד':\r\n            res = '#90be6d';\r\n            break;\r\n        case 'התנגשות צד בצד':\r\n            res = '#f9c74f';\r\n            break;\r\n        case 'התנגשות עם בעל חיים':\r\n        case 'התנגשות עם עצם דומם':\r\n        case 'התנגשות עם רכב חונה':\r\n        case 'התנגשות עם רכב שנעצר ללא חניה':\r\n            res = '#f9844a';\r\n            break;\r\n        case 'החלקה':\r\n            res = '#f8961e';\r\n            break;\r\n        case 'התהפכות':\r\n            res = '#f3722c';\r\n            break;\r\n        default:\r\n            res = '#333333';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByAccidentSelfOrNot = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'עצמית':\r\n        case 'החלקה':\r\n        case 'התהפכות':\r\n        case 'התנגשות עם עצם דומם':\r\n        case 'התנגשות עם רכב חונה':\r\n        case 'ירידה מהכביש או עלייה למדרכה': \r\n        case 'פגיעה בנוסע בתוך כלי הרכב':\r\n        case 'נפילה מרכב נע':\r\n            res = '#138D75';\r\n            break;\r\n        default:\r\n            res = '#f94144';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorBySeverity = (severity: string) => {\r\n    let res = '';\r\n    switch (severity) {\r\n        case 'הרוג':\r\n            res = '#CA273B';\r\n            break;\r\n        default:\r\n            res = '#F8A141';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByDayNight = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'יום':\r\n            res = '#ffcc00';\r\n            break;\r\n        default:\r\n            res = '#333333';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\nexport const getColorByGender = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'נקבה':\r\n            res = '#4895ef';\r\n            break;\r\n        case 'זכר':\r\n            res = '#1E6091';\r\n            break;\r\n        default:\r\n            res = '#FDE2E4';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByRoadType = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'לא-עירונית לא בצומת':\r\n        case 'עירונית לא בצומת':\r\n        case 'לא בצומת':\r\n            res = '#4895ef';\r\n            break;\r\n        case 'לא-עירונית בצומת':\r\n        case 'עירונית בצומת':\r\n        case 'בצומת':\r\n            res = '#CD6155';\r\n            break;\r\n        default:\r\n            res = '#FDE2E4';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColors = (colorBy: string, data: Accident) => {\r\n    let res = '';\r\n    switch (colorBy) {\r\n        case 'Severity':\r\n            res = getColorBySeverity(data.injury_severity_hebrew);\r\n            break;\r\n        case 'Vehicle':\r\n            res = getColorByVehicle(data.vehicle_vehicle_type_hebrew);\r\n            break;\r\n        case 'DayNight':\r\n            res = getColorByDayNight(data.day_night_hebrew);\r\n            break;\r\n        case 'Gender':\r\n            res = getColorByGender(data.sex_hebrew);\r\n            break;\r\n        case 'RoadType':\r\n            res = getColorByRoadType(data.road_type_hebrew);\r\n            break;\r\n        case 'AccidentType':\r\n            res = getColorByAccidentType(data.accident_type_hebrew);\r\n            break;\r\n        case 'SelfOrNotAcc':\r\n                res = getColorByAccidentSelfOrNot(data.accident_type_hebrew);\r\n                break;    \r\n        default:\r\n            res = getColorBySeverity(data.injury_severity_hebrew);\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\n// export const legendHtmlFor = (colorBy: string) => [\r\n//     `<h3>${string}</h3>`,\r\n//     description && `<p>${description}</p>`,\r\n//   ].join('\\n');\r\nexport const createLegendByColorType = (colorBy: string) =>\r\n  {\r\n      let grade = [];\r\n      let res = [];\r\n      switch (colorBy) {\r\n          case 'Severity':\r\n              grade = ['הרוג', 'פצוע קשה'];\r\n              res = createLegendArr(grade,getColorBySeverity);\r\n              break;\r\n          case 'Vehicle':\r\n              grade = [ 'חשמלי דו גלגלי', 'מכונית', 'אופנוע', 'לא ידוע', 'הולך רגל', 'אופניים'];\r\n              res = createLegendArr(grade,getColorByVehicle);\r\n              break;\r\n          case 'DayNight':\r\n              grade = ['לילה', 'יום',];\r\n              res = createLegendArr(grade,getColorByDayNight);\r\n              break;\r\n          case 'Gender':\r\n              grade = ['נקבה', 'זכר', 'לא ידוע'];\r\n              res = createLegendArr(grade,getColorByGender);\r\n              break;\r\n          case 'RoadType':\r\n              grade = ['לא בצומת', 'בצומת'];\r\n              res = createLegendArr(grade,getColorByRoadType);\r\n              break;\r\n          case 'AccidentType':\r\n              grade = ['התהפכות', 'החלקה', 'התנגשות אחור אל צד', 'התנגשות אחור בחזית','התנגשות חזית בצד','התנגשות צד בצד','התנגשות חזית בחזית','התנגשות עם עצם דומם','פגיעה בהולך רגל','אחר',];\r\n              res = createLegendArr(grade,getColorByAccidentType);\r\n              break;\r\n          case 'SelfOrNotAcc':\r\n              grade = ['לא עצמית','עצמית',];\r\n              res = createLegendArr(grade,getColorByAccidentSelfOrNot);\r\n              break;     \r\n          default:\r\n              grade = ['נקבה', 'זכר', 'לא ידוע'];\r\n              res = createLegendArr(grade,getColorByGender);\r\n              break;\r\n      }\r\n      return res;\r\n  }\r\nexport const createLegendArr = (grades: string[], getColorfunc: (value: string) => any) => {\r\n    const labels: any = [];\r\n    grades.forEach((val: string) => {\r\n        labels.push(\r\n        `<div><i style=\"background:${getColorfunc(val)}\"></i> ${val}</div>`\r\n        );\r\n    });\r\n    //labels.join('\\n');\r\n    return labels;\r\n};\r\n\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconCar: React.FC<IProps> = (({ fill= 'red', width = 24.6, height= 30}) => {\r\n  return (\r\n  // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M13 0C6.0974 0 0.481453 5.83195 0.481453 13C0.481453 15.1519 0.999529 17.2855 1.98441 19.1779L12.3154 33.5811C12.4529 33.8397 12.715 34 13 34C13.285 34 13.547 33.8397 13.6846 33.5811L24.0194 19.1715C25.0005 17.2855 25.5185 15.1518 25.5185 12.9999C25.5185 5.83195 19.9026 0 13 0Z\" fill={fill} />\r\n      <circle stroke=\"#FFF\" cx=\"5.116\" cy=\"17.427\" r=\"3\" id=\"svg_2\" transform=\"matrix(0.681942, 0, 0, 0.723209, 3.744888, 3.238379)\" />\r\n      <circle stroke=\"#FFF\" cx=\"21.116\" cy=\"17.427\" r=\"3\" id=\"svg_3\" transform=\"matrix(0.681942, 0, 0, 0.723209, 3.744888, 3.238379)\" />\r\n      <line stroke=\"#FFF\" x1=\"21.554\" x2=\"22.918\" y1=\"12.948\" y2=\"12.948\" id=\"svg_4\" />\r\n      <line stroke=\"#FFF\" x1=\"5.188\" x2=\"18.827\" y1=\"10.78\" y2=\"10.78\" id=\"svg_5\" />\r\n      <line stroke=\"#FFF\" x1=\"11.326\" x2=\"9.279\" y1=\"6.44\" y2=\"10.78\" id=\"svg_6\" />\r\n      <path stroke=\"#FFF\" d=\"M 20.191 15.842 L 22.918 15.842 C 23.327 15.842 23.6 15.552 23.6 15.118 L 23.6 13.672 C 23.6 12.082 22.373 10.78 20.872 10.78 L 18.827 10.78 L 16.235 7.453 C 15.69 6.802 14.94 6.44 14.122 6.44 L 8.938 6.44 C 7.915 6.44 6.961 7.091 6.483 8.031 L 5.188 10.78 L 4.506 10.78 C 3.756 10.78 3.142 11.431 3.142 12.226 L 3.142 15.118 C 3.142 15.552 3.415 15.842 3.824 15.842 L 5.188 15.842\" id=\"svg_7\" />\r\n      <line stroke=\"#FFF\" x1=\"9.279\" x2=\"16.099\" y1=\"15.842\" y2=\"15.842\" id=\"svg_8\" />\r\n    </svg>\r\n  );\r\n});\r\nexport default IconCar;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconMotorcycle: React.FC<IProps> = (({ fill= 'red', width = 24.6, height= 30}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"M 18.606 19.589 C 16.021 19.589 14.406 17.045 15.698 15.007 C 16.991 12.972 20.224 12.972 21.517 15.007 C 21.811 15.472 21.966 16 21.966 16.534 C 21.966 18.222 20.462 19.589 18.606 19.589 Z M 18.606 15.007 C 17.314 15.007 16.507 16.28 17.153 17.297 C 17.799 18.316 19.415 18.316 20.061 17.297 C 20.209 17.065 20.288 16.804 20.288 16.534 C 20.288 15.692 19.537 15.007 18.606 15.007 Z\" />\r\n      <path fill=\"#FFF\" d=\"M 6.85 19.589 C 4.267 19.589 2.647 17.045 3.942 15.007 C 5.233 12.972 8.467 12.972 9.758 15.007 C 10.054 15.472 10.209 16 10.209 16.534 C 10.209 18.222 8.705 19.589 6.85 19.589 Z M 6.85 15.007 C 5.556 15.007 4.751 16.28 5.396 17.297 C 6.043 18.316 7.659 18.316 8.305 17.297 C 8.451 17.065 8.531 16.804 8.531 16.534 C 8.531 15.692 7.779 15.007 6.85 15.007 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 12.728 17.297 L 7.691 17.297 C 7.043 17.297 6.638 16.662 6.965 16.152 C 7.113 15.916 7.392 15.772 7.691 15.772 L 12.728 15.772 C 13.375 15.772 13.778 16.408 13.456 16.916 C 13.304 17.154 13.028 17.297 12.728 17.297 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 13.567 15.007 L 11.889 15.007 C 11.664 15.008 11.451 14.928 11.292 14.787 L 8.185 11.954 L 6.011 11.954 C 5.786 11.955 5.574 11.875 5.416 11.733 L 4.575 10.969 C 4.115 10.551 4.326 9.839 4.953 9.687 C 5.244 9.617 5.554 9.694 5.768 9.885 L 6.357 10.428 L 8.531 10.428 C 8.754 10.428 8.967 10.506 9.127 10.649 L 12.233 13.482 L 13.258 13.482 L 15.963 11.375 C 16.114 11.256 16.307 11.19 16.508 11.19 L 19.101 11.19 C 19.29 11.186 19.444 11.05 19.447 10.879 C 19.449 10.795 19.412 10.709 19.345 10.649 L 15.492 7.153 C 15.032 6.734 15.243 6.022 15.869 5.871 C 16.162 5.799 16.471 5.875 16.684 6.068 L 20.529 9.573 C 20.915 9.915 21.13 10.388 21.125 10.879 C 21.125 11.895 20.221 12.718 19.101 12.718 L 16.818 12.718 L 14.114 14.826 C 13.96 14.943 13.769 15.007 13.567 15.007 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 11.889 11.954 L 6.011 11.954 C 5.364 11.954 4.961 11.317 5.283 10.809 C 5.434 10.573 5.71 10.428 6.011 10.428 L 11.545 10.428 L 12.973 9.122 C 13.132 8.98 13.344 8.9 13.567 8.902 L 15.249 8.902 C 15.894 8.902 16.299 9.537 15.976 10.046 C 15.824 10.282 15.547 10.428 15.249 10.428 L 13.912 10.428 L 12.485 11.733 C 12.326 11.875 12.112 11.955 11.889 11.954 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 17.768 8.137 L 17.768 11.954 L 19.101 11.954 C 20.013 11.957 20.588 11.063 20.136 10.342 C 20.082 10.258 20.017 10.183 19.942 10.114 Z\" /> \r\n    </svg>\r\n  );\r\n});\r\nexport default IconMotorcycle;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconWalk: React.FC<IProps> = (({ fill= 'red', width = 24.6, height= 30}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"M 8.758 11.611 L 11.571 9.763 C 11.887 9.554 12.27 9.446 12.661 9.459 C 13.64 9.48 14.495 10.06 14.793 10.902 C 14.955 11.366 15.104 11.678 15.239 11.841 C 16.067 12.839 17.368 13.427 18.749 13.426 L 18.749 15.014 C 16.913 15.016 15.173 14.274 14.008 12.993 L 13.396 16.132 L 15.204 17.504 L 17.155 22.352 L 15.506 22.895 L 13.715 18.448 L 10.74 16.189 C 10.242 15.826 10.002 15.248 10.113 14.678 L 10.56 12.388 L 9.966 12.779 L 8.099 15.102 L 6.679 14.169 L 8.743 11.601 L 8.758 11.611 Z M 11.312 19.522 L 8.492 22.562 L 7.147 21.543 L 9.759 18.729 L 10.414 16.998 L 11.986 18.189 L 11.312 19.522 Z\" />\r\n      <circle fill=\"#FFF\" cx=\"24.241\" cy=\"8.905\" r=\"3.8\" transform=\"matrix(0.508679, 0, 0, 0.466243, 1.41729, 3.309399)\"/>\r\n    </svg>\r\n  );\r\n});\r\nexport default IconWalk;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconBike: React.FC<IProps> = (({ fill= 'red', width = 24.6, height= 30}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path className=\"bike1\" d=\"M 7.871 20.859 C 5.374 20.859 3.812 17.908 5.061 15.547 C 6.311 13.186 9.432 13.186 10.681 15.547 C 10.967 16.085 11.117 16.694 11.117 17.319 C 11.113 19.273 9.662 20.856 7.871 20.859 Z M 7.871 15.35 C 6.483 15.35 5.617 16.989 6.311 18.302 C 7.005 19.614 8.739 19.614 9.432 18.302 C 9.589 18.004 9.674 17.668 9.674 17.325 C 9.679 16.235 8.871 15.35 7.871 15.35 Z\" />\r\n      <path className=\"bike1\" d=\"M 17.248 20.859 C 14.749 20.859 13.187 17.908 14.437 15.547 C 15.686 13.186 18.808 13.186 20.058 15.547 C 20.342 16.085 20.493 16.694 20.493 17.319 C 20.488 19.273 19.037 20.856 17.248 20.859 Z M 17.248 15.35 C 15.859 15.35 14.991 16.989 15.686 18.302 C 16.379 19.614 18.114 19.614 18.808 18.302 C 18.966 18.003 19.05 17.663 19.05 17.319 C 19.05 16.231 18.242 15.35 17.248 15.35 Z\" />\r\n      <path className=\"bike1\" d=\"M 12.56 18.498 C 12.16 18.498 11.838 18.146 11.838 17.711 L 11.838 14.894 L 9.531 12.383 C 9.247 12.075 9.247 11.573 9.531 11.265 L 11.564 9.093 C 11.918 8.625 12.602 8.751 12.797 9.319 C 12.907 9.643 12.811 10.007 12.56 10.218 L 11.053 11.792 L 13.058 13.972 C 13.205 14.126 13.285 14.341 13.281 14.564 L 13.281 17.711 C 13.281 18.146 12.957 18.498 12.56 18.498 Z\" />\r\n      <path className=\"bike1\" d=\"M 16.395 12.745 L 14.233 12.745 C 14.044 12.744 13.862 12.662 13.727 12.517 L 11.564 10.218 C 11.124 9.848 11.214 9.098 11.728 8.867 C 12.02 8.735 12.357 8.827 12.56 9.093 L 14.514 11.17 L 16.383 11.17 C 16.937 11.17 17.284 11.826 17.006 12.351 C 16.878 12.594 16.639 12.745 16.383 12.745 Z\" />\r\n      <circle className=\"bike1\" cx=\"14.32\" cy=\"4\" r=\"2\" transform=\"matrix(0.721159, 0, 0, 0.787069, 3.905845, 4.331152)\" />\r\n    </svg>\r\n  );\r\n});\r\nexport default IconBike;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconScooter: React.FC<IProps> = (({ fill = 'red', width = 24.6, height = 30 }) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <polyline stroke=\"#FFF\" strokeWidth=\"1\" strokeLinecap=\"round\" points=\"15.363 6.284 16.84 6.284 18.811 18.838\" />\r\n      <circle stroke=\"#FFF\" strokeWidth=\"2\" cx=\"28\" cy=\"25\" r=\"3\" transform=\"matrix(0.492416, 0, 0, 0.62765, 5.022794, 3.145868)\" />\r\n      <circle stroke=\"#FFF\" strokeWidth=\"2\" cx=\"4\" cy=\"25\" r=\"3\" transform=\"matrix(0.492416, 0, 0, 0.62765, 5.022794, 3.145868)\" />\r\n      <path stroke=\"#FFF\" strokeWidth=\"1\" strokeLinecap=\"round\" d=\"M 6.993 15.07 C 8.618 15.07 9.947 16.766 9.947 18.838\" />\r\n      <polyline stroke=\"#FFF\" strokeWidth=\"1\" strokeLinecap=\"round\" points=\"17.825 13.815 15.363 18.838 6.993 18.838\" />\r\n    </svg>\r\n  );\r\n});\r\nexport default IconScooter;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconQuestion: React.FC<IProps> = (({ fill= 'red', width = 24.6, height= 30}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"M 7.415 9.199 C 7.709 8.437 8.075 7.814 8.589 7.329 C 9.102 6.845 9.763 6.43 10.495 6.153 C 11.228 5.876 12.11 5.737 13.062 5.737 C 13.796 5.737 14.53 5.876 15.191 6.083 C 15.85 6.292 16.437 6.638 16.95 6.984 C 17.465 7.329 17.83 7.884 18.124 8.437 C 18.418 8.99 18.564 9.684 18.564 10.444 C 18.564 11.414 18.343 12.176 17.903 12.869 C 17.465 13.562 16.877 14.183 16.216 14.806 C 15.63 15.361 15.191 15.775 14.898 16.052 C 14.53 16.329 14.31 16.675 14.163 16.952 C 14.017 17.229 13.87 17.575 13.87 17.991 C 13.796 18.406 13.796 18.684 13.796 19.444 L 12.11 19.444 C 12.11 18.684 12.11 18.338 12.256 17.854 C 12.329 17.299 12.549 16.883 12.771 16.398 C 12.991 15.982 13.356 15.568 13.724 15.152 C 14.163 14.737 14.603 14.322 15.191 13.838 C 15.704 13.422 16.144 12.938 16.437 12.384 C 16.804 11.829 16.95 11.207 16.95 10.584 C 16.95 10.099 16.877 9.615 16.657 9.199 C 16.437 8.784 16.144 8.437 15.85 8.091 C 15.556 7.745 15.117 7.538 14.603 7.4 C 14.163 7.26 13.649 7.123 13.137 7.123 C 12.403 7.123 11.743 7.26 11.228 7.466 C 10.644 7.676 10.202 8.022 9.835 8.437 C 9.47 8.853 9.176 9.337 9.029 9.891 C 8.882 10.444 8.736 10.93 8.811 11.553 L 7.122 11.553 C 7.05 10.584 7.122 9.96 7.415 9.199 L 7.415 9.199 Z M 11.816 21.314 L 13.87 21.314 L 13.87 23.253 L 11.816 23.253 L 11.816 21.314 Z\" id=\"Fill-48\"/>\r\n    </svg>\r\n  );\r\n});\r\nexport default IconQuestion;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconBus: React.FC<IProps> = (({ fill = 'red', width = 24.6, height = 30 }) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path id=\"svg_2\" d=\"M 8 19.5 C 5.8 19.5 4.4 17.3 5.5 15.6 C 6.6 13.9 9.4 13.9 10.5 15.6 C 10.8 16 10.9 16.4 10.9 16.9 C 10.9 18.3 9.6 19.5 8 19.5 Z M 8 16 C 7.3 16 6.8 16.8 7.2 17.3 C 7.5 17.9 8.5 17.9 8.8 17.3 C 8.9 17.2 9 17 9 16.9 C 9 16.4 8.5 16 8 16 Z\" stroke=\"none\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_3\" d=\"M 18.2 19.6 C 16 19.6 14.6 17.4 15.7 15.7 C 16.8 14 19.6 14 20.7 15.7 C 20.9 16.1 21.1 16.5 21.1 17 C 21.1 18.4 19.8 19.6 18.2 19.6 Z M 18.2 16.1 C 17.4 16.1 17 16.9 17.4 17.4 C 17.7 18 18.7 18 19 17.4 C 19.1 17.3 19.2 17.1 19.2 17 C 19.2 16.5 18.7 16.1 18.2 16.1 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_4\" d=\"M 15.8 17.8 L 9.9 17.8 C 9.3 17.8 8.9 17 9.2 16.5 C 9.3 16.2 9.6 16 9.9 16 L 15.8 16 C 16.5 16 16.9 16.8 16.6 17.3 C 16.4 17.6 16.1 17.8 15.8 17.8 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_5\" d=\"M 5.9 17.6 L 4.9 17.6 C 3.9 17.6 3 16.9 3 16 L 3 8.7 C 3 7.3 4.3 6.2 5.9 6.2 L 17.5 6.2 C 20.1 6.2 22.3 8.1 22.3 10.3 L 22.3 13.6 C 22.3 14.2 21.5 14.6 20.8 14.3 C 20.5 14.1 20.3 13.9 20.3 13.6 L 20.3 10.3 C 20.3 9 19.1 7.9 17.5 7.9 L 5.9 7.9 C 5.4 7.9 4.9 8.2 4.9 8.7 L 4.9 16 L 5.9 16 C 6.6 16 7.1 16.7 6.7 17.2 C 6.5 17.5 6.2 17.6 5.9 17.6 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_6\" stroke=\"#ffffff\" d=\"M 20.5 11.8 L 8.9 11.8 C 8.2 11.8 7.7 11.5 8.1 11.2 C 8.2 11 8.6 10.9 8.9 10.9 L 20.5 10.9 C 21.2 10.9 21.7 11.3 21.3 11.6 C 21.1 11.8 20.8 11.8 20.5 11.8 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_7\" d=\"M 21.3 11.7 L 21.3 10.8 C 21.3 8.9 19.7 7.4 17.8 7.4 L 17.8 11.7 L 21.3 11.7 Z\" fill=\"#ffffff\"></path>\r\n    </svg>\r\n  );\r\n});\r\nexport default IconBus;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconTruck: React.FC<IProps> = (({ fill = 'red', width = 24.6, height = 30 }) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"m6.66667,22a3,3 0 1 1 3,-3a3,3 0 0 1 -3,3zm0,-4a1,1 0 1 0 1,1a1,1 0 0 0 -1,-1z\" id=\"svg_2\" />\r\n      <path fill=\"#FFF\" d=\"m18.66667,22a3,3 0 1 1 3,-3a3,3 0 0 1 -3,3zm0,-4a1,1 0 1 0 1,1a1,1 0 0 0 -1,-1z\" id=\"svg_3\" />\r\n      <path fill=\"#FFF\" d=\"m13.66667,20l-5,0a1,1 0 0 1 0,-2l4,0l0,-10l-8,0l0,8a1,1 0 0 1 -2,0l0,-9a1,1 0 0 1 1,-1l10,0a1,1 0 0 1 1,1l0,12a1,1 0 0 1 -1,1z\" id=\"svg_4\" />\r\n      <path fill=\"#FFF\" d=\"m21.66667,16a1,1 0 0 1 -1,-1l0,-0.67l-2.2,-2.93a1,1 0 0 0 -0.8,-0.4l-4,0a1,1 0 0 1 0,-2l4,0a3,3 0 0 1 2.4,1.2l2.4,3.2a1,1 0 0 1 0.2,0.6l0,1a1,1 0 0 1 -1,1z\" id=\"svg_5\" />\r\n      <path fill=\"#FFF\" d=\"m20.66667,14l-2,0a2,2 0 0 1 -2,-2l0,-2l2,0l2,4z\" id=\"svg_6\" />\r\n      <path fill=\"#FFF\" d=\"m19.66667,14l-3,0a1,1 0 0 1 0,-2l3,0a1,1 0 0 1 0,2z\" id=\"svg_7\" />\r\n    </svg>\r\n  );\r\n});\r\nexport default IconTruck;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  fill?: string,\r\n  width?: number,//original 45\r\n  height?: number//original 37\r\n}\r\n\r\nconst IconEmpty: React.FC<IProps> = (({ fill= 'red', width = 24.6, height= 30}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} /> \r\n      <circle fill= \"#fff\" cx=\"12.764\" cy=\"12.26\" r=\"5.228\"/>\r\n    </svg>\r\n  );\r\n});\r\nexport default IconEmpty;\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable space-before-blocks */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Popup } from 'react-leaflet';\r\nimport Accident from '../../types/Accident';\r\n\r\ninterface IProps {\r\n  data: Accident,\r\n  language: string\r\n}\r\n\r\nconst AccidentsPopUp: React.FC<IProps> = (({ data: x, language }) => {\r\n  const pStyle = {\r\n    color: '#004ba0',\r\n  };\r\n  const { t } = useTranslation();\r\n  if (x.injured_type_hebrew !== undefined) {\r\n    return (\r\n      <Popup>\r\n        <div className={`text${language}`}>\r\n          <div><span style={pStyle}>{t('When')}:</span> {x.accident_timestamp}, {x.day_in_week_hebrew}, {x.day_night_hebrew}</div>\r\n          <div><span style={pStyle}>{t('Who')}:</span> {x.injured_type_hebrew}, {x.injury_severity_hebrew}, {x.vehicle_vehicle_type_hebrew ? `${x.vehicle_vehicle_type_hebrew}, ` : ''} {x.sex_hebrew}, {x.age_group_hebrew}, {x.population_type_hebrew}</div>\r\n          <div><span style={pStyle}>{t('Where')}:</span>\r\n            {x.accident_yishuv_name ? `${x.accident_yishuv_name}, ` : ''}\r\n            {x.street1_hebrew ? `${x.street1_hebrew}, ` : ''}\r\n            {x.street2_hebrew ? `${x.street2_hebrew}, ` : ''}\r\n            {x.road1 ? `${t('Road')} ${x.road1}, ` : ''}\r\n            {x.road2 ? `${x.road2}, ` : ''}\r\n            {x.road_segment_name ? `${x.road_segment_name}, ` : ''}\r\n            {x.road_type_hebrew}\r\n            {x.location_accuracy_hebrew ? ` (${x.location_accuracy_hebrew})` : ''} \r\n          </div>\r\n          <div><span style={pStyle}>{t('What')}:</span> {x.accident_type_hebrew} ({x.vehicles})</div>\r\n          <div><span style={pStyle}>{t('WhatRoad')}:</span> {x.speed_limit_hebrew ? `${x.speed_limit_hebrew}, ` : ''}{x.multi_lane_hebrew ? `${x.multi_lane_hebrew}, ` : ''}{x.one_lane_hebrew ? `${x.one_lane_hebrew}, ` : ''}{x.road_width_hebrew ? `${x.road_width_hebrew}, ` : ''}</div>\r\n        </div>\r\n      </Popup>\r\n    );\r\n  }\r\n  return null;\r\n});\r\nexport default AccidentsPopUp;\r\n","import React from 'react';\r\nimport L, { divIcon } from 'leaflet';\r\nimport { Marker } from 'react-leaflet';\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport { getColors } from '../../../stores/mapUtils';\r\nimport Accident from '../../../types/Accident';\r\n\r\n// import { getColorByVehicle } from '../../../services/mapUtils';\r\nimport IconCar from './markers/IconCar';\r\nimport IconMotorcycle from './markers/IconMotorcycle';\r\nimport IconWalk from './markers/IconWalk';\r\nimport IconBike from './markers/IconBike';\r\nimport IconScooter from './markers/IconScooter';\r\nimport IconQuestion from './markers/IconQuestion';\r\nimport IconBus from './markers/IconBus';\r\nimport IconTruck from './markers/IconTruck';\r\nimport IconEmpty from './markers/IconEmpty';\r\nimport AccidentPopUp from '../../atoms/AccidentPopUp';\r\n\r\n// const iconSize = {\r\n//   iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41],\r\n// };\r\n\r\nconst customMarketIcon = (iconMarkup:any) => {\r\n  const res = divIcon({\r\n    html: iconMarkup,\r\n    className: 'ship-div-icon',\r\n    iconAnchor: [0, 30],\r\n    popupAnchor: [1, -32],\r\n  });\r\n  return res;\r\n};\r\n\r\nconst getSVGPinByCategory = (category: string, color: string) => {\r\n  let pin;\r\n  switch (category) {\r\n    case '':\r\n      pin = <IconWalk fill={color} />;\r\n      break;\r\n    case 'רכב נוסעים פרטי':\r\n      pin = <IconCar fill={color} />;\r\n      break;\r\n    case 'אופנוע עד 50 סמ\"ק':\r\n    case 'אופנוע 51 עד 125 סמ\"ק':\r\n    case 'אופנוע 126 עד 400 סמ\"ק':\r\n    case 'אופנוע 401+ סמ\"ק':\r\n      pin = <IconMotorcycle fill={color} />;\r\n      break;\r\n    case 'אופניים':\r\n      pin = <IconBike fill={color} />;\r\n      break;\r\n    case 'אופניים חשמליים':\r\n      pin = <IconBike fill={color} />;\r\n      break;\r\n    case 'קורקינט חשמלי':\r\n      pin = <IconScooter fill={color} />;\r\n      break;\r\n    case 'אוטובוס':\r\n    case 'אוטובוס זעיר':\r\n      pin = <IconBus fill={color} />;\r\n      break;\r\n    case 'משא 3.6 עד 9.9 טון':\r\n    case 'משא 10.0 עד 12.0 טון':\r\n    case 'משא 12.1 עד 15.9 טון':\r\n    case 'משא 16.0 עד 33.9 טון':\r\n    case 'משא 34.0+ טון':\r\n      pin = <IconTruck fill={color} />;\r\n      break;\r\n    default:\r\n      pin = <IconQuestion fill={color} />;\r\n      break;\r\n  }\r\n  const iconMarkup = renderToStaticMarkup(\r\n    pin,\r\n  );\r\n  const res = customMarketIcon(iconMarkup);\r\n  return res;\r\n};\r\n\r\nconst getEmptyIcon = (color: string) => {\r\n  const pin = <IconEmpty fill={color} />;\r\n  const iconMarkup = renderToStaticMarkup(\r\n    pin,\r\n  );\r\n  const res = customMarketIcon(iconMarkup);\r\n  return res;\r\n};\r\n\r\ninterface IProps {\r\n  data: Accident,\r\n  language: string,\r\n  colorBy : string,\r\n  markerIconsType: string,\r\n}\r\nconst MarkerSvg: React.FC<IProps> = (({\r\n  data, language, colorBy, markerIconsType,\r\n}) => {\r\n  const lPoint = new L.LatLng(data.latitude, data.longitude);\r\n  const color = getColors(colorBy, data);\r\n  const icon = (markerIconsType === 'general') ? getEmptyIcon(color)\r\n    : getSVGPinByCategory(data.vehicle_vehicle_type_hebrew, color);\r\n  // console.log(data.vehicle_vehicle_type_hebrew);\r\n  // const icon: L.Icon = setIconBySeverity(data.injury_severity_hebrew, useSmallMarkers);\r\n  return (\r\n    <Marker position={lPoint} icon={icon}>\r\n      <AccidentPopUp data={data} language={language} />\r\n    </Marker>\r\n  );\r\n});\r\n\r\nexport default MarkerSvg;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\n// import L from 'leaflet'\r\nimport AccidentsMarker from './AccidentsMarker';\r\nimport MarkerSvg from './MarkerSvg';\r\nimport { useStore } from '../../../stores/storeConfig';\r\nimport { BBoxType } from '../../../stores/MapStore';\r\nimport logger from '../../../services/logger';\r\nimport Accident from '../../../types/Accident';\r\n\r\ninterface IProps { }\r\nconst AccidentsMarkers: FunctionComponent<IProps> = observer(() => {\r\n  const { filterStore, mapStore, uiStore } = useStore();\r\n  const {\r\n    isUse2StepsMarkers, markersLoadStep, dataMarkersLean, dataAllInjuries,\r\n  } = filterStore;\r\n  const { bboxType, dataMarkersInBounds, useSmallMarkers, markerIconsType, markerColorType} = mapStore;\r\n  let reactMarkers;\r\n  if (bboxType !== BBoxType.NO_BBOX) reactMarkers = toJS(dataMarkersInBounds);\r\n  else if (isUse2StepsMarkers && markersLoadStep === 1) {\r\n    reactMarkers = toJS(dataMarkersLean);\r\n  } else {\r\n    reactMarkers = toJS(dataAllInjuries);\r\n  }\r\n  const markers = reactMarkers.map((x: Accident) => {\r\n    try {\r\n      if (x.latitude !== null && x.longitude !== null) {\r\n        return <MarkerSvg data={x} \r\n                language={uiStore.language} \r\n                colorBy={markerColorType}\r\n                markerIconsType={markerIconsType}\r\n                key={`marker-${x._id}`} />;\r\n        //return <AccidentsMarker data={x} language={uiStore.language} useSmallMarkers={useSmallMarkers} key={`marker-${x._id}`} />;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      logger.error(error);\r\n      return null;\r\n    }\r\n  });\r\n  return (\r\n    <div>\r\n      {markers}\r\n    </div>\r\n  );\r\n});\r\nexport default AccidentsMarkers;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\n// import L from 'leaflet'\r\n// @ts-ignore\r\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\r\nimport { useStore } from '../../../stores/storeConfig';\r\nimport { BBoxType } from '../../../stores/MapStore';\r\n// import logger from '../../services/logger';\r\n\r\ninterface IProps {\r\n  fitBoundsOnUpdate?: boolean| undefined;\r\n}\r\nconst AccidentHeatLayer: FunctionComponent<IProps> = observer(({ fitBoundsOnUpdate = false }: IProps) => {\r\n  const { mapStore, filterStore } = useStore();\r\n  const { bboxType, dataMarkersInBounds } = mapStore;\r\n  const { dataMarkersLean, dataAllInjuries, isUse2StepsMarkers } = filterStore;\r\n  let reactMarkers;\r\n  if (bboxType !== BBoxType.NO_BBOX) reactMarkers = toJS(dataMarkersInBounds);\r\n  else if (isUse2StepsMarkers) {\r\n    reactMarkers = toJS(dataMarkersLean);\r\n  } else {\r\n    reactMarkers = toJS(dataAllInjuries);\r\n  }\r\n  // logger.log(\"reactMarkers \", reactMarkers.length)\r\n  const newArr: any[] = reactMarkers.map((x) => [x.latitude, x.longitude, x._id]);\r\n\r\n  return (\r\n    <HeatmapLayer\r\n      fitBoundsOnLoad={fitBoundsOnUpdate}\r\n      fitBoundsOnUpdate={fitBoundsOnUpdate}\r\n      points={newArr}\r\n      longitudeExtractor={(m: any) => m[1]}\r\n      latitudeExtractor={(m: any) => m[0]}\r\n      intensityExtractor={(m: any) => parseFloat(m[2])}\r\n      />\r\n  );\r\n});\r\nexport default AccidentHeatLayer;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable class-methods-use-this */\r\n\r\nimport { useEffect } from 'react';\r\nimport { useLeaflet } from 'react-leaflet';\r\nimport i18n from 'i18next';\r\n// import PropTypes from \"prop-types\";\r\nimport L from 'leaflet';\r\nimport { createLegendByColorType } from '../../../stores/mapUtils.ts';\r\n\r\nconst legendHtmlFor = (title) => {\r\n  const header = `<h5>${i18n.t(title)}</h5>`;\r\n  const res = createLegendByColorType(title);\r\n  res.unshift(header);\r\n  return res.join('');\r\n};\r\n\r\nconst Legend = ({ title }) => {\r\n  const { map } = useLeaflet();\r\n  useEffect(() => {\r\n    const legend = L.control({ position: 'bottomleft' });\r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create('div', 'info legend');\r\n      div.innerHTML = legendHtmlFor(title);\r\n      return div;\r\n    };\r\n    legend.addTo(map);\r\n    return () => legend.remove();\r\n  }, [map, title]);\r\n  return null;\r\n};\r\n\r\n/* Legend.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n}; */\r\n\r\nexport default Legend;\r\n\r\n/*\r\nimport { MapControl, withLeaflet } from 'react-leaflet';\r\n// import { observer } from 'mobx-react';\r\nimport L from 'leaflet';\r\n// import { store } from '../../../stores/storeConfig.ts';\r\nimport { createLegendBySchema } from '../../../stores/mapUtils.ts';\r\n\r\n// const Legend = observer(\r\nclass Legend extends MapControl {\r\n  createLeafletElement(props) {}\r\n\r\n  componentDidMount() {\r\n    // const { mapStore } = store;\r\n    // const { markerColorType } = mapStore;\r\n    // console.log(markerColorType);\r\n    // console.log(this.props.byColor);\r\n    const legend = L.control({ position: 'bottomright' });\r\n    const div1 = L.DomUtil.create('div', 'info legend');\r\n    legend.onAdd = () => createLegendBySchema('Gender', div1);\r\n    const { map } = this.props.leaflet;\r\n    legend.addTo(map);\r\n  }\r\n}\r\n\r\nexport default withLeaflet(Legend);\r\n*/\r\n","import React, { useRef, useEffect } from 'react';\r\n// import { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport { useStore } from '../../../stores/storeConfig';\r\nimport Legend from './Legend';\r\n\r\ninterface IProps {\r\n}\r\nconst LegendWarpper: React.FC<{}> = observer(() => {\r\n  const { mapStore } = useStore();\r\n  const {markerColorType} = mapStore;\r\n  return (\r\n    <Legend\r\n    title={markerColorType}\r\n  />\r\n  );\r\n});\r\nexport default LegendWarpper;","import React, { useRef, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\n// import L from 'leaflet'\r\nimport { Map, TileLayer } from 'react-leaflet';\r\nimport AccidentsMarkers from '../molecules/map/AccidentsMarkers';\r\nimport AccidentHeatLayer from '../molecules/map/AccidentHeatLayer';\r\nimport LegendWarpper from '../molecules/map/LegendWarpper';\r\nimport ButtonToggle from '../atoms/ButtonToggle';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport { BBoxType } from '../../stores/MapStore';\r\nimport logger from '../../services/logger';\r\nimport Select from '../atoms/Select';\r\nimport 'leaflet-css';\r\n\r\n//React.CSSProperties \r\nconst styels: any = {\r\n  buttonsPanel: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap',\r\n    paddingTop: '0.2rem',\r\n    margin: '5px'\r\n  },\r\n};\r\n\r\ninterface IProps { }\r\nconst MapAccidents: React.FC<IProps> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const WRAPPER_STYLES = { height: '74vh', maxWidth: '100%' };\r\n  const mapRef = useRef<Map>(null);\r\n\r\n  const { mapStore } = useStore();\r\n  //mapStore.setMapRef(mapRef);\r\n\r\n  const { heatLayerHidden, mapCenter, mapZoom, updateMapBounds, onMapLoad } = mapStore;\r\n  const reactMapCenter = toJS(mapCenter);\r\n  const markers = heatLayerHidden && <AccidentsMarkers />;\r\n  const heatLayer = !heatLayerHidden && <AccidentHeatLayer />;\r\n\r\n  useEffect(() => {\r\n    mapStore.setMapRef(mapRef);\r\n    // use in mountOnEnter\r\n    updateMapBounds();\r\n    // prevent zoom  0 bug\r\n    if (mapRef.current !== null) {\r\n      const zoom = mapRef.current.leafletElement.getZoom();\r\n      if (zoom === 0) mapRef.current.leafletElement.setZoom(13);\r\n    }\r\n  },[]);\r\n  \r\n  return (\r\n    <div>\r\n      <Map\r\n        ref={mapRef}\r\n        center={reactMapCenter}\r\n        zoom={mapZoom}\r\n        // bounds={mapBounds}\r\n        // whenReady= {onMapLoad}\r\n        style={WRAPPER_STYLES}\r\n        onmoveend={updateMapBounds}\r\n      >\r\n        {heatLayer}\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {markers}\r\n        <LegendWarpper/>\r\n      </Map>\r\n      <div style={styels.buttonsPanel}>\r\n        <SelectMarkersColorType />\r\n        <SelectMarkersIConType />\r\n        <CurrButtonTuggleHeatLayer />\r\n      </div>\r\n      <MapInvalidateSize mapRef={mapRef} />\r\n      {/* {store.isReadyToRenderMap ? \" \" : \"\"} */}\r\n    </div>\r\n  );\r\n});\r\n\r\ninterface IPropsButtonTuggleHeatLayer { }\r\n\r\nconst CurrButtonTuggleHeatLayer: React.FC<IPropsButtonTuggleHeatLayer> = observer(() => {\r\n  const { mapStore, filterStore } = useStore();\r\n  const style = { width: '150px', height: '35px' }\r\n  return (\r\n    <ButtonToggle\r\n      condtion={mapStore.heatLayerHidden}\r\n      textTrue=\"HeatMap\"\r\n      textFalse=\"Markers\"\r\n      disabled={filterStore.isLoading}\r\n      onClick={mapStore.toggleHeatLayer}\r\n      style={style}\r\n    />\r\n  );\r\n});\r\n\r\nconst ButtonToggleSmallMarkers: React.FC<{}> = observer(() => {\r\n  const { mapStore } = useStore();\r\n  const { useSmallMarkers, toggleUseSmallMarkers } = mapStore;\r\n  return (\r\n    <ButtonToggle\r\n      condtion={useSmallMarkers}\r\n      textTrue=\"big-markers\"\r\n      textFalse=\"small-markers\"\r\n      onClick={toggleUseSmallMarkers}\r\n    />\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  divStyle: {\r\n    display: 'flex',\r\n  },\r\n  labelspan: {\r\n    marginTop: '7px',\r\n    fontWeight: 700\r\n  }\r\n}\r\nconst SelectMarkersIConType: React.FC<{}> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { mapStore } = useStore();\r\n  const { markerIconsType, setMarkerIconsType, markerIconTypesArr } = mapStore;\r\n  return (\r\n    <div style={styles.divStyle} id=\"map.iconType\">\r\n      <span style={styles.labelspan}>\r\n        {t('MarkersIconType')}:\r\n      </span>\r\n      <span>\r\n        <Select\r\n          id='map.SelectMarkersIConType'\r\n          value={markerIconsType}\r\n          data={markerIconTypesArr}\r\n          onChange={(val: string) => setMarkerIconsType(val)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst SelectMarkersColorType: React.FC<{}> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { mapStore } = useStore();\r\n  const { markerColorType, setMarkerColorType, markerColorTypesArr } = mapStore;\r\n  return (\r\n    <div style={styles.divStyle} id=\"map.iconColor\">\r\n      <span style={styles.labelspan}>\r\n        {t('MarkersColorType')}:\r\n      </span>\r\n      <span>\r\n        <Select\r\n          id='map.SelectMarkersColorType'\r\n          value={markerColorType}\r\n          data={markerColorTypesArr}\r\n          onChange={(val: string) => setMarkerColorType(val)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\n\r\ninterface IPropsMapInvalidateSize {\r\n  mapRef: React.RefObject<Map<any>>\r\n}\r\n\r\nconst MapInvalidateSize: React.FC<IPropsMapInvalidateSize> = observer(({ mapRef }) => {\r\n  const didMountRef = useRef(false);\r\n  const { mapStore } = useStore();\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      // like componentDidUpdate\r\n      if (mapRef.current) {\r\n        // invalidateSize - leaflet map rendered has a bug if container tab not active / hidden\r\n        // this event is fierd when parent tab is shown - to help render map and prevent css bug\r\n        if (mapStore.isReadyToRenderMap) {\r\n          setTimeout(() => {\r\n            if (mapRef.current !== null) mapRef.current.leafletElement.invalidateSize(false);\r\n          }, 300); // Adjust timeout to tab transition\r\n        }\r\n      }\r\n    } else didMountRef.current = true;\r\n  });\r\n  return <span>{mapStore.isReadyToRenderMap ? ' ' : ''}</span>;\r\n});\r\nexport default MapAccidents;\r\n"],"sourceRoot":""}