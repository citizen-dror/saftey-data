{"version":3,"sources":["components/molecules/FormImageDetails.tsx","components/molecules/CardEditImageFile.tsx","stores/ImageEntity.tsx","components/molecules/CardUploadImageFile.tsx","components/pages/UpdateImagePage.tsx"],"names":["styleControl1","width","styleControl2","GroupPlace","observer","name","imageStore","useStore","setCurrImageVal","myVal","currImage","place","Form","Group","as","Col","controlId","Label","Control","style","value","onChange","e","target","GroupTags","tags","GroupTitleHe","titlehe","GroupTextHe","texthe","GroupIndex","undefined","index","toString","Number","parseInt","FormImageDetails","submitImageFile","Row","disabled","filename","xs","titleen","texten","titlear","textar","Button","variant","onClick","styleSelect","styleCard","marginLeft","marginRight","CardEditImageFile","t","useTranslation","uiStore","getImages","setCurrImage","setCurrTag","isRTL","language","useEffect","arrayImages","toJS","imageList","images","map","x","original","thumbnail","originalTitle","description","isGotImages","length","Card","items","disableKeyDown","thumbnailPosition","onSlide","currentIndex","handleOnSlide","ImageEntity","_id","file","this","observable","CardUploadImageFile","React","useState","ifile","setFile","type","event","files","image","URL","createObjectURL","src","alt","marginTop","UpdateImagePage","styleTab","margin","display","justifyContent","Tabs","defaultActiveKey","id","Tab","eventKey","title"],"mappings":"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","file":"static/js/14.abac3fb6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// import IimageEntity from '../../stores/ImageEntity';\r\nimport { useStore } from '../../stores/storeConfig';\r\n\r\n\r\nconst styleControl1 = {\r\n  width: '250px',\r\n};\r\nconst styleControl2 = {\r\n  width: '250px',\r\n};\r\n\r\ninterface IProps { }\r\ninterface IGroupProps {name: string}\r\n// interface IGroupProps {image: IimageEntity}\r\n\r\nconst GroupPlace: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = imageStore.currImage?.place;\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        style={styleControl1}\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('place', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\nconst GroupTags: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = imageStore.currImage?.tags;\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        style={styleControl2}\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('tags', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst GroupTitleHe: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal, currImage } = imageStore;\r\n  const myVal = (currImage && currImage.titlehe != null) ? currImage.titlehe : '';\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('titlehe', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst GroupTextHe: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = imageStore.currImage?.texthe;\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        as=\"textarea\"\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('texthe', e.target.value)}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst GroupIndex: React.FC<IGroupProps> = observer(({ name }) => {\r\n  const { imageStore } = useStore();\r\n  const { setCurrImageVal } = imageStore;\r\n  const myVal = (imageStore.currImage !== null\r\n    && imageStore.currImage.index !== undefined\r\n    && imageStore.currImage.index !== null)\r\n    ? imageStore.currImage.index.toString() : '';\r\n  return (\r\n    <Form.Group as={Col} controlId={`exampleForm.Control${name}`}>\r\n      <Form.Label>\r\n        {name}\r\n      </Form.Label>\r\n      <Form.Control\r\n        value={myVal}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('index', Number.parseInt(e.target.value))}\r\n      />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst FormImageDetails: React.FC<IProps> = observer(() => {\r\n  const { imageStore } = useStore();\r\n  const { currImage, setCurrImageVal, submitImageFile } = imageStore;\r\n\r\n  const isLoading = false;\r\n  const isValidAllContols = true;\r\n  return (\r\n    <Form>\r\n      <Row>\r\n        <Col />\r\n        <Form.Group as={Col} controlId=\"exampleForm.ControlFileName\">\r\n          <Form.Label>\r\n            file name\r\n          </Form.Label>\r\n          <Form.Control\r\n            disabled\r\n            style={styleControl1}\r\n            value={(currImage !== null) ? currImage.filename : ''}\r\n          />\r\n        </Form.Group>\r\n        <Col xs={3}>\r\n          <GroupTags name=\"tags\" />\r\n        </Col>\r\n        <Col>\r\n          <GroupPlace name=\"place\" />\r\n        </Col>\r\n        <Col>\r\n          <GroupIndex name=\"index\" />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <GroupTitleHe name=\"titlehe\" />\r\n          <GroupTextHe name=\"texthe\" />\r\n          <Form.Group as={Col} controlId=\"exampleForm.ControlTitleEn\">\r\n            <Form.Label>\r\n              en title\r\n            </Form.Label>\r\n            <Form.Control\r\n              value={(currImage !== null) ? currImage.titleen : ''}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('titleen', e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"exampleForm.ControlTextEn\">\r\n            <Form.Label>\r\n              en text\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              value={(currImage !== null) ? currImage.texten : ''}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('texten', e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"exampleForm.ControlTitleAr\">\r\n            <Form.Label>\r\n              ar title\r\n            </Form.Label>\r\n            <Form.Control\r\n              value={(currImage !== null) ? currImage.titlear : ''}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('titlear', e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"exampleForm.ControlTextAr\">\r\n            <Form.Label>\r\n              ar text\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              value={(currImage !== null) ? currImage.textar : ''}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrImageVal('textar', e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={isLoading || !isValidAllContols}\r\n            onClick={() => { submitImageFile(); }}\r\n          >\r\n            {isLoading ? 'Loading…' : 'Submit'}\r\n            {' '}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n});\r\nexport default FormImageDetails;\r\n","import React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport { IimageEntity } from '../../stores/ImageEntity';\r\n\r\ninterface IProps { }\r\nconst styleSelect = {\r\n  width: '150px',\r\n};\r\nconst styleCard = {\r\n  marginLeft: '5px',\r\n  marginRight: '5px',\r\n  width: '90%',\r\n};\r\n\r\nconst CardEditImageFile = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { imageStore, uiStore } = useStore();\r\n  const { getImages, setCurrImage, setCurrTag } = imageStore;\r\n  const { language } = uiStore;\r\n  const isRTL = (language !== 'en');\r\n  const type = 'home';\r\n  useEffect(() => {\r\n    getImages(type);\r\n  }, [getImages, type]);\r\n  // useEffect(() => {\r\n  //   getImagesByTag(tag);\r\n  // }, [getImagesByTag, tag]);\r\n  const arrayImages = toJS(imageStore.imageList);\r\n  const images = arrayImages.map((x: IimageEntity) => ({\r\n    original: x.filename,\r\n    thumbnail: x.filename,\r\n    originalTitle: x.titlehe,\r\n    description: x.texthe,\r\n  }));\r\n  const handleOnSlide = (currentIndex:number) => {\r\n    // console.log(currentIndex);\r\n    if (arrayImages.length > 0) setCurrImage(arrayImages[currentIndex]);\r\n    return true;\r\n  };\r\n  const isGotImages = (images.length > 0);\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Group as={Col} controlId=\"exampleForm.SelectTag\">\r\n          <Form.Label>\r\n            tags\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            style={styleSelect}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => { setCurrTag(e.target.value); }}\r\n          >\r\n            <option>כללי</option>\r\n            <option>הולכי רגל</option>\r\n            <option>רוכבי אופניים</option>\r\n            <option>רוכבי אופנוע</option>\r\n            <option>מכוניות</option>\r\n            <option>אוטובוסים</option>\r\n            <option>משאיות</option>\r\n            <option>ילדים</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Card style={styleCard}>\r\n          {isGotImages && (\r\n          <ImageGallery\r\n            items={images}\r\n            // @ts-ignore\r\n            disableKeyDown\r\n            thumbnailPosition=\"top\"\r\n            isRTL={isRTL}\r\n            onSlide={(currentIndex: number) => handleOnSlide(currentIndex)}\r\n          />\r\n          )}\r\n          {!isGotImages && `${t('not-found-images')}`}\r\n        </Card>\r\n      </Form>\r\n    </div>\r\n  );\r\n});\r\nexport default CardEditImageFile;\r\n","import { observable } from 'mobx';\r\n\r\nexport interface ImageEntityLean {\r\n    _id : number;\r\n    filename: string;\r\n    titlehe: string;\r\n    texthe: string;\r\n    tags: string;\r\n    place: string;\r\n  }\r\n\r\nexport interface IimageEntity extends ImageEntityLean {\r\n    titleen?: string;\r\n    texten?: string;\r\n    titlear?: string;\r\n    textar?: string;\r\n    index?: number;\r\n    file?: File\r\n  }\r\n\r\nexport default class ImageEntity implements IimageEntity {\r\n  constructor(_id:number, filename: string, titlehe: string, texthe: string, tags: string, place:string) {\r\n    this._id = _id;\r\n    this.filename = filename;\r\n    this.titlehe = titlehe;\r\n    this.texthe = texthe;\r\n    this.tags = tags;\r\n    this.place = place;\r\n  }\r\n\r\n  _id : number;\r\n\r\n  filename: string;\r\n\r\n  @observable\r\n  titlehe: string;\r\n\r\n  @observable\r\n  texthe: string;\r\n\r\n  @observable\r\n  titleen?: string;\r\n\r\n  @observable\r\n  texten?: string;\r\n\r\n  @observable\r\n  titlear?: string;\r\n\r\n  @observable\r\n  textar?: string;\r\n\r\n  @observable\r\n  tags: string;\r\n\r\n  @observable\r\n  place: string;\r\n\r\n  @observable\r\n  index?: number;\r\n\r\n  file?: File;\r\n}\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport ImageEntity from '../../stores/ImageEntity';\r\n\r\ninterface IProps { }\r\n\r\nconst CardUploadImageFile = observer(() => {\r\n  const styleInput = {\r\n    marginTop: '15px',\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n    width: '95%',\r\n  };\r\n  const [ifile, setFile] = React.useState('');\r\n  const { imageStore } = useStore();\r\n  const { setCurrImage } = imageStore;\r\n  const onChangeFileHandler = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files !== undefined && event.target.files !== null && event.target.files.length > 0) {\r\n      // console.log(event.target.files[0]);\r\n      const file = event.target.files[0];\r\n      const image = new ImageEntity(0, file.name, '', '', '', '');\r\n      image.file = file;\r\n      setCurrImage(image);\r\n      setFile(URL.createObjectURL(file));\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <div>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <input type=\"file\" name=\"file\" onChange={onChangeFileHandler} />\r\n              <img src={ifile} alt=\"\" style={styleInput} />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default CardUploadImageFile;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport FormImageDetails from '../molecules/FormImageDetails';\r\nimport CardEditImageFile from '../molecules/CardEditImageFile';\r\nimport CardUploadImageFile from '../molecules/CardUploadImageFile';\r\n\r\ninterface IProps { }\r\n\r\nconst UpdateImagePage: React.FC<IProps> = observer(() => {\r\n  const styleDiv = {\r\n    margin: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  };\r\n  const styleDiv1 = {\r\n    margin: '20px',\r\n    width: '450px',\r\n  };\r\n  const styleDiv2 = {\r\n    margin: '20px',\r\n  };\r\n  const styleTab = {\r\n    marginTop: '20px',\r\n  };\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div style={styleDiv}>\r\n      <div style={styleDiv1}>\r\n        <Tabs\r\n          defaultActiveKey=\"editimage\"\r\n          id=\"image-tabs\"\r\n        >\r\n          <Tab eventKey=\"editimage\" title={t('edit-image')} style={styleTab}>\r\n            <CardEditImageFile />\r\n          </Tab>\r\n          <Tab eventKey=\"uploadimage\" title={t('upload-image')} style={styleTab}>\r\n            <CardUploadImageFile />\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n      <div style={styleDiv2}>\r\n        <FormImageDetails />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default UpdateImagePage;\r\n"],"sourceRoot":""}