{"version":3,"file":"static/js/138.40f41bc8.chunk.js","mappings":"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","sources":["components/atoms/Select.tsx","hooks/useAccidentMarkers.ts","utils/mapUtils.ts","components/map/markers/IconBike.tsx","components/map/markers/IconBus.tsx","components/map/markers/IconCar.tsx","components/map/markers/IconEmpty.tsx","components/map/markers/IconMotorcycle.tsx","components/map/markers/IconScooter.tsx","components/map/markers/IconQuestion.tsx","components/map/markers/IconTruck.tsx","assets/transport_icons/car_icon.svg","assets/transport_icons/bicycle_icon.svg","assets/transport_icons/question_icon.svg","components/map/markers/IconWalk.tsx","components/map/AccidentPopUp.tsx","components/map/MarkerSvg.tsx","components/map/AccidentsMarkers.tsx","components/map/MapCenterUpdater.tsx","components/map/ClusteredMarkers.tsx","components/map/legend/Legend.jsx","components/map/legend/LegendWarpper.tsx","components/map/SelectMarkersColorType.tsx","components/map/SelectMarkersIConType.tsx","components/map/SelectMapMarkersType.tsx","components/map/AccidentHeatLayer.tsx","components/map/AccidentsMap.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  id: string;\r\n  data: any[];\r\n  value: string;\r\n  onChange: (val: string) => void;\r\n}\r\nconst styleSelect = {\r\n  width: '150px',\r\n};\r\n\r\nconst Select: React.FC<IProps> = ({ label, id, data, value, onChange }) => {\r\n  const { t } = useTranslation();\r\n  const opttions = data.map((x: any, index) => <option value={x.val} key={index}>{t(x.text)}</option>)\r\n  return (\r\n    <div>\r\n      <Form.Group as={Col} controlId={id}>\r\n        {label && <Form.Label className=\"selectLabel\">\r\n          {t(label)}:\r\n        </Form.Label>}\r\n        <Form.Control\r\n          as=\"select\"\r\n          className=\"form-select form-select-sm\"\r\n          style={styleSelect}\r\n          value={value}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => { onChange(e.target.value); }}\r\n        >\r\n          {opttions}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useState, useEffect } from \"react\";\r\nimport { toJS, autorun } from \"mobx\";\r\nimport { LatLngTuple } from \"leaflet\";\r\nimport { useStore } from \"../stores/storeConfig\";\r\nimport { BBoxType, Accident, MarkerData} from \"../types\";\r\n// import logger from \"../services/logger\";\r\n\r\nexport const useAccidentMarkers = () => {\r\n  const { filterStore, mapStore, uiStore } = useStore();\r\n  const { isUse2StepsMarkers, markersLoadStep, dataMarkersLean, dataAllInjuries } = filterStore;\r\n  const { bboxType, dataMarkersInBounds, markerIconsType, markerColorType } = mapStore;\r\n\r\n  const [markers, setMarkers] = useState<MarkerData[]>([]);\r\n\r\n  // autorun to automatically update markers when observables change\r\n  useEffect(() => {\r\n    const disposer = autorun(() => {\r\n      let reactMarkers;\r\n      if (bboxType !== BBoxType.NO_BBOX) {\r\n        reactMarkers = toJS(dataMarkersInBounds);\r\n      } else if (isUse2StepsMarkers && markersLoadStep === 1) {\r\n        reactMarkers = toJS(dataMarkersLean);\r\n      } else {\r\n        reactMarkers = toJS(dataAllInjuries);\r\n      }\r\n\r\n      // Filter and transform markers\r\n      const updatedMarkers = reactMarkers\r\n        .map((x: Accident) => {\r\n          try {\r\n            const latitude = x.latitude !== null && !isNaN(Number(x.latitude))\r\n            ? parseFloat(Number(x.latitude).toFixed(10))\r\n            : null;\r\n            const longitude = x.longitude !== null && !isNaN(Number(x.longitude))\r\n            ? parseFloat(Number(x.longitude).toFixed(10))\r\n            : null;\r\n            if (latitude !== null && longitude !== null ) {\r\n              return {\r\n                key: `marker-${x._id}`,\r\n                position: [latitude,longitude] as LatLngTuple,\r\n                data: x,\r\n                language: uiStore.language,\r\n                colorBy: markerColorType,\r\n                markerIconsType,\r\n              };\r\n            }\r\n            return null;\r\n          } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n          }\r\n        })\r\n        .filter((marker): marker is NonNullable<typeof marker> => marker !== null);\r\n\r\n      // Update state with new markers\r\n      setMarkers(updatedMarkers);\r\n    });\r\n\r\n    // Cleanup disposer when the component is unmounted\r\n    return () => {\r\n      disposer();\r\n    };\r\n  }, [bboxType, dataMarkersInBounds, dataMarkersLean, dataAllInjuries, markersLoadStep, isUse2StepsMarkers, uiStore.language, markerColorType, markerIconsType]);\r\n\r\n  return markers;\r\n};\r\n","import { Accident } from '../types';\r\n\r\nexport const getColorByVehicle = (category: string) => {\r\n    let res = '';\r\n    switch (category) {\r\n        case '':\r\n        case 'הולך רגל':\r\n            res = '#4cc9f0';\r\n            break;\r\n        case 'רכב נוסעים פרטי':\r\n        case 'מכונית':\r\n            res = '#f72585';\r\n            break;\r\n        case 'אופנוע עד 50 סמ\"ק':\r\n        case 'אופנוע 51 עד 125 סמ\"ק':\r\n        case 'אופנוע 126 עד 400 סמ\"ק':\r\n        case 'אופנוע 401+ סמ\"ק':\r\n        case 'אופנוע':\r\n            res = '#b5179e';\r\n            break;\r\n        case 'אופניים':\r\n            res = '#4895ef';\r\n            break;\r\n        case 'אופניים חשמליים':\r\n        case 'חשמלי דו גלגלי':\r\n            res = '#3f37c9';\r\n            break;\r\n        case 'קורקינט חשמלי':\r\n            res = '#3f37c9';\r\n            break;\r\n        default:\r\n            res = '#FE4E00';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByAccidentType = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'פגיעה בהולך רגל':\r\n            res = '#f94144';\r\n            break;\r\n        case 'התנגשות אחור אל צד':\r\n            res = '#277da1';\r\n            break;\r\n        case 'התנגשות אחור בחזית':\r\n            res = '#577590';\r\n            break;\r\n        case 'התנגשות חזית באחור':\r\n            res = '#577590';\r\n            break;\r\n        case 'התנגשות חזית בחזית':\r\n            res = '#43aa8b';\r\n            break;\r\n        case 'התנגשות חזית בצד':\r\n            res = '#90be6d';\r\n            break;\r\n        case 'התנגשות צד בצד':\r\n            res = '#f9c74f';\r\n            break;\r\n        case 'התנגשות עם בעל חיים':\r\n        case 'התנגשות עם עצם דומם':\r\n        case 'התנגשות עם רכב חונה':\r\n        case 'התנגשות עם רכב שנעצר ללא חניה':\r\n            res = '#f9844a';\r\n            break;\r\n        case 'החלקה':\r\n            res = '#f8961e';\r\n            break;\r\n        case 'התהפכות':\r\n            res = '#f3722c';\r\n            break;\r\n        default:\r\n            res = '#333333';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByAccidentSelfOrNot = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'עצמית':\r\n        case 'החלקה':\r\n        case 'התהפכות':\r\n        case 'התנגשות עם עצם דומם':\r\n        case 'התנגשות עם רכב חונה':\r\n        case 'ירידה מהכביש או עלייה למדרכה': \r\n        case 'פגיעה בנוסע בתוך כלי הרכב':\r\n        case 'נפילה מרכב נע':\r\n            res = '#138D75';\r\n            break;\r\n        default:\r\n            res = '#f94144';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorBySeverity = (severity: string) => {\r\n    let res = '';\r\n    switch (severity) {\r\n        case 'הרוג':\r\n            res = '#CA273B';\r\n            break;\r\n        default:\r\n            res = '#F8A141';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByDayNight = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'יום':\r\n            res = '#ffcc00';\r\n            break;\r\n        default:\r\n            res = '#333333';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\nexport const getColorByGender = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'נקבה':\r\n            res = '#4895ef';\r\n            break;\r\n        case 'זכר':\r\n            res = '#1E6091';\r\n            break;\r\n        default:\r\n            res = '#FDE2E4';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColorByRoadType = (value: string) => {\r\n    let res = '';\r\n    switch (value) {\r\n        case 'לא-עירונית לא בצומת':\r\n        case 'עירונית לא בצומת':\r\n        case 'לא בצומת':\r\n            res = '#4895ef';\r\n            break;\r\n        case 'לא-עירונית בצומת':\r\n        case 'עירונית בצומת':\r\n        case 'בצומת':\r\n            res = '#CD6155';\r\n            break;\r\n        default:\r\n            res = '#FDE2E4';\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\nexport const getColors = (colorBy: string, data: Accident) => {\r\n    let res = '';\r\n    switch (colorBy) {\r\n        case 'Severity':\r\n            res = getColorBySeverity(data.injury_severity_hebrew);\r\n            break;\r\n        case 'Vehicle':\r\n            res = getColorByVehicle(data.vehicle_vehicle_type_hebrew);\r\n            break;\r\n        case 'DayNight':\r\n            res = getColorByDayNight(data.day_night_hebrew);\r\n            break;\r\n        case 'Gender':\r\n            res = getColorByGender(data.sex_hebrew);\r\n            break;\r\n        case 'RoadType':\r\n            res = getColorByRoadType(data.road_type_hebrew);\r\n            break;\r\n        case 'AccidentType':\r\n            res = getColorByAccidentType(data.accident_type_hebrew);\r\n            break;\r\n        case 'SelfOrNotAcc':\r\n                res = getColorByAccidentSelfOrNot(data.accident_type_hebrew);\r\n                break;    \r\n        default:\r\n            res = getColorBySeverity(data.injury_severity_hebrew);\r\n            break;\r\n    }\r\n    return res;\r\n};\r\n\r\n// export const legendHtmlFor = (colorBy: string) => [\r\n//     `<h3>${string}</h3>`,\r\n//     description && `<p>${description}</p>`,\r\n//   ].join('\\n');\r\nexport const createLegendByColorType = (colorBy: string) =>\r\n  {\r\n      let grade = [];\r\n      let res = [];\r\n      switch (colorBy) {\r\n          case 'Severity':\r\n              grade = ['הרוג', 'פצוע קשה'];\r\n              res = createLegendArr(grade,getColorBySeverity);\r\n              break;\r\n          case 'Vehicle':\r\n              grade = [ 'חשמלי דו גלגלי', 'מכונית', 'אופנוע', 'לא ידוע', 'הולך רגל', 'אופניים'];\r\n              res = createLegendArr(grade,getColorByVehicle);\r\n              break;\r\n          case 'DayNight':\r\n              grade = ['לילה', 'יום',];\r\n              res = createLegendArr(grade,getColorByDayNight);\r\n              break;\r\n          case 'Gender':\r\n              grade = ['נקבה', 'זכר', 'לא ידוע'];\r\n              res = createLegendArr(grade,getColorByGender);\r\n              break;\r\n          case 'RoadType':\r\n              grade = ['לא בצומת', 'בצומת'];\r\n              res = createLegendArr(grade,getColorByRoadType);\r\n              break;\r\n          case 'AccidentType':\r\n              grade = ['התהפכות', 'החלקה', 'התנגשות אחור אל צד', 'התנגשות אחור בחזית','התנגשות חזית בצד','התנגשות צד בצד','התנגשות חזית בחזית','התנגשות עם עצם דומם','פגיעה בהולך רגל','אחר',];\r\n              res = createLegendArr(grade,getColorByAccidentType);\r\n              break;\r\n          case 'SelfOrNotAcc':\r\n              grade = ['לא עצמית','עצמית',];\r\n              res = createLegendArr(grade,getColorByAccidentSelfOrNot);\r\n              break;     \r\n          default:\r\n              grade = ['נקבה', 'זכר', 'לא ידוע'];\r\n              res = createLegendArr(grade,getColorByGender);\r\n              break;\r\n      }\r\n      return res;\r\n  }\r\nexport const createLegendArr = (grades: string[], getColorfunc: (value: string) => any) => {\r\n    const labels: any = [];\r\n    grades.forEach((val: string) => {\r\n        labels.push(\r\n        `<div><i style=\"background:${getColorfunc(val)}\"></i> ${val}</div>`\r\n        );\r\n    });\r\n    //labels.join('\\n');\r\n    return labels;\r\n};\r\n\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconBike: React.FC<IIconProps> = (({ fill= 'red', width = 24.6, height= 30, isAccuratePos = true}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#ffffff\" d=\"M 7.871 20.859 C 5.374 20.859 3.812 17.908 5.061 15.547 C 6.311 13.186 9.432 13.186 10.681 15.547 C 10.967 16.085 11.117 16.694 11.117 17.319 C 11.113 19.273 9.662 20.856 7.871 20.859 Z M 7.871 15.35 C 6.483 15.35 5.617 16.989 6.311 18.302 C 7.005 19.614 8.739 19.614 9.432 18.302 C 9.589 18.004 9.674 17.668 9.674 17.325 C 9.679 16.235 8.871 15.35 7.871 15.35 Z\" />\r\n      <path fill=\"#ffffff\" d=\"M 17.248 20.859 C 14.749 20.859 13.187 17.908 14.437 15.547 C 15.686 13.186 18.808 13.186 20.058 15.547 C 20.342 16.085 20.493 16.694 20.493 17.319 C 20.488 19.273 19.037 20.856 17.248 20.859 Z M 17.248 15.35 C 15.859 15.35 14.991 16.989 15.686 18.302 C 16.379 19.614 18.114 19.614 18.808 18.302 C 18.966 18.003 19.05 17.663 19.05 17.319 C 19.05 16.231 18.242 15.35 17.248 15.35 Z\" />\r\n      <path fill=\"#ffffff\" d=\"M 12.56 18.498 C 12.16 18.498 11.838 18.146 11.838 17.711 L 11.838 14.894 L 9.531 12.383 C 9.247 12.075 9.247 11.573 9.531 11.265 L 11.564 9.093 C 11.918 8.625 12.602 8.751 12.797 9.319 C 12.907 9.643 12.811 10.007 12.56 10.218 L 11.053 11.792 L 13.058 13.972 C 13.205 14.126 13.285 14.341 13.281 14.564 L 13.281 17.711 C 13.281 18.146 12.957 18.498 12.56 18.498 Z\" />\r\n      <path fill=\"#ffffff\" d=\"M 16.395 12.745 L 14.233 12.745 C 14.044 12.744 13.862 12.662 13.727 12.517 L 11.564 10.218 C 11.124 9.848 11.214 9.098 11.728 8.867 C 12.02 8.735 12.357 8.827 12.56 9.093 L 14.514 11.17 L 16.383 11.17 C 16.937 11.17 17.284 11.826 17.006 12.351 C 16.878 12.594 16.639 12.745 16.383 12.745 Z\" />\r\n      <circle fill=\"#ffffff\" cx=\"14.32\" cy=\"4\" r=\"2\" transform=\"matrix(0.721159, 0, 0, 0.787069, 3.905845, 4.331152)\" />\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n// export default IconBike;\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconBus: React.FC<IIconProps> = (({ fill = 'red', width = 24.6, height = 30, isAccuratePos = true }) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path id=\"svg_2\" d=\"M 8 19.5 C 5.8 19.5 4.4 17.3 5.5 15.6 C 6.6 13.9 9.4 13.9 10.5 15.6 C 10.8 16 10.9 16.4 10.9 16.9 C 10.9 18.3 9.6 19.5 8 19.5 Z M 8 16 C 7.3 16 6.8 16.8 7.2 17.3 C 7.5 17.9 8.5 17.9 8.8 17.3 C 8.9 17.2 9 17 9 16.9 C 9 16.4 8.5 16 8 16 Z\" stroke=\"none\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_3\" d=\"M 18.2 19.6 C 16 19.6 14.6 17.4 15.7 15.7 C 16.8 14 19.6 14 20.7 15.7 C 20.9 16.1 21.1 16.5 21.1 17 C 21.1 18.4 19.8 19.6 18.2 19.6 Z M 18.2 16.1 C 17.4 16.1 17 16.9 17.4 17.4 C 17.7 18 18.7 18 19 17.4 C 19.1 17.3 19.2 17.1 19.2 17 C 19.2 16.5 18.7 16.1 18.2 16.1 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_4\" d=\"M 15.8 17.8 L 9.9 17.8 C 9.3 17.8 8.9 17 9.2 16.5 C 9.3 16.2 9.6 16 9.9 16 L 15.8 16 C 16.5 16 16.9 16.8 16.6 17.3 C 16.4 17.6 16.1 17.8 15.8 17.8 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_5\" d=\"M 5.9 17.6 L 4.9 17.6 C 3.9 17.6 3 16.9 3 16 L 3 8.7 C 3 7.3 4.3 6.2 5.9 6.2 L 17.5 6.2 C 20.1 6.2 22.3 8.1 22.3 10.3 L 22.3 13.6 C 22.3 14.2 21.5 14.6 20.8 14.3 C 20.5 14.1 20.3 13.9 20.3 13.6 L 20.3 10.3 C 20.3 9 19.1 7.9 17.5 7.9 L 5.9 7.9 C 5.4 7.9 4.9 8.2 4.9 8.7 L 4.9 16 L 5.9 16 C 6.6 16 7.1 16.7 6.7 17.2 C 6.5 17.5 6.2 17.6 5.9 17.6 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_6\" stroke=\"#ffffff\" d=\"M 20.5 11.8 L 8.9 11.8 C 8.2 11.8 7.7 11.5 8.1 11.2 C 8.2 11 8.6 10.9 8.9 10.9 L 20.5 10.9 C 21.2 10.9 21.7 11.3 21.3 11.6 C 21.1 11.8 20.8 11.8 20.5 11.8 Z\" fill=\"#ffffff\"></path>\r\n      <path id=\"svg_7\" d=\"M 21.3 11.7 L 21.3 10.8 C 21.3 8.9 19.7 7.4 17.8 7.4 L 17.8 11.7 L 21.3 11.7 Z\" fill=\"#ffffff\"></path>\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconCar: React.FC<IIconProps> = (({ fill= 'red', width = 24.6, height= 30, isAccuratePos = true}) => {\r\n  return (\r\n  // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M13 0C6.0974 0 0.481453 5.83195 0.481453 13C0.481453 15.1519 0.999529 17.2855 1.98441 19.1779L12.3154 33.5811C12.4529 33.8397 12.715 34 13 34C13.285 34 13.547 33.8397 13.6846 33.5811L24.0194 19.1715C25.0005 17.2855 25.5185 15.1518 25.5185 12.9999C25.5185 5.83195 19.9026 0 13 0Z\" fill={fill} />\r\n      <circle stroke=\"#FFF\" cx=\"5.116\" cy=\"17.427\" r=\"3\" id=\"svg_2\" transform=\"matrix(0.681942, 0, 0, 0.723209, 3.744888, 3.238379)\" />\r\n      <circle stroke=\"#FFF\" cx=\"21.116\" cy=\"17.427\" r=\"3\" id=\"svg_3\" transform=\"matrix(0.681942, 0, 0, 0.723209, 3.744888, 3.238379)\" />\r\n      <line stroke=\"#FFF\" x1=\"21.554\" x2=\"22.918\" y1=\"12.948\" y2=\"12.948\" id=\"svg_4\" />\r\n      <line stroke=\"#FFF\" x1=\"5.188\" x2=\"18.827\" y1=\"10.78\" y2=\"10.78\" id=\"svg_5\" />\r\n      <line stroke=\"#FFF\" x1=\"11.326\" x2=\"9.279\" y1=\"6.44\" y2=\"10.78\" id=\"svg_6\" />\r\n      <path stroke=\"#FFF\" d=\"M 20.191 15.842 L 22.918 15.842 C 23.327 15.842 23.6 15.552 23.6 15.118 L 23.6 13.672 C 23.6 12.082 22.373 10.78 20.872 10.78 L 18.827 10.78 L 16.235 7.453 C 15.69 6.802 14.94 6.44 14.122 6.44 L 8.938 6.44 C 7.915 6.44 6.961 7.091 6.483 8.031 L 5.188 10.78 L 4.506 10.78 C 3.756 10.78 3.142 11.431 3.142 12.226 L 3.142 15.118 C 3.142 15.552 3.415 15.842 3.824 15.842 L 5.188 15.842\" id=\"svg_7\" />\r\n      <line stroke=\"#FFF\" x1=\"9.279\" x2=\"16.099\" y1=\"15.842\" y2=\"15.842\" id=\"svg_8\" />\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport { IIconProps } from '../../types';\r\n\r\nexport const IconEmpty: React.FC<IIconProps> = (({ fill= 'red', width = 24.6, height= 30, isAccuratePos = true}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} /> \r\n      <circle fill= \"#fff\" cx=\"12.764\" cy=\"12.26\" r=\"5.228\"/>\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconMotorcycle: React.FC<IIconProps> = (({ fill= 'red', width = 24.6, height= 30, isAccuratePos = true }) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"M 18.606 19.589 C 16.021 19.589 14.406 17.045 15.698 15.007 C 16.991 12.972 20.224 12.972 21.517 15.007 C 21.811 15.472 21.966 16 21.966 16.534 C 21.966 18.222 20.462 19.589 18.606 19.589 Z M 18.606 15.007 C 17.314 15.007 16.507 16.28 17.153 17.297 C 17.799 18.316 19.415 18.316 20.061 17.297 C 20.209 17.065 20.288 16.804 20.288 16.534 C 20.288 15.692 19.537 15.007 18.606 15.007 Z\" />\r\n      <path fill=\"#FFF\" d=\"M 6.85 19.589 C 4.267 19.589 2.647 17.045 3.942 15.007 C 5.233 12.972 8.467 12.972 9.758 15.007 C 10.054 15.472 10.209 16 10.209 16.534 C 10.209 18.222 8.705 19.589 6.85 19.589 Z M 6.85 15.007 C 5.556 15.007 4.751 16.28 5.396 17.297 C 6.043 18.316 7.659 18.316 8.305 17.297 C 8.451 17.065 8.531 16.804 8.531 16.534 C 8.531 15.692 7.779 15.007 6.85 15.007 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 12.728 17.297 L 7.691 17.297 C 7.043 17.297 6.638 16.662 6.965 16.152 C 7.113 15.916 7.392 15.772 7.691 15.772 L 12.728 15.772 C 13.375 15.772 13.778 16.408 13.456 16.916 C 13.304 17.154 13.028 17.297 12.728 17.297 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 13.567 15.007 L 11.889 15.007 C 11.664 15.008 11.451 14.928 11.292 14.787 L 8.185 11.954 L 6.011 11.954 C 5.786 11.955 5.574 11.875 5.416 11.733 L 4.575 10.969 C 4.115 10.551 4.326 9.839 4.953 9.687 C 5.244 9.617 5.554 9.694 5.768 9.885 L 6.357 10.428 L 8.531 10.428 C 8.754 10.428 8.967 10.506 9.127 10.649 L 12.233 13.482 L 13.258 13.482 L 15.963 11.375 C 16.114 11.256 16.307 11.19 16.508 11.19 L 19.101 11.19 C 19.29 11.186 19.444 11.05 19.447 10.879 C 19.449 10.795 19.412 10.709 19.345 10.649 L 15.492 7.153 C 15.032 6.734 15.243 6.022 15.869 5.871 C 16.162 5.799 16.471 5.875 16.684 6.068 L 20.529 9.573 C 20.915 9.915 21.13 10.388 21.125 10.879 C 21.125 11.895 20.221 12.718 19.101 12.718 L 16.818 12.718 L 14.114 14.826 C 13.96 14.943 13.769 15.007 13.567 15.007 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 11.889 11.954 L 6.011 11.954 C 5.364 11.954 4.961 11.317 5.283 10.809 C 5.434 10.573 5.71 10.428 6.011 10.428 L 11.545 10.428 L 12.973 9.122 C 13.132 8.98 13.344 8.9 13.567 8.902 L 15.249 8.902 C 15.894 8.902 16.299 9.537 15.976 10.046 C 15.824 10.282 15.547 10.428 15.249 10.428 L 13.912 10.428 L 12.485 11.733 C 12.326 11.875 12.112 11.955 11.889 11.954 Z\" />\r\n      <path fill=\"#FFF\" stroke=\"none\" d=\"M 17.768 8.137 L 17.768 11.954 L 19.101 11.954 C 20.013 11.957 20.588 11.063 20.136 10.342 C 20.082 10.258 20.017 10.183 19.942 10.114 Z\" /> \r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconScooter: React.FC<IIconProps> = (({ fill = 'red', width = 24.6, height = 30, isAccuratePos = true} ) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <polyline stroke=\"#FFF\" strokeWidth=\"1\" strokeLinecap=\"round\" points=\"15.363 6.284 16.84 6.284 18.811 18.838\" />\r\n      <circle stroke=\"#FFF\" strokeWidth=\"2\" cx=\"28\" cy=\"25\" r=\"3\" transform=\"matrix(0.492416, 0, 0, 0.62765, 5.022794, 3.145868)\" />\r\n      <circle stroke=\"#FFF\" strokeWidth=\"2\" cx=\"4\" cy=\"25\" r=\"3\" transform=\"matrix(0.492416, 0, 0, 0.62765, 5.022794, 3.145868)\" />\r\n      <path stroke=\"#FFF\" strokeWidth=\"1\" strokeLinecap=\"round\" d=\"M 6.993 15.07 C 8.618 15.07 9.947 16.766 9.947 18.838\" />\r\n      <polyline stroke=\"#FFF\" strokeWidth=\"1\" strokeLinecap=\"round\" points=\"17.825 13.815 15.363 18.838 6.993 18.838\" />\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconQuestion: React.FC<IIconProps> = (({ fill= 'red', width = 24.6, height= 30, isAccuratePos = true}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"M 7.415 9.199 C 7.709 8.437 8.075 7.814 8.589 7.329 C 9.102 6.845 9.763 6.43 10.495 6.153 C 11.228 5.876 12.11 5.737 13.062 5.737 C 13.796 5.737 14.53 5.876 15.191 6.083 C 15.85 6.292 16.437 6.638 16.95 6.984 C 17.465 7.329 17.83 7.884 18.124 8.437 C 18.418 8.99 18.564 9.684 18.564 10.444 C 18.564 11.414 18.343 12.176 17.903 12.869 C 17.465 13.562 16.877 14.183 16.216 14.806 C 15.63 15.361 15.191 15.775 14.898 16.052 C 14.53 16.329 14.31 16.675 14.163 16.952 C 14.017 17.229 13.87 17.575 13.87 17.991 C 13.796 18.406 13.796 18.684 13.796 19.444 L 12.11 19.444 C 12.11 18.684 12.11 18.338 12.256 17.854 C 12.329 17.299 12.549 16.883 12.771 16.398 C 12.991 15.982 13.356 15.568 13.724 15.152 C 14.163 14.737 14.603 14.322 15.191 13.838 C 15.704 13.422 16.144 12.938 16.437 12.384 C 16.804 11.829 16.95 11.207 16.95 10.584 C 16.95 10.099 16.877 9.615 16.657 9.199 C 16.437 8.784 16.144 8.437 15.85 8.091 C 15.556 7.745 15.117 7.538 14.603 7.4 C 14.163 7.26 13.649 7.123 13.137 7.123 C 12.403 7.123 11.743 7.26 11.228 7.466 C 10.644 7.676 10.202 8.022 9.835 8.437 C 9.47 8.853 9.176 9.337 9.029 9.891 C 8.882 10.444 8.736 10.93 8.811 11.553 L 7.122 11.553 C 7.05 10.584 7.122 9.96 7.415 9.199 L 7.415 9.199 Z M 11.816 21.314 L 13.87 21.314 L 13.87 23.253 L 11.816 23.253 L 11.816 21.314 Z\" id=\"Fill-48\"/>\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconTruck: React.FC<IIconProps> = (({ fill = 'red', width = 24.6, height = 30, isAccuratePos = true} ) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"m6.66667,22a3,3 0 1 1 3,-3a3,3 0 0 1 -3,3zm0,-4a1,1 0 1 0 1,1a1,1 0 0 0 -1,-1z\" id=\"svg_2\" />\r\n      <path fill=\"#FFF\" d=\"m18.66667,22a3,3 0 1 1 3,-3a3,3 0 0 1 -3,3zm0,-4a1,1 0 1 0 1,1a1,1 0 0 0 -1,-1z\" id=\"svg_3\" />\r\n      <path fill=\"#FFF\" d=\"m13.66667,20l-5,0a1,1 0 0 1 0,-2l4,0l0,-10l-8,0l0,8a1,1 0 0 1 -2,0l0,-9a1,1 0 0 1 1,-1l10,0a1,1 0 0 1 1,1l0,12a1,1 0 0 1 -1,1z\" id=\"svg_4\" />\r\n      <path fill=\"#FFF\" d=\"m21.66667,16a1,1 0 0 1 -1,-1l0,-0.67l-2.2,-2.93a1,1 0 0 0 -0.8,-0.4l-4,0a1,1 0 0 1 0,-2l4,0a3,3 0 0 1 2.4,1.2l2.4,3.2a1,1 0 0 1 0.2,0.6l0,1a1,1 0 0 1 -1,1z\" id=\"svg_5\" />\r\n      <path fill=\"#FFF\" d=\"m20.66667,14l-2,0a2,2 0 0 1 -2,-2l0,-2l2,0l2,4z\" id=\"svg_6\" />\r\n      <path fill=\"#FFF\" d=\"m19.66667,14l-3,0a1,1 0 0 1 0,-2l3,0a1,1 0 0 1 0,2z\" id=\"svg_7\" />\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n","var _style, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCarIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 43 43\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t\\t.st0{fill:none;stroke:#ffffff;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;}\\r\\n\\t\\t.st1{fill:none;stroke:\\\"current\\\";stroke-width:2;stroke-linejoin:round;stroke-miterlimit:10;}\\r\\n\\t\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"title\", null, \"Layer 1\"), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 21.04733,\n    cy: 22.01185,\n    r: 19.59496,\n    fill: \"current\",\n    id: \"svg_1\",\n    stroke: \"current\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 12.44344,\n    cy: 26.808,\n    r: 3,\n    id: \"svg_2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 28.44344,\n    cy: 26.808,\n    r: 3,\n    id: \"svg_3\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"st0\",\n    x1: 33.44344,\n    x2: 35.44344,\n    y1: 22.808,\n    y2: 22.808,\n    id: \"svg_4\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"st0\",\n    x1: 9.44344,\n    x2: 29.44344,\n    y1: 19.808,\n    y2: 19.808,\n    id: \"svg_5\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"st0\",\n    x1: 18.44344,\n    x2: 15.44344,\n    y1: 13.808,\n    y2: 19.808,\n    id: \"svg_6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"m31.44344,26.808l4,0c0.6,0 1,-0.4 1,-1l0,-2c0,-2.2 -1.8,-4 -4,-4l-3,0l-3.8,-4.6c-0.8,-0.9 -1.9,-1.4 -3.1,-1.4l-7.6,0c-1.5,0 -2.9,0.9 -3.6,2.2l-1.9,3.8l-1,0c-1.1,0 -2,0.9 -2,2l0,4c0,0.6 0.4,1 1,1l2,0\",\n    id: \"svg_7\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    className: \"st0\",\n    x1: 15.44344,\n    x2: 25.44344,\n    y1: 26.808,\n    y2: 26.808,\n    id: \"svg_8\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCarIcon);\nexport default __webpack_public_path__ + \"static/media/car_icon.8e448cb3a33d68b466cfbee8722f164c.svg\";\nexport { ForwardRef as ReactComponent };","var _defs, _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBicycleIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"019_transport\",\n    id: \"_019_transport\",\n    viewBox: \"0 0 43 43\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\r\\n        .bike1{fill:#ffffff;stroke:#ffffff}\\r\\n        .bike2{fill:#ffffff;stroke:#ffffff;stroke-width:0.7}\\r\\n    \"))), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 21.5,\n    cy: 21.5,\n    r: 21.5,\n    fill: \"current\",\n    id: \"svg_1\",\n    stroke: \"current\",\n    style: {},\n    transform: \"matrix(0.944337, 0, 0, 0.957282, 0.946279, 1.113269)\"\n  }), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"bike2\",\n    d: \"M 12.602 31.743 C 8.384 31.743 5.748 27.312 7.857 23.767 C 9.966 20.222 15.238 20.222 17.347 23.767 C 17.828 24.575 18.081 25.492 18.081 26.426 C 18.075 29.36 15.625 31.737 12.602 31.743 Z M 12.602 23.472 C 10.259 23.472 8.794 25.933 9.966 27.903 C 11.138 29.872 14.067 29.872 15.238 27.903 C 15.503 27.457 15.644 26.952 15.646 26.438 C 15.653 24.801 14.288 23.472 12.602 23.472 Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"bike2\",\n    d: \"M 28.431 31.743 C 24.213 31.743 21.577 27.312 23.686 23.767 C 25.795 20.222 31.067 20.222 33.176 23.767 C 33.657 24.575 33.91 25.492 33.91 26.426 C 33.903 29.36 31.454 31.737 28.431 31.743 Z M 28.431 23.472 C 26.088 23.472 24.623 25.933 25.795 27.903 C 26.966 29.872 29.895 29.872 31.067 27.903 C 31.334 27.454 31.475 26.944 31.475 26.426 C 31.475 24.794 30.112 23.472 28.431 23.472 Z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"bike1\",\n    d: \"M 20.517 28.198 C 19.844 28.198 19.299 27.669 19.299 27.017 L 19.299 22.786 L 15.403 19.017 C 14.922 18.555 14.922 17.801 15.403 17.339 L 18.836 14.078 C 19.433 13.376 20.589 13.565 20.916 14.417 C 21.103 14.904 20.941 15.451 20.517 15.767 L 17.972 18.131 L 21.357 21.404 C 21.606 21.634 21.743 21.956 21.734 22.29 L 21.734 27.017 C 21.734 27.669 21.189 28.198 20.517 28.198 Z\",\n    style: {}\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"bike1\",\n    d: \"M 26.994 19.56 L 23.341 19.56 C 23.022 19.559 22.716 19.436 22.489 19.218 L 18.836 15.767 C 18.093 15.213 18.246 14.086 19.112 13.738 C 19.606 13.54 20.176 13.677 20.517 14.078 L 23.816 17.197 L 26.97 17.197 C 27.907 17.197 28.493 18.182 28.024 18.97 C 27.807 19.335 27.405 19.56 26.97 19.56 Z\",\n    style: {}\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"bike1\",\n    cx: 14.32,\n    cy: 4,\n    r: 2,\n    style: {},\n    transform: \"matrix(1.217593, 0, 0, 1.181639, 5.905384, 6.928631)\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBicycleIcon);\nexport default __webpack_public_path__ + \"static/media/bicycle_icon.cc358296940d094bbc865d93b20d655c.svg\";\nexport { ForwardRef as ReactComponent };","var _style;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgQuestionIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    style: {\n      enableBackground: \"new 0 0 64 64\"\n    },\n    viewBox: \"0 0 43 43\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#FFF;}\\r\\n\")), /*#__PURE__*/React.createElement(\"g\", {\n    style: {},\n    transform: \"matrix(0.877622, 0, 0, 0.758315, -5.700457, -1.89182)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Icon-Question\",\n    transform: \"translate(178.000000, 278.000000)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"current\",\n    id: \"svg_1\",\n    stroke: \"current\",\n    style: {},\n    cx: -146.104,\n    cy: -245.776,\n    r: 12.137,\n    transform: \"matrix(1.870323, 0, 0, 2.083637, 125.937767, 264.700409)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M -155.573 -255.617 C -155.117 -256.791 -154.545 -257.75 -153.745 -258.497 C -152.946 -259.242 -151.918 -259.883 -150.776 -260.309 C -149.634 -260.735 -148.262 -260.949 -146.779 -260.949 C -145.636 -260.949 -144.494 -260.735 -143.465 -260.416 C -142.438 -260.096 -141.524 -259.563 -140.725 -259.03 C -139.925 -258.497 -139.354 -257.643 -138.896 -256.791 C -138.44 -255.938 -138.212 -254.871 -138.212 -253.699 C -138.212 -252.206 -138.554 -251.032 -139.24 -249.966 C -139.925 -248.9 -140.839 -247.94 -141.867 -246.981 C -142.781 -246.128 -143.465 -245.489 -143.923 -245.062 C -144.494 -244.636 -144.836 -244.103 -145.065 -243.676 C -145.293 -243.249 -145.522 -242.716 -145.522 -242.077 C -145.636 -241.437 -145.636 -241.01 -145.636 -239.837 L -148.262 -239.837 C -148.262 -241.01 -148.262 -241.544 -148.035 -242.289 C -147.921 -243.143 -147.578 -243.782 -147.234 -244.529 C -146.892 -245.169 -146.321 -245.808 -145.75 -246.448 C -145.065 -247.088 -144.379 -247.728 -143.465 -248.474 C -142.666 -249.114 -141.98 -249.86 -141.524 -250.713 C -140.952 -251.566 -140.725 -252.525 -140.725 -253.485 C -140.725 -254.232 -140.839 -254.978 -141.181 -255.617 C -141.524 -256.258 -141.98 -256.791 -142.438 -257.324 C -142.895 -257.857 -143.58 -258.176 -144.379 -258.39 C -145.065 -258.603 -145.865 -258.817 -146.664 -258.817 C -147.806 -258.817 -148.834 -258.603 -149.634 -258.284 C -150.547 -257.963 -151.233 -257.43 -151.804 -256.791 C -152.374 -256.15 -152.831 -255.404 -153.061 -254.551 C -153.289 -253.699 -153.517 -252.952 -153.402 -251.992 L -156.03 -251.992 C -156.144 -253.485 -156.03 -254.445 -155.573 -255.617 L -155.573 -255.617 Z M -148.72 -236.959 L -145.522 -236.959 L -145.522 -233.973 L -148.72 -233.973 L -148.72 -236.959 Z\",\n    id: \"Fill-48\",\n    style: {}\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestionIcon);\nexport default __webpack_public_path__ + \"static/media/question_icon.0b9ed73a9a19f4e8f72cf99e7b527574.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport {IIconProps} from '../../types';\r\n\r\nexport const IconWalk: React.FC<IIconProps> = (({ fill= 'red', width = 24.6, height= 30, isAccuratePos = true}) => {\r\n  return (\r\n    // its a SVG example, it`s by half, or corrupted, to not occupy large caracter space here, use your SVG file here...\r\n    <svg width={width} height={height} viewBox=\"0 0 26 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M 12.781 0.357 C 6.028 0.357 0.532 5.963 0.532 12.854 C 0.532 14.922 1.04 16.973 2.003 18.793 L 12.112 32.637 C 12.247 32.886 12.502 33.04 12.781 33.04 C 13.06 33.04 13.316 32.886 13.452 32.637 L 23.564 18.786 C 24.524 16.973 25.031 14.922 25.031 12.854 C 25.031 5.963 19.536 0.357 12.781 0.357 Z\" fill={fill} />\r\n      <path fill=\"#FFF\" d=\"M 8.758 11.611 L 11.571 9.763 C 11.887 9.554 12.27 9.446 12.661 9.459 C 13.64 9.48 14.495 10.06 14.793 10.902 C 14.955 11.366 15.104 11.678 15.239 11.841 C 16.067 12.839 17.368 13.427 18.749 13.426 L 18.749 15.014 C 16.913 15.016 15.173 14.274 14.008 12.993 L 13.396 16.132 L 15.204 17.504 L 17.155 22.352 L 15.506 22.895 L 13.715 18.448 L 10.74 16.189 C 10.242 15.826 10.002 15.248 10.113 14.678 L 10.56 12.388 L 9.966 12.779 L 8.099 15.102 L 6.679 14.169 L 8.743 11.601 L 8.758 11.611 Z M 11.312 19.522 L 8.492 22.562 L 7.147 21.543 L 9.759 18.729 L 10.414 16.998 L 11.986 18.189 L 11.312 19.522 Z\" />\r\n      <circle fill=\"#FFF\" cx=\"24.241\" cy=\"8.905\" r=\"3.8\" transform=\"matrix(0.508679, 0, 0, 0.466243, 1.41729, 3.309399)\"/>\r\n      {!isAccuratePos && <path transform=\"matrix(0.2, 0, 0, 0.2, 9, 28)\" fill=\"#000000\" d=\"M13.98,0.84v12.66L1.94,9.59L0,15.6l12.05,3.92l-7.45,10.26l5.09,3.7L17.15,23.18l7.45,10.26l5.09-3.7L22.29,19.5L34,15.6l-1.94-5.98l-12.05,3.92V0.85H13.98L13.98,0.84z\"/>}\r\n    </svg>\r\n  );\r\n});\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable space-before-blocks */\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Popup } from 'react-leaflet';\r\nimport { Accident } from '../../types';\r\n\r\ninterface IProps {\r\n  data: Accident,\r\n  language: string\r\n}\r\n\r\nconst AccidentsPopUp: React.FC<IProps> = (({ data: x, language }) => {\r\n  const pStyle = {\r\n    color: '#004ba0',\r\n  };\r\n  const { t } = useTranslation();\r\n  if (x.injured_type_hebrew !== undefined) {\r\n    return (\r\n      <Popup>\r\n        <div className={`text${language}`}>\r\n          <div><span style={pStyle}>{t('When')}:</span> {x.accident_timestamp.slice(0, 16)}, {x.day_in_week_hebrew}, {x.day_night_hebrew}</div>\r\n          <div><span style={pStyle}>{t('Who')}:</span> {x.injured_type_hebrew}, {x.injury_severity_hebrew}, {x.vehicle_vehicle_type_hebrew ? `${x.vehicle_vehicle_type_hebrew}, ` : ''} {x.sex_hebrew}, {x.age_group_hebrew}, {x.population_type_hebrew}</div>\r\n          <div><span style={pStyle}>{t('Where')}:</span>\r\n            {x.accident_yishuv_name ? `${x.accident_yishuv_name}, ` : ''}\r\n            {x.street1_hebrew ? `${x.street1_hebrew}, ` : ''}\r\n            {x.street2_hebrew ? `${x.street2_hebrew}, ` : ''}\r\n            {x.road1 ? `${t('Road')} ${x.road1}, ` : ''}\r\n            {x.road2 ? `${x.road2}, ` : ''}\r\n            {x.road_segment_name ? `${x.road_segment_name}, ` : ''}\r\n            {x.road_type_hebrew}\r\n            {x.location_accuracy_hebrew ? ` (${x.location_accuracy_hebrew})` : ''} \r\n          </div>\r\n          <div><span style={pStyle}>{t('What')}:</span> {x.accident_type_hebrew} ({x.vehicles})</div>\r\n          <div><span style={pStyle}>{t('WhatRoad')}:</span> {x.speed_limit_hebrew ? `${x.speed_limit_hebrew}, ` : ''}{x.multi_lane_hebrew ? `${x.multi_lane_hebrew}, ` : ''}{x.one_lane_hebrew ? `${x.one_lane_hebrew}, ` : ''}{x.road_width_hebrew ? `${x.road_width_hebrew}, ` : ''}</div>\r\n        </div>\r\n      </Popup>\r\n    );\r\n  }\r\n  return null;\r\n});\r\nexport default AccidentsPopUp;","import React from 'react';\r\nimport { divIcon, LatLngExpression } from 'leaflet';\r\nimport { Marker } from 'react-leaflet';\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport { getColors } from '../../utils/mapUtils';\r\nimport { Accident } from '../../types';\r\n// import { getColorByVehicle } from '../../../services/mapUtils';\r\nimport {IconBike, IconBus, IconCar, IconEmpty, IconMotorcycle, IconQuestion, IconScooter, IconTruck, IconWalk } from './markers/';\r\nimport AccidentPopUp from './AccidentPopUp';\r\n\r\n// const iconSize = {\r\n//   iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41],\r\n// };\r\n\r\nconst customMarketIcon = (iconMarkup:any) => {\r\n  const res = divIcon({\r\n    html: iconMarkup,\r\n    className: 'ship-div-icon',\r\n    iconAnchor: [0, 30],\r\n    popupAnchor: [1, -32],\r\n  });\r\n  return res;\r\n};\r\n\r\nconst getSVGPinByCategory = (category: string, color: string, isAccuratePos: boolean) => {\r\n  let pin;\r\n  switch (category) {\r\n    case '':\r\n      pin = <IconWalk fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'רכב נוסעים פרטי':\r\n      pin = <IconCar fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'אופנוע עד 50 סמ\"ק':\r\n    case 'אופנוע 51 עד 125 סמ\"ק':\r\n    case 'אופנוע 126 עד 400 סמ\"ק':\r\n    case 'אופנוע 401+ סמ\"ק':\r\n      pin = <IconMotorcycle fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'אופניים':\r\n      pin = <IconBike fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'אופניים חשמליים':\r\n      pin = <IconBike fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'קורקינט חשמלי':\r\n      pin = <IconScooter fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'אוטובוס':\r\n    case 'אוטובוס זעיר':\r\n      pin = <IconBus fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    case 'משא 3.6 עד 9.9 טון':\r\n    case 'משא 10.0 עד 12.0 טון':\r\n    case 'משא 12.1 עד 15.9 טון':\r\n    case 'משא 16.0 עד 33.9 טון':\r\n    case 'משא 34.0+ טון':\r\n      pin = <IconTruck fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n    default:\r\n      pin = <IconQuestion fill={color} isAccuratePos={isAccuratePos}/>;\r\n      break;\r\n  }\r\n  const iconMarkup = renderToStaticMarkup(\r\n    pin,\r\n  );\r\n  const res = customMarketIcon(iconMarkup);\r\n  return res;\r\n};\r\n\r\nconst getEmptyIcon = (color: string, isAccuratePos: boolean) => {\r\n  const pin = <IconEmpty fill={color} isAccuratePos={isAccuratePos}/>;\r\n  const iconMarkup = renderToStaticMarkup(\r\n    pin,\r\n  );\r\n  const res = customMarketIcon(iconMarkup);\r\n  return res;\r\n};\r\n\r\ninterface IProps {\r\n  data: Accident,\r\n  position: LatLngExpression;\r\n  language: string,\r\n  colorBy : string,\r\n  markerIconsType: string,\r\n}\r\nconst MarkerSvg: React.FC<IProps> = (({\r\n  data, position, language, colorBy, markerIconsType,\r\n}) => {\r\n  //const lPoint = new L.LatLng(data.latitude, data.longitude);\r\n  const color = getColors(colorBy, data);\r\n  const isAccuratePos = data.location_accuracy_hebrew === 'עיגון מדויק';\r\n  const icon = (markerIconsType === 'general') ? getEmptyIcon(color, isAccuratePos)\r\n    : getSVGPinByCategory(data.vehicle_vehicle_type_hebrew, color, isAccuratePos);\r\n  // console.log(data.vehicle_vehicle_type_hebrew);\r\n  // const icon: L.Icon = setIconBySeverity(data.injury_severity_hebrew, useSmallMarkers);\r\n  return (\r\n    <Marker position={position} icon={icon}>\r\n      <AccidentPopUp data={data} language={language} />\r\n    </Marker>\r\n  );\r\n});\r\n\r\nexport default MarkerSvg;\r\n","\r\nimport React, {FC} from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport {useAccidentMarkers} from '../../hooks/useAccidentMarkers';\r\nimport MarkerSvg from './MarkerSvg';\r\n\r\nconst AccidentsMarkers: FC = observer(() => {\r\n  const markers = useAccidentMarkers();\r\n  console.log ('markers1', markers);\r\n  return (\r\n    <div>\r\n      {markers.map((marker:any) => (\r\n        <MarkerSvg\r\n          key={marker.key}\r\n          position={marker.position}\r\n          data={marker.data}\r\n          language={marker.language}\r\n          colorBy={marker.colorBy}\r\n          markerIconsType={marker.markerIconsType}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AccidentsMarkers;","import { FC, useEffect } from 'react';\r\nimport { useMap } from 'react-leaflet';\r\n\r\ninterface IPropsMapCenterUpdater {\r\n  center: L.LatLng\r\n}\r\n/// update the map, on change in center (from store)\r\nconst MapCenterUpdater: FC<IPropsMapCenterUpdater> = ({ center }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    if (map && center) {\r\n      map.setView([center.lat, center.lng]);\r\n    }\r\n  }, [map, center]);\r\n\r\n  return null; // This component does not render anything\r\n};\r\n\r\nexport default MapCenterUpdater;","import React from \"react\";\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Marker, Popup, useMap, useMapEvents } from \"react-leaflet\";\r\nimport L, { LatLngExpression } from \"leaflet\";\r\nimport { useAccidentMarkers } from '../../hooks/useAccidentMarkers';\r\nimport MarkerSvg from './MarkerSvg';\r\nimport AccidentPopUp from './AccidentPopUp';\r\nimport { MarkerData, Accident } from '../../types';\r\nimport orangeMarker from '../../assets/marker-icon-2x-orange2.png';\r\nimport shadoMarker from '../../assets/marker-shadow.png';\r\nimport './map.css';\r\n\r\nconst iconSize = {\r\n    iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41],\r\n  };\r\n  const mIconSizes = {\r\n    iconSize: [20, 20], iconAnchor: [10, 10], popupAnchor: [1, -10],\r\n  };\r\nconst ORANGE_ICON = new L.Icon({\r\n    iconUrl: orangeMarker,\r\n    shadowUrl: shadoMarker,\r\n    iconSize: L.point(iconSize.iconSize[0], iconSize.iconSize[1]),\r\n    iconAnchor: L.point(iconSize.iconAnchor[0], iconSize.iconAnchor[1]),\r\n    popupAnchor: L.point(iconSize.popupAnchor[0], iconSize.popupAnchor[1]),\r\n    shadowSize: L.point(iconSize.shadowSize[0], iconSize.shadowSize[1]),\r\n  });\r\n\r\ntype MarkerData1 = {\r\n  key: number;\r\n  position: LatLngExpression;\r\n  markerIconsType: string;\r\n  language: string;\r\n};\r\n\r\n// Function for creating custom icon for cluster group\r\n// https://github.com/Leaflet/Leaflet.markercluster#customising-the-clustered-markers\r\n// NOTE: iconCreateFunction is running by leaflet, which is not support ES6 arrow func syntax\r\n// eslint-disable-next-line\r\nconst createClusterCustomIcon = function (cluster:any) {\r\n  const test = cluster.length; //.getChildCount()\r\n  return L.divIcon({\r\n    html: `<span>${test}</span>`,\r\n    className: 'marker-cluster-custom',\r\n    iconSize: L.point(40, 40, true),\r\n  });\r\n};\r\n\r\n// const accidentMock :Accident = {\r\n//   _id: 1, latitude: 32.032, longitude: 34.739, accident_timestamp: \"\", day_in_week_hebrew: \"\",\r\n//   day_night_hebrew: 'day',\r\n//   injured_type_hebrew: \"\",\r\n//   injury_severity_hebrew: \"\",\r\n//   vehicle_vehicle_type_hebrew: \"\",\r\n//   sex_hebrew: \"\",\r\n//   age_group_hebrew: \"\",\r\n//   population_type_hebrew: \"\",\r\n//   road2: \"\",\r\n//   road_type_hebrew: \"\",\r\n//   accident_type_hebrew: \"\",\r\n//   vehicles: \"\"\r\n// } ;\r\n\r\n// const markers1: MarkerData[] = [\r\n//   { key: '1', position: [32.032, 34.739], markerIconsType: \"Marker 1\" , language:'he', colorBy: 'Severity', data:accidentMock},\r\n//   { key: '2', position: [32.032, 34.739], markerIconsType: \"Marker 2\" , language:'he', colorBy: 'Severity', data:accidentMock},\r\n//   { key: '3', position: [32.034, 34.742], markerIconsType: \"Marker 3\" , language:'he', colorBy: 'Severity', data:accidentMock},\r\n//   { key: '4', position: [32.034, 34.746], markerIconsType: \"Marker 4\" , language:'he', colorBy: 'Severity', data:accidentMock},\r\n// ];\r\n\r\nconst createFlower = (center: LatLngExpression, count: number): LatLngExpression[] => {\r\n  const radius = 0.0005; // Adjust for spacing\r\n  const angleStep = (2 * Math.PI) / count;\r\n  return Array.from({ length: count }, (_, i) => {\r\n    const angle = i * angleStep;\r\n    const latOffset = radius * Math.sin(angle);\r\n    const lngOffset = radius * Math.cos(angle);\r\n    return [\r\n      (center as [number, number])[0] + latOffset,\r\n      (center as [number, number])[1] + lngOffset,\r\n    ];\r\n  });\r\n};\r\n\r\nconst ClusteredMarkers: React.FC = observer(() => {\r\n  const map = useMap();\r\n  //const [currZoom, setCurrZoom] = React.useState(map.getZoom()); // Store the current zoom level\r\n\r\n  // Listen for zoom events\r\n  // useMapEvents({\r\n  //   zoomend: () => {\r\n  //     setCurrZoom(map.getZoom()); // Update zoom level when the map zooms\r\n  //   },\r\n  // });\r\n  // const zoomThreshold = 15; // Define zoom level to \"explode\" clusters into flowers\r\n  const markers = useAccidentMarkers();\r\n  // const markers  = markers1;\r\n  console.log ('markers', markers);\r\n  const clusteredMarkers = markers.reduce<MarkerData[][]>((clusters, marker) => {\r\n    const existingCluster = clusters.find(cluster =>\r\n      L.latLng(cluster[0].position).equals(L.latLng(marker.position))\r\n    );\r\n    if (existingCluster) {\r\n      existingCluster.push(marker);\r\n    } else {\r\n      clusters.push([marker]);\r\n    }\r\n    return clusters;\r\n  }, []);\r\n  const icon: L.Icon = ORANGE_ICON;\r\n  return (\r\n    <>\r\n      {clusteredMarkers.map((cluster, index) => {\r\n        if (cluster.length === 1 ) {\r\n          // Single marker or zoomed out - show as normal marker\r\n          return (\r\n            <MarkerSvg\r\n              key={cluster[0].key}\r\n              position={cluster[0].position}\r\n              data={cluster[0].data}\r\n              language={cluster[0].language}\r\n              colorBy={cluster[0].colorBy}\r\n              markerIconsType={cluster[0].markerIconsType}\r\n            />\r\n            // <Marker key={cluster[0].key} position={cluster[0].position} icon={icon}>\r\n            //    <AccidentPopUp data={cluster[0].data} language={cluster[0].language} />\r\n            //    {/* <Popup>{cluster[0].position.toString()}</Popup> */}\r\n            // </Marker>\r\n          );\r\n        } else {\r\n          // Flower arrangement for clustered markers\r\n          const flowerPositions = createFlower(cluster[0].position, cluster.length);\r\n          return flowerPositions.map((position, i) => (\r\n            <MarkerSvg\r\n              key={`${cluster[0].key}-${i}`}\r\n              position={position}\r\n              data={cluster[i].data}\r\n              language={cluster[i].language}\r\n              colorBy={cluster[i].colorBy}\r\n              markerIconsType={cluster[i].markerIconsType}\r\n            />\r\n            //  <Marker key={`${cluster[0].key}-${i}`} position={position} icon={icon}>\r\n            //   <Popup>\r\n            //     <div>\r\n            //       {cluster.map(marker => (\r\n            //         // <div key={marker.key}>{marker.position.toString()}</div>\r\n            //         <div key={marker.key}>{marker.position.toString() + ',' + marker.data.injured_type_hebrew +',' + marker.data.accident_timestamp}</div>\r\n            //       ))}\r\n            //     </div>\r\n            //   </Popup>\r\n            // </Marker> \r\n          ));\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n});\r\n  \r\nexport default ClusteredMarkers;\r\n","import { useEffect } from 'react';\r\nimport { useMap } from 'react-leaflet';\r\nimport i18n from 'i18next';\r\n// import PropTypes from \"prop-types\";\r\nimport L from 'leaflet';\r\nimport { createLegendByColorType } from '../../../utils/mapUtils';\r\n\r\nconst legendHtmlFor = (title) => {\r\n  const header = `<h5>${i18n.t(title)}</h5>`;\r\n  const res = createLegendByColorType(title);\r\n  res.unshift(header);\r\n  return res.join('');\r\n};\r\n\r\nconst Legend = ({ title }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    const legend = L.control({ position: 'bottomleft' });\r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create('div', 'info legend');\r\n      div.innerHTML = legendHtmlFor(title);\r\n      return div;\r\n    };\r\n    legend.addTo(map);\r\n    return () => legend.remove();\r\n  }, [map, title]);\r\n  return null;\r\n};\r\n\r\nexport default Legend;\r\n\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useStore } from '../../../stores/storeConfig';\r\nimport Legend from './Legend';\r\nimport './legend.css';\r\n\r\nconst LegendWarpper: React.FC<{}> = observer(() => {\r\n  const { mapStore } = useStore();\r\n  const { markerColorType } = mapStore;\r\n  return (\r\n    <Legend title={markerColorType}\r\n  />\r\n  );\r\n});\r\nexport default LegendWarpper;","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport { observer } from 'mobx-react';\r\nimport Select from '../atoms/Select';\r\n\r\nconst SelectMarkersColorType: FC<{}> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { mapStore } = useStore();\r\n  const { markerColorType, setMarkerColorType, markerColorTypesArr } = mapStore;\r\n  return (\r\n    <div className='map-select-div' id=\"map.iconColor\">\r\n      <span className='map-select-labelspan'>\r\n        {t('MarkersColorType')}:\r\n      </span>\r\n      <span>\r\n        <Select\r\n          id='map.SelectMarkersColorType'\r\n          value={markerColorType}\r\n          data={markerColorTypesArr}\r\n          onChange={(val: string) => setMarkerColorType(val)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\nexport default SelectMarkersColorType;","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport { observer } from 'mobx-react';\r\nimport Select from '../atoms/Select';\r\n\r\nconst SelectMarkersIConType: FC<{}> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { mapStore } = useStore();\r\n  const { markerIconsType, setMarkerIconsType, markerIconTypesArr } = mapStore;\r\n  return (\r\n    <div className='map-select-div' id=\"map.iconType\">\r\n      <span className='map-select-labelspan'>\r\n        {t('MarkersIconType')}:\r\n      </span>\r\n      <span>\r\n        <Select\r\n          id='map.SelectMarkersIConType'\r\n          value={markerIconsType}\r\n          data={markerIconTypesArr}\r\n          onChange={(val: string) => setMarkerIconsType(val)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\nexport default SelectMarkersIConType; ","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport Select from '../atoms/Select';\r\nimport { useStore } from '../../stores/storeConfig';\r\n\r\nconst SelectMapMarkersType: FC<{}> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { mapStore } = useStore();\r\n  const { mapMarkersType, setMapMarkersType, mapMarkersTypesArr } = mapStore;\r\n  const handleChange = (selectedVal: string) => {\r\n    const selectedType = mapMarkersTypesArr.find(item => item.val === selectedVal)?.val;\r\n    if (selectedType) {\r\n      setMapMarkersType(selectedType);\r\n    }\r\n  };\r\n  return (\r\n    <div className='map-select-div' id=\"map.markersType\">\r\n      <span className='map-select-labelspan'>\r\n        {t('MapMarkersType')}:\r\n      </span>\r\n      <span>\r\n        <Select\r\n          id='map.SelectMapMarkersType'\r\n          value={mapMarkersType}\r\n          data={mapMarkersTypesArr}\r\n          onChange={(val: string) => handleChange(val)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\nexport default SelectMapMarkersType;","import React, { FunctionComponent } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\n// import L from 'leaflet'\r\n// @ts-ignore\r\nimport {HeatmapLayer} from 'react-leaflet-heatmap-layer-v3';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport { BBoxType } from '../../types';\r\n// import logger from '../../services/logger';\r\n\r\ninterface IProps {\r\n  fitBoundsOnUpdate?: boolean| undefined;\r\n}\r\nconst AccidentHeatLayer: FunctionComponent<IProps> = observer(({ fitBoundsOnUpdate = false }: IProps) => {\r\n  const { mapStore, filterStore } = useStore();\r\n  const { bboxType, dataMarkersInBounds } = mapStore;\r\n  const { dataMarkersLean, dataAllInjuries, isUse2StepsMarkers } = filterStore;\r\n  let reactMarkers;\r\n  debugger;\r\n  if (bboxType !== BBoxType.NO_BBOX) reactMarkers = toJS(dataMarkersInBounds);\r\n  else if (isUse2StepsMarkers) {\r\n    reactMarkers = toJS(dataMarkersLean);\r\n  } else {\r\n    reactMarkers = toJS(dataAllInjuries);\r\n  }\r\n  // logger.log(\"reactMarkers \", reactMarkers.length)\r\n  const newArr: any[] = reactMarkers.map((x) => [x.latitude, x.longitude, x._id]);\r\n  //const newArr1: any[] =  [{32.08, 34.83, 1}]\r\n  return (\r\n    <HeatmapLayer\r\n      fitBoundsOnLoad={fitBoundsOnUpdate}\r\n      fitBoundsOnUpdate={fitBoundsOnUpdate}\r\n      points={newArr}\r\n      longitudeExtractor={(m: any) => m[1]}\r\n      latitudeExtractor={(m: any) => m[0]}\r\n      intensityExtractor={(m: any) => parseFloat(m[2])}\r\n      />\r\n  );\r\n});\r\nexport default AccidentHeatLayer;\r\n","import React, { FC, useRef } from 'react';\r\nimport { MapContainer, TileLayer, useMapEvent } from 'react-leaflet';\r\nimport L, { Map as LeafletMap, LatLngTuple } from 'leaflet';\r\nimport { observer } from 'mobx-react';\r\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\r\nimport { store } from '../../stores/storeConfig';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { MapMarkersType } from '../../types';\r\nimport AccidentsMarkers from './AccidentsMarkers';\r\nimport MapCenterUpdater from './MapCenterUpdater';\r\nimport ClusteredMarkers from './ClusteredMarkers';\r\nimport LegendWarpper from './legend/LegendWarpper';\r\nimport SelectMarkersColorType from './SelectMarkersColorType';\r\nimport SelectMarkersIConType from './SelectMarkersIConType';\r\nimport SelectMapMarkersType from './SelectMapMarkersType';\r\nimport AccidentHeatLayer from './AccidentHeatLayer';\r\n\r\n// Function for creating custom icon for cluster group\r\n// https://github.com/Leaflet/Leaflet.markercluster#customising-the-clustered-markers\r\n// NOTE: iconCreateFunction is running by leaflet, which is not support ES6 arrow func syntax\r\n// eslint-disable-next-line\r\nconst createClusterCustomIcon = function (cluster:any) {\r\n  const allMarkers = cluster.getAllChildMarkers(); \r\n  const totalCount = allMarkers.length; \r\n  return L.divIcon({\r\n    html: `<span>${totalCount}</span>`,\r\n    className: 'marker-cluster-custom',\r\n    iconSize: L.point(40, 40, true),\r\n  });\r\n};\r\n\r\nconst styels: any = {\r\n  buttonsPanel: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap',\r\n    paddingTop: '0.2rem',\r\n    margin: '5px'\r\n  },\r\n};\r\n\r\ninterface IProps {\r\n}\r\nconst AccidentsMap: FC<IProps> = observer(() => {\r\n  const mapRef = useRef<LeafletMap | null>(null);\r\n  const { mapStore } = store;\r\n  const { updateMapBounds } = mapStore;\r\n\r\n  const MapEventHandlerMoveEnd: FC = () => {\r\n    const map = useMapEvent(\"moveend\", () => {\r\n      const newBounds = map.getBounds();\r\n      updateMapBounds(newBounds);\r\n    });\r\n    return null;\r\n  };\r\n\r\n  const handleMapReady = () => {\r\n    // Wait 1 second before fetching the bounds\r\n    setTimeout(() => {\r\n      const bounds = mapRef.current?.getBounds();\r\n      if (bounds) {\r\n        //updateMapBounds to get markers in bbox         \r\n        updateMapBounds(bounds);\r\n      }\r\n    }, 500); //delay to get mapRef.current\r\n  };\r\n  //const {isLoading} = filterStore;\r\n  const { mapCenter, mapMarkersType } = mapStore;\r\n  const position: LatLngTuple = [mapCenter.lat, mapCenter.lng] as LatLngTuple;\r\n  return (\r\n    <div id=\"map\">\r\n      <MapContainer center={position} zoom={13}\r\n        ref={mapRef}\r\n        scrollWheelZoom={true}\r\n        whenReady={handleMapReady}\r\n        style={{ height: '74vh', width: '100%' }}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {mapMarkersType === MapMarkersType.Heat_Map && <AccidentHeatLayer />}\r\n        {mapMarkersType === MapMarkersType.Markers && <AccidentsMarkers />}\r\n        {mapMarkersType === MapMarkersType.Markers_AND_Clusters &&<MarkerClusterGroup \r\n          showCoverageOnHover={false}\r\n          spiderfyDistanceMultiplier={2}\r\n          maxClusterRadius= {10}\r\n          iconCreateFunction={createClusterCustomIcon}>\r\n          <ClusteredMarkers />\r\n       </MarkerClusterGroup>}\r\n        <MapCenterUpdater center={mapCenter} />\r\n        <LegendWarpper />\r\n        <MapEventHandlerMoveEnd />\r\n      </MapContainer>\r\n      <div style={styels.buttonsPanel}>\r\n        <SelectMapMarkersType />\r\n        <SelectMarkersColorType />\r\n        <SelectMarkersIConType />        \r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AccidentsMap;"],"names":["styleSelect","width","_ref","label","id","data","value","onChange","t","useTranslation","opttions","map","x","index","_jsx","val","children","text","_jsxs","Form","Group","as","Col","controlId","Label","className","Control","style","e","target","useAccidentMarkers","filterStore","mapStore","uiStore","useStore","isUse2StepsMarkers","markersLoadStep","dataMarkersLean","dataAllInjuries","bboxType","dataMarkersInBounds","markerIconsType","markerColorType","markers","setMarkers","useState","useEffect","disposer","autorun","reactMarkers","BBoxType","NO_BBOX","toJS","updatedMarkers","latitude","isNaN","Number","parseFloat","toFixed","longitude","key","_id","position","language","colorBy","error","console","filter","marker","getColorByVehicle","category","res","getColorByAccidentType","getColorByAccidentSelfOrNot","getColorBySeverity","severity","getColorByDayNight","getColorByGender","getColorByRoadType","createLegendArr","grades","getColorfunc","labels","forEach","push","IconBike","fill","height","isAccuratePos","viewBox","xmlns","d","cx","cy","r","transform","IconBus","stroke","IconCar","x1","x2","y1","y2","IconEmpty","IconMotorcycle","IconScooter","strokeWidth","strokeLinecap","points","IconQuestion","IconTruck","IconWalk","pStyle","color","undefined","injured_type_hebrew","Popup","accident_timestamp","slice","day_in_week_hebrew","day_night_hebrew","injury_severity_hebrew","vehicle_vehicle_type_hebrew","sex_hebrew","age_group_hebrew","population_type_hebrew","accident_yishuv_name","street1_hebrew","street2_hebrew","road1","road2","road_segment_name","road_type_hebrew","location_accuracy_hebrew","accident_type_hebrew","vehicles","speed_limit_hebrew","multi_lane_hebrew","one_lane_hebrew","road_width_hebrew","customMarketIcon","iconMarkup","divIcon","html","iconAnchor","popupAnchor","getColors","icon","getEmptyIcon","pin","renderToStaticMarkup","getSVGPinByCategory","Marker","AccidentPopUp","observer","log","MarkerSvg","center","useMap","setView","lat","lng","iconSize","L","iconUrl","orangeMarker","shadowUrl","shadoMarker","shadowSize","clusteredMarkers","reduce","clusters","existingCluster","find","cluster","equals","_Fragment","length","createFlower","count","radius","angleStep","Math","PI","Array","from","_","i","angle","latOffset","sin","lngOffset","cos","legendHtmlFor","title","header","i18n","grade","createLegendByColorType","unshift","join","legend","onAdd","div","create","innerHTML","addTo","remove","Legend","setMarkerColorType","markerColorTypesArr","Select","setMarkerIconsType","markerIconTypesArr","mapMarkersType","setMapMarkersType","mapMarkersTypesArr","selectedVal","_mapMarkersTypesArr$f","selectedType","item","handleChange","fitBoundsOnUpdate","newArr","HeatmapLayer","fitBoundsOnLoad","longitudeExtractor","m","latitudeExtractor","intensityExtractor","createClusterCustomIcon","totalCount","getAllChildMarkers","styels","buttonsPanel","display","justifyContent","flexWrap","paddingTop","margin","AccidentsMap","mapRef","useRef","store","updateMapBounds","MapEventHandlerMoveEnd","useMapEvent","newBounds","getBounds","mapCenter","MapContainer","zoom","ref","scrollWheelZoom","whenReady","handleMapReady","setTimeout","_mapRef$current","bounds","current","TileLayer","attribution","url","MapMarkersType","Heat_Map","AccidentHeatLayer","Markers","AccidentsMarkers","Markers_AND_Clusters","MarkerClusterGroup","showCoverageOnHover","spiderfyDistanceMultiplier","maxClusterRadius","iconCreateFunction","ClusteredMarkers","MapCenterUpdater","LegendWarpper","SelectMapMarkersType","SelectMarkersColorType","SelectMarkersIConType"],"sourceRoot":""}