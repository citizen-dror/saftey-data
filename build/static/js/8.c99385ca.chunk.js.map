{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","components/atoms/SelectGroupBy.tsx","components/atoms/SelectGroupBy2.tsx","components/molecules/GroupByTable.tsx","components/organisms/GroupByTablesPanel.tsx"],"names":["DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","SelectGroupBy","observer","id","labelText","t","useTranslation","filterStore","useStore","groupByDict","groupBy","updateGroupby","onSelectChange","useCallback","event","target","value","fixData","Object","entries","map","text","onChange","label","data","valProp","contentProp","deafaultVal","SelectGroupBy2","group2Dict","groupBy2","updateGroupBy2","GroupByTable","dataName","columns","data1","undefined","x","count","Number","isInteger","_id","toFixed","foramtDataPrecision","reactColumns","dataField","keyField","headerClasses","GroupByTablesPanel","Fragment","Col","md","GroupTablesYears","GroupTablesYears2","GroupTablesFilter","GroupTables2Grp","dataByYears","casualtiesNames","reactData1","toJS","length","SmallCard2","header","dataFilterdByYears","reactData2","dataFilterd","reactData","style","display","flexDirection","dataGroupby2","columnsGrp2","getColumns","reactDataGrp2","show"],"mappings":"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","file":"static/js/8.c99385ca.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React, { ChangeEvent, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport MySelect from './MySelect';\r\n// import Select from './Select';\r\n\r\ninterface IProps {\r\n  id: string,\r\n  labelText?: string,\r\n}\r\nconst SelectGroupBy: React.FC<IProps> = observer(({ id, labelText = 'GroupBy' }) => {\r\n  const { t } = useTranslation();\r\n  const { filterStore } = useStore();\r\n  const { groupByDict, groupBy, updateGroupby } = filterStore;\r\n\r\n  const onSelectChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\r\n    updateGroupby(event.target.value);\r\n  }, [updateGroupby]);\r\n\r\n  const fixData = Object.entries(groupByDict).map(([key, item]: any) => {\r\n    return {\r\n      value: key,\r\n      text: item.text\r\n    }\r\n  })\r\n  return (\r\n    <MySelect\r\n      onChange={onSelectChange}\r\n      label={t('GroupBy')}\r\n      data={fixData}\r\n      valProp=\"value\"\r\n      contentProp=\"text\"\r\n      deafaultVal={groupBy.text}\r\n    />\r\n  );\r\n});\r\nexport default SelectGroupBy;\r\n","import React, { ChangeEvent, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport MySelect from './MySelect';\r\n\r\n\r\ninterface IProps { id: string }\r\n\r\nconst SelectGroupBy2: React.FC<IProps> = observer(({ id }) => {\r\n  const { t } = useTranslation();\r\n  const { filterStore } = useStore();\r\n  const { group2Dict, groupBy2, updateGroupBy2 } = filterStore;\r\n  const onSelectChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\r\n    updateGroupBy2(event.target.value);\r\n  }, [updateGroupBy2]);\r\n\r\n  const fixData = Object.entries(group2Dict).map(([key, item]: any) => {\r\n    return {\r\n      value: key,\r\n      text: item.text\r\n    }\r\n  })\r\n\r\n  return (\r\n    <MySelect\r\n      onChange={onSelectChange}\r\n      data={fixData}\r\n      // label={t('GroupBy')}\r\n      valProp=\"value\"\r\n      contentProp=\"text\"\r\n      deafaultVal={groupBy2.text}\r\n    />\r\n  );\r\n});\r\nexport default SelectGroupBy2;\r\n","\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n// import { observer } from \"mobx-react\"\r\n// @ts-ignore\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\ninterface IProps {\r\n    dataName?:string;\r\n    data: any[];\r\n    columns? :any[];\r\n  }\r\n\r\nconst foramtDataPrecision = (data: any[]) => {\r\n  const data2 = data.map((x) => {\r\n    if (typeof x.count === 'number' && !Number.isInteger(x.count)) {\r\n      return { _id : x._id, count: x.count.toFixed(1) };\r\n    }\r\n    return { _id : x._id, count: x.count};\r\n  });\r\n  return data2;\r\n};\r\n\r\nconst GroupByTable:FunctionComponent<IProps> = ({ dataName = 'Year', columns, data }) => {\r\n  // do format only grp1 and not grpBy2\r\n  const data1 = (columns === undefined) ? foramtDataPrecision(data) : data;\r\n  const { t } = useTranslation();\r\n  // let reactColumns = 1;\r\n  const reactColumns = (columns === undefined) ? [{\r\n    dataField: '_id',\r\n    text: t(dataName),\r\n  }, {\r\n    dataField: 'count',\r\n    text: t('casualties'),\r\n  }] : columns;\r\n  if (data != null) {\r\n    return (\r\n      <div className=\"groupByTable\">\r\n        <BootstrapTable keyField=\"_id\" data={data1} columns={reactColumns} headerClasses=\"table-header\" />\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default GroupByTable;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { observer } from 'mobx-react';\r\nimport { toJS } from 'mobx';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport GroupByTable from '../molecules/GroupByTable';\r\nimport SmallCard2 from '../atoms/SmallCard2';\r\nimport SelectGroupBy from '../atoms/SelectGroupBy';\r\nimport SelectGroupBy2 from '../atoms/SelectGroupBy2';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\ninterface IProps { }\r\nexport const GroupByTablesPanel: React.FC<IProps> = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col md={4} >\r\n          <GroupTablesYears />\r\n        </Col>\r\n        <Col md={4}>\r\n          <GroupTablesYears2 />\r\n        </Col>\r\n        <Col md={4}>\r\n          <GroupTablesFilter />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={12}>\r\n          <GroupTables2Grp />\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst GroupTablesYears: React.FC<IProps> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { filterStore } = useStore();\r\n  const { dataByYears, casualtiesNames } = filterStore;\r\n  const reactData1 = toJS(dataByYears);\r\n  if (reactData1.length > 0) {\r\n    return (\r\n      <SmallCard2 header={`${t(casualtiesNames)} ${t('in-region')}, ${t('by-years')}`}>\r\n        <GroupByTable data={reactData1} />\r\n      </SmallCard2>\r\n    );\r\n  }\r\n  return null;\r\n});\r\nconst GroupTablesYears2: React.FC<IProps> = observer(() => {\r\n  const { t } = useTranslation();\r\n  const { filterStore } = useStore();\r\n  const { dataFilterdByYears, casualtiesNames } = filterStore;\r\n  const reactData2 = toJS(dataFilterdByYears);\r\n  if (reactData2.length > 0) {\r\n    return (\r\n      <SmallCard2 header={`${t(casualtiesNames)} ${t('by-years')}`}>\r\n        <GroupByTable data={reactData2} />\r\n      </SmallCard2>\r\n    );\r\n  }\r\n  return null;\r\n});\r\nconst GroupTablesFilter: React.FC<IProps> = observer(() => {\r\n  const divStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  } as React.CSSProperties;\r\n  const { filterStore } = useStore();\r\n  const { dataFilterd, groupBy } = filterStore;\r\n  const reactData = toJS(dataFilterd);\r\n\r\n  if (reactData.length > 0) {\r\n    return (\r\n      <SmallCard2>\r\n        <div style={divStyle}>\r\n          <SelectGroupBy id=\"Tables.Main\" />\r\n        </div>\r\n        <hr />\r\n        <GroupByTable data={reactData} dataName={groupBy.text} />\r\n      </SmallCard2>\r\n    );\r\n  }\r\n  return null;\r\n});\r\n\r\nconst GroupTables2Grp: React.FC<IProps> = observer(() => {\r\n  const divStyle = {\r\n    display: 'flex',\r\n    // flexWrap: 'wrap',\r\n  } as React.CSSProperties;\r\n  const styleLable = {\r\n    fontWeight: 700,\r\n    lineHeight: '40px',\r\n    marginLeft: '15px',\r\n    // marginTop: '5px',\r\n    // marginRight: '20px',\r\n  };\r\n  const { t } = useTranslation();\r\n  const { filterStore } = useStore();\r\n  const { groupBy, groupBy2, dataGroupby2 } = filterStore;\r\n  const columnsGrp2 = groupBy2.getColumns().map((x: any) => ({ dataField: x, text: t(x) }));\r\n  const reactDataGrp2 = toJS(dataGroupby2);\r\n  const show = (groupBy.text !== 'CityByPop');\r\n  if (reactDataGrp2.length > 0) {\r\n    return (\r\n      <>\r\n        { show\r\n          && (\r\n            <SmallCard2>\r\n              <div style={divStyle}>\r\n                {/* <span style={styleLable}>\r\n                  {' '}\r\n                  {t('GroupBy')}\r\n                  :\r\n                </span> */}\r\n                <SelectGroupBy\r\n                  id=\"Tables.Grp2\"\r\n                  labelText=\"\"\r\n                />\r\n                &nbsp;\r\n                <SelectGroupBy2 id=\"Tables\" />\r\n              </div>\r\n              <hr />\r\n              <GroupByTable\r\n                data={reactDataGrp2}\r\n                dataName={groupBy.text}\r\n                columns={columnsGrp2}\r\n              />\r\n            </SmallCard2>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n});\r\nexport default GroupByTablesPanel;\r\n"],"sourceRoot":""}