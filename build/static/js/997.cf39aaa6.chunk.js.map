{"version":3,"file":"static/js/997.cf39aaa6.chunk.js","mappings":"8OAoBA,MAoEMA,GAAeC,EAAAA,EAAAA,MA2PrB,SAASC,EAAMC,GAMX,IAADC,EAAAC,EAAAC,EAAA,IANa,OACdC,EAAM,MACNC,GAIDL,EACC,MAAMM,EAEQ,QAFEL,EAAGI,EAChBE,yBACAC,SAAS,UAAE,IAAAP,OAAA,EAFKA,EAEHQ,SAASL,EAAOM,IAE1BC,EAAoBP,EAAOQ,iBAEjC,MAA6B,kBAAfN,GACZO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBC,QAASC,GAAKA,EAAEC,kBAAkBC,SAAA,EAChEC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,MAAmD,QAA9CnB,EAAoB,OAAjBS,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAyC,UAAE,IAAAT,EAAAA,EAAI,GACvDoB,SAAUN,GACRZ,EAAOmB,gBAAgBC,GAA0B,CAC/CR,EAAES,OAAOJ,MACN,OAAHG,QAAG,IAAHA,OAAG,EAAHA,EAAM,MAGVE,YAAa,MACbZ,UAAU,gCAEZK,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,MAAmD,QAA9ClB,EAAoB,OAAjBQ,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAyC,UAAE,IAAAR,EAAAA,EAAI,GACvDmB,SAAUN,GACRZ,EAAOmB,gBAAgBC,GAA0B,CAC5C,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAM,GACNR,EAAES,OAAOJ,SAGbK,YAAa,MACbZ,UAAU,mCAIdK,EAAAA,EAAAA,KAAA,SACEL,UAAU,6BACVQ,SAAUN,GAAKZ,EAAOmB,eAAeP,EAAES,OAAOJ,OAC9CN,QAASC,GAAKA,EAAEC,kBAChBS,YAAa,YACbN,KAAK,OACLC,MAAyB,OAAjBV,QAAiB,IAAjBA,EAAAA,EAAqB,IAGnC,CAEA,SAtPyCgB,EAAAA,EAAAA,KAAS,KAChD,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,OAClB,EAAEC,IAAMC,EAAAA,EAAAA,MAGRC,GAFeC,EAAAA,EAAAA,IAAKL,EAAYM,kBAG/BC,EAAMC,GAAYC,EAAAA,UAAe,IAAM,IAAIL,MAC3CM,EAAYC,GAAiBF,EAAAA,SAAgC,CAClEG,UAAW,EACXC,SAAU,KAGNC,EAAU,CAEd7C,EAAa8C,SAAS,gBAAiB,CACrCC,KAAMC,IAAQ1B,EAAAA,EAAAA,KAAA,KAAAD,SAAI2B,EAAKpC,aACvBqC,OAAQhB,EAAE,QACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,yBAA0B,CAC9CG,OAAQhB,EAAE,YACVc,KAAMC,GAAQA,EAAKG,cACnBD,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,sBAAuB,CAC3CG,OAAQhB,EAAE,eACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,uBAAwB,CAC5CG,OAAQhB,EAAE,QACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,iBAAkB,CACtCG,OAAQhB,EAAE,UACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,8BAA+B,CACnDG,OAAQhB,EAAE,eACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,uBAAwB,CAC5CG,OAAQhB,EAAE,gBACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,mBAAoB,CACxCG,OAAQhB,EAAE,OACViB,OAAQF,GAAQA,EAAKzC,OAAOM,KAE9Bb,EAAa8C,SAAS,aAAc,CAClCG,OAAQhB,EAAE,UACViB,OAAQF,GAAQA,EAAKzC,OAAOM,MAG1BL,GAAQ4C,EAAAA,EAAAA,IAAc,CAC1BP,UACAP,OACAe,YAAY,EACZC,iBAAiBA,EAAAA,EAAAA,MACjBC,mBAAmBA,EAAAA,EAAAA,MACnBC,qBAAqBA,EAAAA,EAAAA,MACrBC,uBAAuBA,EAAAA,EAAAA,MACvBC,mBAAoBhB,EAEpBiB,MAAO,CACLlB,gBAKJ,OACEzB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKI,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,SACfD,EAAAA,EAAAA,MAAC4C,EAAAA,EAAc,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAA1C,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAAD,SACGb,EAAMwD,kBAAkBC,KAAIC,IAC3B5C,EAAAA,EAAAA,KAAA,MAAAD,SACG6C,EAAYC,QAAQF,KAAIhB,IAAW,IAADmB,EACjC,OACE9C,EAAAA,EAAAA,KAAA,MAAoB+C,QAASpB,EAAOoB,QAAQhD,UAC1CL,EAAAA,EAAAA,MAAA,OAEIC,UAAWgC,EAAO1C,OAAO+D,aACrB,6BACA,GACJpD,QAAS+B,EAAO1C,OAAOgE,0BAAyBlD,SAAA,EAGjDmD,EAAAA,EAAAA,IACEvB,EAAO1C,OAAOkE,UAAUxB,OACzBA,EAAOyB,cAK+B,QAJvCN,EACA,CACCO,IAAK,gBACLC,KAAM,iBACN3B,EAAO1C,OAAOsE,sBAAwB,IAAAT,EAAAA,EAAI,KAC3CnB,EAAO1C,OAAOuE,gBACbxD,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACpB,EAAM,CAACK,OAAQ0C,EAAO1C,OAAQC,MAAOA,MAEtC,SArBCyC,EAAOpC,GAuBX,KA1BFqD,EAAYrD,SAgCzBS,EAAAA,EAAAA,KAAA,SAAAD,SACGb,EAAMuE,cAAcC,KAAKf,KAAIgB,IAE1B3D,EAAAA,EAAAA,KAAA,MAAAD,SACG4D,EAAIC,kBAAkBjB,KAAIlB,IAEvBzB,EAAAA,EAAAA,KAAA,MAAAD,UACGmD,EAAAA,EAAAA,IACCzB,EAAKxC,OAAOkE,UAAU1B,KACtBA,EAAK2B,eAHA3B,EAAKlC,OAHXoE,EAAIpE,YAgBrBS,EAAAA,EAAAA,KAAA,OAAKL,UAAU,SACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBI,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UACEL,UAAU,qBACVC,QAASA,IAAMV,EAAM2E,YACrBC,UAAW5E,EAAM6E,qBAAqBhE,SAErC,QAEHC,EAAAA,EAAAA,KAAA,UACEL,UAAU,qBACVC,QAASA,IAAMV,EAAM8E,eACrBF,UAAW5E,EAAM6E,qBAAqBhE,SAErC,OAEHC,EAAAA,EAAAA,KAAA,UACEL,UAAU,qBACVC,QAASA,IAAMV,EAAM+E,WACrBH,UAAW5E,EAAMgF,iBAAiBnE,SAEjC,OAEHC,EAAAA,EAAAA,KAAA,UACEL,UAAU,qBACVC,QAASA,IAAMV,EAAMiF,WACrBL,UAAW5E,EAAMgF,iBAAiBnE,SAEjC,QAEHL,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0BAAyBI,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,UACLL,EAAAA,EAAAA,MAAA,UAAAK,SAAA,CACGb,EAAMkF,WAAWjD,WAAWE,UAAY,EAAE,MAAI,IAC9CnC,EAAMmF,eAAeC,wBAG1B5E,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0BAAyBI,SAAA,CAAC,iBAExCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLsE,IAAI,IACJC,IAAKtF,EAAMmF,eACXI,aAAcvF,EAAMkF,WAAWjD,WAAWE,UAAY,EACtDlB,SAAUN,IACR,MAAM6E,EAAO7E,EAAES,OAAOJ,MAAQyE,OAAO9E,EAAES,OAAOJ,OAAS,EAAI,EAC3DhB,EAAM0F,aAAaF,EAAK,EAE1B/E,UAAU,gCAGdK,EAAAA,EAAAA,KAAA,UACEE,MAAOhB,EAAMkF,WAAWjD,WAAWG,SACnCnB,SAAUN,IACRX,EAAM2F,YAAYF,OAAO9E,EAAES,OAAOJ,OAAO,EACzCH,SAED,CAAC,GAAI,GAAI,GAAI,GAAI,IAAI4C,KAAIrB,IACxB5B,EAAAA,EAAAA,MAAA,UAAuBQ,MAAOoB,EAASvB,SAAA,CAAC,QAChCuB,IADKA,YAMf,G","sources":["components/organisms/AccidentsTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {\r\n  Column,\r\n  createColumnHelper,\r\n  PaginationState,\r\n  Table,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from '@tanstack/react-table';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport {Table as TableBootstrap}  from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst getColumnsByWidth = (width: number, t: any) => {\r\n  const columns1 = [{\r\n    dataField: '_id',\r\n    text: 'ID',\r\n    hidden: true,\r\n  }, {\r\n    dataField: 'accident_year',\r\n    text: t('Year'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'injury_severity_hebrew',\r\n    text: t('Severity'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'injured_type_hebrew',\r\n    text: t('TypeInjured'),\r\n    sort: true,\r\n  }];\r\n  const colCity = {\r\n    dataField: 'accident_yishuv_name',\r\n    text: t('City'),\r\n    sort: true,\r\n  };\r\n  const colStreet = {\r\n    dataField: 'street1_hebrew',\r\n    text: t('Street'),\r\n    sort: true,\r\n  };\r\n  const columns3 = [{\r\n    dataField: 'vehicle_vehicle_type_hebrew',\r\n    text: t('Vehicle'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'accident_type_hebrew',\r\n    text: t('AccidentType'),\r\n    sort: true,\r\n  }];\r\n  const columns4 = [{\r\n    dataField: 'age_group_hebrew',\r\n    text: t('Age'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'sex_hebrew',\r\n    text: t('Gender'),\r\n    sort: true,\r\n  }];\r\n\r\n  let columns = columns1;\r\n  if (width > 500) columns.splice(2, 0, colCity);\r\n  if (width > 700) columns.splice(3, 0, colStreet);\r\n  if (width > 900) columns = columns.concat(columns3);\r\n  columns = columns.concat(columns4);\r\n  return columns;\r\n};\r\n\r\ntype InjuredPerson = {\r\n  _id: string;\r\n  accident_year: string;\r\n  injury_severity_hebrew: string;\r\n  injured_type_hebrew: string;\r\n  accident_yishuv_name: string;\r\n  street1_hebrew: string;\r\n  vehicle_vehicle_type_hebrew: string;\r\n  accident_type_hebrew: string;\r\n  age_group_hebrew: string;\r\n  sex_hebrew: string;\r\n};\r\n\r\nconst columnHelper = createColumnHelper<InjuredPerson>();\r\n\r\n\r\n\r\ninterface IProps { }\r\n// const AccidentsTable: React.FC<IProps> = observer(() => {\r\n//   const { filterStore } = useStore();\r\n//   const { t } = useTranslation();\r\n//   const divStyle = {\r\n//     display: 'flex',\r\n//     justifyContent: 'flex-end',\r\n//     marginBottom: '1rem'\r\n//   };\r\n//   const reactMarkers = toJS(filterStore.dataAllInjuries);\r\n//   //const { ExportCSVButton } = CSVExport;\r\n//   const [columns, setColumns] = useState(getColumnsByWidth(window.innerWidth, t));\r\n//   React.useEffect(() => {\r\n//     function handleResize() {\r\n//       const cols = getColumnsByWidth(window.innerWidth, t);\r\n//       setColumns(cols);\r\n//     }\r\n//     window.addEventListener('resize', handleResize);\r\n//     return (() => { window.removeEventListener('resize', handleResize); });\r\n//   });\r\n\r\n//   // console.log(reactMarkers, filterStore.cityResult)\r\n//   if (reactMarkers.length > 0) {\r\n//     return (\r\n//       <div>\r\n//         <SmallCard2>\r\n//           <ToolkitProvider\r\n//             keyField=\"_id\"\r\n//             data={reactMarkers}\r\n//             columns={columns}\r\n//             exportCSV>\r\n//             {(props: any) => (\r\n//               <div>\r\n//                 <div style={divStyle}>\r\n//                   <ExportCSVButton\r\n//                     className=\"button-sm\" {...props.csvProps}>\r\n//                     {t('export-to-csv')}\r\n//                   </ExportCSVButton>\r\n//                 </div>\r\n//                 <BootstrapTable\r\n//                   pagination={paginationFactory()}\r\n//                   {...props.baseProps}\r\n//                   headerClasses=\"table-header\"\r\n//                 />\r\n//                 {/* <hr /> */}\r\n//               </div>)}\r\n//           </ToolkitProvider>\r\n//         </SmallCard2>\r\n//       </div>\r\n//     );\r\n//   }\r\n//   return null\r\n// });\r\nconst AccidentsTable: React.FC<IProps> = observer(() => {\r\n  const { filterStore } = useStore();\r\n  const { t } = useTranslation();\r\n  const reactMarkers = toJS(filterStore.dataAllInjuries);\r\n  //@ts-ignore\r\n  const defaultDAta2 = reactMarkers as InjuredPerson[];\r\n  const [data, _setData] = React.useState(() => [...defaultDAta2]);\r\n  const [pagination, setPagination] = React.useState<PaginationState>({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n  });\r\n\r\n  const columns = [\r\n\r\n    columnHelper.accessor('accident_year', {\r\n      cell: info => <i>{info.getValue()}</i>,\r\n      header: t('Year'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('injury_severity_hebrew', {\r\n      header: t('Severity'),\r\n      cell: info => info.renderValue(),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('injured_type_hebrew', {\r\n      header: t('TypeInjured'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('accident_yishuv_name', {\r\n      header: t('City'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('street1_hebrew', {\r\n      header: t('Street'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('vehicle_vehicle_type_hebrew', {\r\n      header: t('VehicleType'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('accident_type_hebrew', {\r\n      header: t('AccidentType'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('age_group_hebrew', {\r\n      header: t('Age'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('sex_hebrew', {\r\n      header: t('Gender'),\r\n      footer: info => info.column.id,\r\n    }),\r\n  ];\r\n  const table = useReactTable({\r\n    columns,\r\n    data,\r\n    debugTable: true,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    onPaginationChange: setPagination,\r\n    //no need to pass pageCount or rowCount with client-side pagination as it is calculated automatically\r\n    state: {\r\n      pagination,\r\n    },\r\n    // autoResetPageIndex: false, // turn off page index reset when sorting or filtering\r\n  })\r\n\r\n  return (\r\n    <div className=\"p-2\">\r\n    <div className=\"h-2\" />\r\n    <TableBootstrap striped bordered hover>\r\n      <thead>\r\n        {table.getHeaderGroups().map(headerGroup => (\r\n          <tr key={headerGroup.id}>\r\n            {headerGroup.headers.map(header => {\r\n              return (\r\n                <th key={header.id} colSpan={header.colSpan}>\r\n                  <div\r\n                    {...{\r\n                      className: header.column.getCanSort()\r\n                        ? 'cursor-pointer select-none'\r\n                        : '',\r\n                      onClick: header.column.getToggleSortingHandler(),\r\n                    }}\r\n                  >\r\n                    {flexRender(\r\n                       header.column.columnDef.header,\r\n                      header.getContext()\r\n                    )}\r\n                    {{\r\n                      asc: ' 🔼',\r\n                      desc: ' 🔽',\r\n                    }[header.column.getIsSorted() as string] ?? null}\r\n                    {header.column.getCanFilter() ? (\r\n                      <div>\r\n                        <Filter column={header.column} table={table} />\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </th>\r\n              )\r\n            })}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody>\r\n        {table.getRowModel().rows.map(row => {\r\n          return (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map(cell => {\r\n                return (\r\n                  <td key={cell.id}>\r\n                    {flexRender(\r\n                      cell.column.columnDef.cell,\r\n                      cell.getContext()\r\n                    )}\r\n                  </td>\r\n                )\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </TableBootstrap>\r\n    <div className=\"h-2\" />\r\n    <div className=\"flex items-center gap-2\">\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.firstPage()}\r\n        disabled={!table.getCanPreviousPage()}\r\n      >\r\n        {'<<'}\r\n      </button>\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.previousPage()}\r\n        disabled={!table.getCanPreviousPage()}\r\n      >\r\n        {'<'}\r\n      </button>\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.nextPage()}\r\n        disabled={!table.getCanNextPage()}\r\n      >\r\n        {'>'}\r\n      </button>\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.lastPage()}\r\n        disabled={!table.getCanNextPage()}\r\n      >\r\n        {'>>'}\r\n      </button>\r\n      <span className=\"flex items-center gap-1\">\r\n        <div>Page</div>\r\n        <strong>\r\n          {table.getState().pagination.pageIndex + 1} of{' '}\r\n          {table.getPageCount().toLocaleString()}\r\n        </strong>\r\n      </span>\r\n      <span className=\"flex items-center gap-1\">\r\n        | Go to page:\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max={table.getPageCount()}\r\n          defaultValue={table.getState().pagination.pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n            table.setPageIndex(page)\r\n          }}\r\n          className=\"border p-1 rounded w-16\"\r\n        />\r\n      </span>\r\n      <select\r\n        value={table.getState().pagination.pageSize}\r\n        onChange={e => {\r\n          table.setPageSize(Number(e.target.value))\r\n        }}\r\n      >\r\n        {[10, 20, 30, 40, 50].map(pageSize => (\r\n          <option key={pageSize} value={pageSize}>\r\n            Show {pageSize}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  </div>\r\n  )\r\n});\r\n\r\nfunction Filter({\r\n  column,\r\n  table,\r\n}: {\r\n  column: Column<any, any>\r\n  table: Table<any>\r\n}) {\r\n  const firstValue = table\r\n    .getPreFilteredRowModel()\r\n    .flatRows[0]?.getValue(column.id)\r\n\r\n  const columnFilterValue = column.getFilterValue()\r\n\r\n  return typeof firstValue === 'number' ? (\r\n    <div className=\"flex space-x-2\" onClick={e => e.stopPropagation()}>\r\n      <input\r\n        type=\"number\"\r\n        value={(columnFilterValue as [number, number])?.[0] ?? ''}\r\n        onChange={e =>\r\n          column.setFilterValue((old: [number, number]) => [\r\n            e.target.value,\r\n            old?.[1],\r\n          ])\r\n        }\r\n        placeholder={`Min`}\r\n        className=\"w-24 border shadow rounded\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={(columnFilterValue as [number, number])?.[1] ?? ''}\r\n        onChange={e =>\r\n          column.setFilterValue((old: [number, number]) => [\r\n            old?.[0],\r\n            e.target.value,\r\n          ])\r\n        }\r\n        placeholder={`Max`}\r\n        className=\"w-24 border shadow rounded\"\r\n      />\r\n    </div>\r\n  ) : (\r\n    <input\r\n      className=\"w-36 border shadow rounded\"\r\n      onChange={e => column.setFilterValue(e.target.value)}\r\n      onClick={e => e.stopPropagation()}\r\n      placeholder={`Search...`}\r\n      type=\"text\"\r\n      value={(columnFilterValue ?? '') as string}\r\n    />\r\n  )\r\n};\r\n\r\nexport default AccidentsTable;"],"names":["columnHelper","createColumnHelper","Filter","_ref","_table$getPreFiltered","_","_2","column","table","firstValue","getPreFilteredRowModel","flatRows","getValue","id","columnFilterValue","getFilterValue","_jsxs","className","onClick","e","stopPropagation","children","_jsx","type","value","onChange","setFilterValue","old","target","placeholder","observer","filterStore","useStore","t","useTranslation","defaultDAta2","toJS","dataAllInjuries","data","_setData","React","pagination","setPagination","pageIndex","pageSize","columns","accessor","cell","info","header","footer","renderValue","useReactTable","debugTable","getCoreRowModel","getSortedRowModel","getFilteredRowModel","getPaginationRowModel","onPaginationChange","state","TableBootstrap","striped","bordered","hover","getHeaderGroups","map","headerGroup","headers","_asc$desc","colSpan","getCanSort","getToggleSortingHandler","flexRender","columnDef","getContext","asc","desc","getIsSorted","getCanFilter","getRowModel","rows","row","getVisibleCells","firstPage","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","lastPage","getState","getPageCount","toLocaleString","min","max","defaultValue","page","Number","setPageIndex","setPageSize"],"sourceRoot":""}