{"version":3,"sources":["components/organisms/AccidentsTable.tsx"],"names":["getColumnsByWidth","width","t","columns1","dataField","text","hidden","sort","colCity","colStreet","columns3","columns4","columns","splice","concat","AccidentsTable","observer","filterStore","useStore","useTranslation","divStyle","display","justifyContent","marginBottom","reactMarkers","toJS","dataAllInjuries","ExportCSVButton","CSVExport","useState","window","innerWidth","setColumns","React","useEffect","handleResize","cols","addEventListener","removeEventListener","length","keyField","data","exportCSV","props","style","className","csvProps","pagination","paginationFactory","baseProps","headerClasses"],"mappings":"qQAeMA,EAAoB,SAACC,EAAeC,GACxC,IAAMC,EAAW,CAAC,CAChBC,UAAW,MACXC,KAAM,KACNC,QAAQ,GACP,CACDF,UAAW,gBACXC,KAAMH,EAAE,QACRK,MAAM,GACL,CACDH,UAAW,yBACXC,KAAMH,EAAE,YACRK,MAAM,GACL,CACDH,UAAW,sBACXC,KAAMH,EAAE,eACRK,MAAM,IAEFC,EAAU,CACdJ,UAAW,uBACXC,KAAMH,EAAE,QACRK,MAAM,GAEFE,EAAY,CAChBL,UAAW,iBACXC,KAAMH,EAAE,UACRK,MAAM,GAEFG,EAAW,CAAC,CAChBN,UAAW,8BACXC,KAAMH,EAAE,WACRK,MAAM,GACL,CACDH,UAAW,uBACXC,KAAMH,EAAE,gBACRK,MAAM,IAEFI,EAAW,CAAC,CAChBP,UAAW,mBACXC,KAAMH,EAAE,OACRK,MAAM,GACL,CACDH,UAAW,aACXC,KAAMH,EAAE,UACRK,MAAM,IAGJK,EAAUT,EAKd,OAJIF,EAAQ,KAAKW,EAAQC,OAAO,EAAG,EAAGL,GAClCP,EAAQ,KAAKW,EAAQC,OAAO,EAAG,EAAGJ,GAClCR,EAAQ,MAAKW,EAAUA,EAAQE,OAAOJ,IAC1CE,EAAUA,EAAQE,OAAOH,IAKrBI,EAAmCC,aAAS,WAAO,IAC/CC,EAAgBC,cAAhBD,YACAf,EAAMiB,cAANjB,EACFkB,EAAW,CACfC,QAAS,OACTC,eAAgB,WAChBC,aAAc,QAEVC,EAAeC,YAAKR,EAAYS,iBAC9BC,EAAoBC,YAApBD,gBAT8C,EAUxBE,mBAAS7B,EAAkB8B,OAAOC,WAAY7B,IAVtB,mBAU/CU,EAV+C,KAUtCoB,EAVsC,KAqBtD,OAVAC,IAAMC,WAAU,WACd,SAASC,IACP,IAAMC,EAAOpC,EAAkB8B,OAAOC,WAAY7B,GAClD8B,EAAWI,GAGb,OADAN,OAAOO,iBAAiB,SAAUF,GAC1B,WAAQL,OAAOQ,oBAAoB,SAAUH,OAInDX,EAAae,OAAS,EAEtB,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAS,MACTC,KAAMjB,EACNZ,QAASA,EACT8B,WAAS,EAJX,SAKG,SAACC,GAAD,OACC,gCACE,qBAAKC,MAAOxB,EAAZ,SACE,cAACO,EAAD,yBACEkB,UAAU,aAAgBF,EAAMG,UADlC,aAEG5C,EAAE,sBAGP,cAAC,IAAD,yBACE6C,WAAYC,OACRL,EAAMM,WAFZ,IAGEC,cAAc,4BASvB,QAGMnC","file":"static/js/13.aad31c34.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n// @ts-ignore\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n// @ts-ignore\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n// @ts-ignore\r\nimport ToolkitProvider, { CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport SmallCard2 from '../atoms/SmallCard2';\r\n\r\nconst getColumnsByWidth = (width: number, t: any) => {\r\n  const columns1 = [{\r\n    dataField: '_id',\r\n    text: 'ID',\r\n    hidden: true,\r\n  }, {\r\n    dataField: 'accident_year',\r\n    text: t('Year'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'injury_severity_hebrew',\r\n    text: t('Severity'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'injured_type_hebrew',\r\n    text: t('TypeInjured'),\r\n    sort: true,\r\n  }];\r\n  const colCity = {\r\n    dataField: 'accident_yishuv_name',\r\n    text: t('City'),\r\n    sort: true,\r\n  };\r\n  const colStreet = {\r\n    dataField: 'street1_hebrew',\r\n    text: t('Street'),\r\n    sort: true,\r\n  };\r\n  const columns3 = [{\r\n    dataField: 'vehicle_vehicle_type_hebrew',\r\n    text: t('Vehicle'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'accident_type_hebrew',\r\n    text: t('AccidentType'),\r\n    sort: true,\r\n  }];\r\n  const columns4 = [{\r\n    dataField: 'age_group_hebrew',\r\n    text: t('Age'),\r\n    sort: true,\r\n  }, {\r\n    dataField: 'sex_hebrew',\r\n    text: t('Gender'),\r\n    sort: true,\r\n  }];\r\n\r\n  let columns = columns1;\r\n  if (width > 500) columns.splice(2, 0, colCity);\r\n  if (width > 700) columns.splice(3, 0, colStreet);\r\n  if (width > 900) columns = columns.concat(columns3);\r\n  columns = columns.concat(columns4);\r\n  return columns;\r\n};\r\n\r\ninterface IProps { }\r\nconst AccidentsTable: React.FC<IProps> = observer(() => {\r\n  const { filterStore } = useStore();\r\n  const { t } = useTranslation();\r\n  const divStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginBottom: '1rem'\r\n  };\r\n  const reactMarkers = toJS(filterStore.dataAllInjuries);\r\n  const { ExportCSVButton } = CSVExport;\r\n  const [columns, setColumns] = useState(getColumnsByWidth(window.innerWidth, t));\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      const cols = getColumnsByWidth(window.innerWidth, t);\r\n      setColumns(cols);\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return (() => { window.removeEventListener('resize', handleResize); });\r\n  });\r\n\r\n  // console.log(reactMarkers, filterStore.cityResult)\r\n  if (reactMarkers.length > 0) {\r\n    return (\r\n      <div>\r\n        <SmallCard2>\r\n          <ToolkitProvider\r\n            keyField=\"_id\"\r\n            data={reactMarkers}\r\n            columns={columns}\r\n            exportCSV>\r\n            {(props: any) => (\r\n              <div>\r\n                <div style={divStyle}>\r\n                  <ExportCSVButton\r\n                    className=\"button-sm\" {...props.csvProps}>\r\n                    {t('export-to-csv')}\r\n                  </ExportCSVButton>\r\n                </div>\r\n                <BootstrapTable\r\n                  pagination={paginationFactory()}\r\n                  {...props.baseProps}\r\n                  headerClasses=\"table-header\"\r\n                />\r\n                {/* <hr /> */}\r\n              </div>)}\r\n          </ToolkitProvider>\r\n        </SmallCard2>\r\n      </div>\r\n    );\r\n  }\r\n  return null\r\n});\r\n\r\nexport default AccidentsTable;"],"sourceRoot":""}