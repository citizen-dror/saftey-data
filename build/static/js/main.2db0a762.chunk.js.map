{"version":3,"sources":["stores/ToDoStore.ts","stores/storeConfig.ts","components/TodoList.tsx","components/MapRCneterClick.tsx","components/MapRDiv.jsx","components/EditablePopup.jsx","services/Hazard.Service.js","components/MapRAddMarkers.jsx","services/Accident.Service.js","components/MapAccidents.jsx","components/HeatMap.tsx","components/Headr.tsx","components/Footer.tsx","stores/MapStore.js","App.js","serviceWorker.js","index.js"],"names":["Todo","value","this","id","Date","now","complete","observable","ToDoStore","appInitialized","todos","push","filterP","RegExp","filter","doto","test","computed","action","list","todo","store","StoreContext","React","createContext","TodoList","observer","useContext","Error","useStore","filterdTodos","clearComleted","todoL","map","key","type","checked","onClick","e","tuggleComplete","onKeyPress","createNew","onChange","dofilter","target","which","astring","createTodo","MapRCneterClick","state","hasLocation","latlng","lat","lng","mapRef","createRef","handleClick","current","console","log","leafletElement","locate","handleLocationFound","setState","marker","Marker","position","Popup","Map","center","style","height","width","length","onLocationfound","ref","zoom","TileLayer","attribution","url","Component","L","Icon","Default","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapRDiv","props","prefix","EditablePopup","parsedChildren","children","$$typeof","ReactDOMServer","renderToStaticMarkup","editScreenOpen","inputValue","content","nametag","openEditScreen","closeEditScreen","handleEdits","saveEdits","isNaN","sourceKey","saveContentCallback","cancelEdits","removeSource","removalCallback","thePopup","_source","remove","contentScreenRender","Fragment","PopUpButtons","Buttons","removable","editable","className","forEach","include","toLowerCase","open","setTimeout","openPopup","editScreen","html","minWidth","HazardService","collback","$","ajax","done","response","settings","redIcon","iconSize","iconAnchor","popupAnchor","shadowSize","MapRAddMarkers","addMarker","markers","getHazards","getHazard","addHazardsToMap","arrHazards","hazard","latLng","lon","listMarkers","idx","rMarkers","icon","maxWidth","AccidentService","MapAccidents","getPoints","getAll","addPointsToMap","arrPoints","x","_id","accident_year","latitude","longitude","rendMarkers","bind","HeatMap","layerHidden","fitBoundsOnUpdate","addressPoints","addPoint","newPoint","originalEvent","timeStamp","toString","prevState","newArr","fitBoundsOnLoad","points","longitudeExtractor","m","latitudeExtractor","intensityExtractor","parseFloat","Header","title","Footer","display","flexFlow","to","MapStore","decorate","mapStore","Home","AddMarkers","Center","About","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2db0a762.chunk.js","sourcesContent":["import { observable, computed, action } from \"mobx\"\r\n//import autorun  from \"mobx\"\r\n\r\ninterface ITodo {\r\n  value: string;\r\n  id :number;\r\n  complete: boolean;\r\n}\r\n\r\nclass Todo implements ITodo {\r\n  @observable\r\n  value: string;\r\n  @observable\r\n  id :number;\r\n  @observable\r\n  complete: boolean;\r\n  constructor(value:string){\r\n    this.value = value;\r\n    this.id = Date.now();\r\n    this.complete = false;\r\n  }\r\n}\r\n\r\nexport default class ToDoStore {\r\n    appInitialized = false\r\n    constructor () {\r\n        // init app data\r\n        this.appInitialized =false;\r\n    }\r\n    @observable\r\n    todos:Array<ITodo> = [];\r\n    @observable\r\n    filter:string = \"\"\r\n    @computed\r\n    get filterdTodos(){\r\n      let filterP = new RegExp(this.filter,\"i\");\r\n      return this.todos.filter((doto:ITodo) => filterP.test(doto.value));\r\n    }\r\n    @action\r\n    createTodo(value:string){\r\n      this.todos.push(new Todo(value));\r\n    }\r\n    @action\r\n    clearComleted = () => {\r\n      let list:Array<ITodo> = this.todos.filter(todo => !todo.complete)\r\n      this.todos = list;\r\n    }\r\n}\r\n\r\n\r\n// autorun(() =>{\r\n//     console.log(store.todos[0])\r\n//     console.log(store.filter)\r\n// })\r\n\r\n//export default store","// https://mobx-react.js.org/recipes-context\r\n\r\nimport React from 'react'\r\nimport ToDoStore from './ToDoStore';\r\n\r\nexport const store = new ToDoStore();\r\nexport const StoreContext = React.createContext(store);\r\n\r\nexport const useStore = (): ToDoStore => {\r\n  const store = React.useContext(StoreContext);\r\n  if (!store) {\r\n    // this is especially useful in TypeScript so you don't need to be checking for null all the time\r\n    throw new Error('You have forgot to use StoreProvider, shame on you.')\r\n  }\r\n  return store\r\n};\r\n\r\n/* // see: https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables\r\nif(process.env.NODE_ENV !== 'production') {\r\n  // @ts-ignore\r\n  window['store'] = store;\r\n} */\r\n","import React, {KeyboardEvent} from \"react\"\r\nimport { observer } from \"mobx-react\"\r\nimport { useStore } from '../stores/storeConfig'\r\nimport ToDoStore from '../stores/ToDoStore'\r\n\r\ninterface IProps {\r\n}\r\nconst TodoList: React.FunctionComponent<IProps> = observer(() => {\r\n    const store: ToDoStore = useStore();\r\n    const {filterdTodos, filter,clearComleted} = store;\r\n    const todoL = filterdTodos.map((todo:any) => {\r\n        //const boundTuggleComplete = tuggleComplete.bind(todo);\r\n        return (<li key={todo.id}>\r\n        <input type=\"checkbox\" value={todo.complete} checked={todo.complete} onClick={(e) =>{tuggleComplete(todo)}}/>\r\n    {todo.value}</li>);})\r\n        return (\r\n            <div>\r\n            <h1>ToDo List</h1>\r\n          add: <input onKeyPress ={(e) => {createNew(e, store)}}></input>\r\n          filter: <input value={filter} onChange ={(e)=>{dofilter(e,store)}} ></input> \r\n            <ul>{todoL}</ul>\r\n            <button type=\"button\" onClick={clearComleted} >Clear Completed</button>\r\n            </div>\r\n        );\r\n} )\r\n\r\nconst dofilter: (e:React.ChangeEvent<HTMLInputElement>,store:ToDoStore) => void = (e:React.ChangeEvent<HTMLInputElement>,store:ToDoStore) => {\r\n    store.filter = e.target.value;\r\n}\r\nconst createNew:(e:React.KeyboardEvent<HTMLInputElement>,store:ToDoStore) => void =(e:React.KeyboardEvent<HTMLInputElement>,store:ToDoStore) =>{\r\n    if (e.which === 13){\r\n        var astring: any = (e.target as HTMLInputElement).value;\r\n        store.createTodo(astring);\r\n        (e.target as HTMLInputElement).value = \"\"\r\n    }\r\n    \r\n}\r\nconst tuggleComplete:(todo:any) => void = (todo:any) => {\r\n    todo.complete = !todo.complete;\r\n }\r\n\r\nexport default TodoList\r\n","import React, { createRef, Component } from 'react'\r\nimport {LeafletMouseEvent } from 'leaflet'\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\ntype State = {\r\n  hasLocation: boolean,\r\n  latlng: {\r\n    lat: number,\r\n    lng: number,\r\n  },\r\n}\r\n\r\nexport default class MapRCneterClick extends Component<{}, State> {\r\n  state = {\r\n    hasLocation: false,\r\n    latlng: {\r\n      lat: 51.505,\r\n      lng: -0.09,\r\n    },\r\n  }\r\n  mapRef:any  = createRef();\r\n\r\n  handleClick = () => {\r\n    const map:any = this.mapRef.current\r\n    console.log(map)\r\n    if (map != null) {\r\n      map.leafletElement.locate()\r\n    }\r\n  }\r\n\r\n  handleLocationFound = (e: LeafletMouseEvent) => {\r\n    this.setState({\r\n      hasLocation: true,\r\n      latlng: e.latlng,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const marker = this.state.hasLocation ? (\r\n      <Marker position={this.state.latlng}>\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    ) : null\r\n    const WRAPPER_STYLES = { height: '400px', width: '100vw' };\r\n    return (\r\n      <Map\r\n        center={this.state.latlng}\r\n        style={WRAPPER_STYLES}\r\n        length={4}\r\n        onClick={this.handleClick}\r\n        onLocationfound={this.handleLocationFound}\r\n        ref={this.mapRef}\r\n        zoom={13}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {marker}\r\n      </Map>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport {observer} from 'mobx-react'\r\nimport L from 'leaflet'\r\nimport {Map,TileLayer ,Marker} from 'react-leaflet'\r\nimport 'leaflet-css'\r\n\r\n// TODO: Move to init.service once it's merged.\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst MapRDiv = observer(class MapRDiv extends React.Component {\r\n    render() {\r\n        const {center} = this.props.store;\r\n        const INITIAL_ZOOM = 13;\r\n        const WRAPPER_STYLES = { height: '400px', width: '100vw' };\r\n        return (\r\n            <Map center={center} zoom={INITIAL_ZOOM} style={WRAPPER_STYLES}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            />\r\n             <Marker position={center} />\r\n        </Map>\r\n        );\r\n    }\r\n})\r\nexport default MapRDiv;","import React from 'react'\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport L from 'leaflet'\r\nimport { Popup } from 'react-leaflet'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { Markup } from 'interweave';\r\nimport '../assets/EditablePopup.css'\r\n\r\nconst prefix = 'leaflet-popup-button'\r\n\r\nclass EditablePopup extends React.Component{\r\n   constructor(props){\r\n      super(props)\r\n\r\n      const sourceTypes = ['Layer','Circle','CircleMarker','Marker','Polyline','Polygon','ImageOverlay','VideoOverlay','SVGOverlay','Rectangle','LayerGroup','FeatureGroup','GeoJSON']\r\n\r\n      sourceTypes.forEach( type => {\r\n         L[type].include({\r\n            nametag: type.toLowerCase()\r\n         })\r\n      })\r\n\r\n   }\r\n\r\n   componentDidMount(){\r\n\r\n      console.log(this.thePopup.leafletElement._source.nametag)\r\n\r\n      if (this.props.open){\r\n         setTimeout( () => {\r\n            this.thePopup.leafletElement._source.openPopup()\r\n         },0.001)\r\n      }\r\n\r\n      this.setState({\r\n         nametag: this.props.nametag || this.thePopup.leafletElement._source.nametag\r\n      })\r\n\r\n   }\r\n\r\n   parsedChildren = this.props.children.$$typeof ? ReactDOMServer.renderToStaticMarkup(this.props.children) : this.props.children\r\n   //parsedChildren = this.props.children.$$typeof ? React.render(this.props.children) : this.props.children\r\n\r\n   state = {\r\n      editScreenOpen: false,\r\n      inputValue: this.parsedChildren,\r\n      content: this.parsedChildren,\r\n      nametag: this.props.nametag\r\n   }\r\n\r\n   openEditScreen = () => {\r\n      // console.log(this.thePopup.leafletElement._source.nametag)\r\n      this.setState({editScreenOpen: true})\r\n   }\r\n\r\n   closeEditScreen = () => {\r\n      this.setState({editScreenOpen: false})\r\n   }\r\n\r\n   handleEdits = (e) => {\r\n      this.setState({inputValue: e.target.value})\r\n   }\r\n\r\n   saveEdits = () => {\r\n      if (!isNaN(this.props.sourceKey) && this.props.saveContentCallback){\r\n         this.props.saveContentCallback(this.state.inputValue, this.props.sourceKey)\r\n      }\r\n      this.setState({\r\n         content: this.state.inputValue,\r\n      })\r\n      this.closeEditScreen()\r\n   }\r\n\r\n   cancelEdits = () => {\r\n      this.setState({\r\n         inputValue: this.state.content\r\n      })\r\n      this.closeEditScreen()\r\n   }\r\n\r\n   removeSource = () => {\r\n      if(!this.props.sourceKey){\r\n         this.thePopup.leafletElement._source.remove()\r\n      } else if( (this.props.sourceKey || this.props.sourceKey ===0 ) && this.props.removalCallback){\r\n         this.props.removalCallback(this.props.sourceKey)\r\n      }\r\n   }\r\n\r\n   contentScreenRender = (content) => {\r\n    return  (<React.Fragment>\r\n        <Markup content={content} />\r\n        {this.PopUpButtons()}\r\n    </React.Fragment >)\r\n  }\r\n\r\n  PopUpButtons =() =>{\r\n    let Buttons;\r\n    // const { nametag } = this.thePopup.leafletElement._source\r\n\r\n    if (this.props.removable && !this.props.editable){\r\n       Buttons = (\r\n          <div className=\"leaflet-popup-useraction-buttons\">\r\n             <button className={`${prefix} remove`} onClick={this.removeSource} >Remove this {this.state.nametag}</button>\r\n          </div>\r\n       )\r\n    } else if (!this.props.removable && this.props.editable){\r\n       Buttons = (\r\n          <div className=\"leaflet-popup-useraction-buttons\">\r\n             <button className={`${prefix} edit`} onClick={ this.openEditScreen }>Edit</button>\r\n          </div>\r\n       )\r\n    } else if (this.props.removable && this.props.editable){\r\n       Buttons = (\r\n          <div className=\"leaflet-popup-useraction-buttons\">\r\n             <button className={`${prefix} remove`} onClick={this.removeSource} >Remove this {this.state.nametag}</button>\r\n             <button onClick={ this.openEditScreen } className={`${prefix} edit`}>Edit</button>\r\n          </div>\r\n       )\r\n    }\r\n    return Buttons;\r\n  }\r\n\r\n\r\n   render(){\r\n      //const boundContentScreen = this.contentScreenRender.bind(this.state.content);\r\n      const editScreen = (\r\n         <React.Fragment>\r\n            <ContentEditable className=\"leaflet-popup-input\" html={this.state.inputValue} ref=\"editableDiv\" onChange={ this.handleEdits } />\r\n            <div className=\"leaflet-popup-useraction-buttons\">\r\n               <button className={`${prefix} cancel`} onClick={this.cancelEdits} >Cancel</button>\r\n               <button className={`${prefix} save`} onClick={this.saveEdits} >Save</button>\r\n            </div>\r\n         </React.Fragment>\r\n      )\r\n\r\n      return(\r\n         <Popup {...this.props} ref={thePopup => this.thePopup = thePopup} minWidth=\"160\">\r\n            {this.state.editScreenOpen ? editScreen : this.contentScreenRender(this.state.content)}\r\n         </Popup>\r\n      )\r\n   }\r\n}\r\n\r\n \r\nexport default EditablePopup\r\n","import $ from \"jquery\";\r\n\r\n///////\r\nexport default class HazardService {\r\n  //get request using jsonp\r\n  getHazard(collback){\r\n    //\"http://localhost:5000/api/hazards\"\r\n    var settings = {\r\n      \"url\": \"/api/v1/hazards\",\r\n      \"method\": \"GET\",\r\n      \"headers\": {}\r\n    }\r\n    $.ajax(settings).done(function (response) {\r\n      console.log(response)\r\n      collback(response);\r\n    });\r\n  }\r\n  postHazard(latlng) {\r\n    var data = `{\"name\" : \"car on path\", \"status\" : \"new\",\"type\": \"maintnance\",\"lat\": ${latlng.lat},\"lon\" :${latlng.lng}}`\r\n    //var data = `{\"name\" : \"road hole local2\", \"status\" : \"new\",\"type\": \"maintnance\",\"lat\": 32.03487471446495,\"lon\" :34.74564938354493}`\r\n    var settings = {\r\n      \"url\": \"/api/v1/hazards\",\r\n      \"method\": \"POST\",\r\n      \"headers\": {\r\n        \"content-type\": \"application/json\"\r\n      },\r\n      \"processData\": false,\r\n      \"data\": data\r\n    }\r\n    $.ajax(settings).done(function (response) {\r\n      console.log(response);\r\n    });\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport L from 'leaflet'\r\nimport { Map, TileLayer, Marker} from 'react-leaflet'\r\nimport Popup from './EditablePopup'\r\nimport HazardService from '../services/Hazard.Service';\r\n\r\nconst redIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nexport default class MapRAddMarkers extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      markers: []\r\n    };\r\n  }\r\n\r\n  addMarker = (e) => {\r\n    const { markers } = this.state\r\n    markers.push(e.latlng)\r\n    this.setState({ markers })\r\n    //add point to server\r\n    //var service = new  HazardService ();\r\n    //service.postHazard(e.latlng);\r\n  }\r\n  getHazards =(e) =>{\r\n    var service = new  HazardService ();\r\n    service.getHazard(this.addHazardsToMap);\r\n  }\r\n  addHazardsToMap=(arrHazards) =>{\r\n    console.log(\"addHazardsToMap\")\r\n    const { markers } = this.state\r\n    arrHazards.map ((hazard) => {\r\n      return markers.push( new L.latLng (hazard.lat,hazard.lon))\r\n    })\r\n    this.setState({ markers })\r\n  }\r\n\r\n  render() {\r\n    const WRAPPER_STYLES = { height: '400px', width: '100vw' };\r\n    let listMarkers = this.state.markers.map((position, idx) => <li key={`${idx}`} >{idx}:  ({position.lat},{position.lng})</li>);\r\n    let rMarkers = this.state.markers.map((position, idx) =>\r\n      <Marker key={`marker-${idx}`} position={position} icon={redIcon}>\r\n        <Popup maxWidth=\"300\" editable>\r\n          Edit Me!\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n    console.log(this.state.markers);\r\n    return (\r\n      <div>\r\n        <Map\r\n          center={[32.09, 34.7818]}\r\n          onClick={this.addMarker}\r\n          zoom={13}\r\n          style={WRAPPER_STYLES}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {rMarkers}\r\n        </Map>\r\n        <button className=\"button\" type=\"button\" onClick={this.getHazards} >Get Hazards</button>\r\n        <div className=\"listDiv\">\r\n        <ul>{listMarkers}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import $ from \"jquery\";\r\n\r\n///////\r\nexport default class AccidentService {\r\n  //get request using jsonp\r\n  getAll(collback){\r\n    //\"http://localhost:5000/api/v1/accident-ped\"\r\n    var settings = {\r\n      \"url\": \"/api/v1/accident\",\r\n      \"method\": \"GET\",\r\n      \"headers\": {}\r\n    }\r\n    $.ajax(settings).done(function (response) {\r\n      //console.log(response)\r\n      collback(response);\r\n    });\r\n  }\r\n  \r\n}\r\n\r\n","import React from 'react'\r\nimport L from 'leaflet'\r\nimport { Map, TileLayer, Marker,Popup} from 'react-leaflet'\r\nimport AccidentService from '../services/Accident.Service'\r\n\r\nconst redIcon = new L.Icon({\r\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nexport default class MapAccidents extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      markers: []\r\n    };\r\n  }\r\n\r\n  getPoints =(e) =>{\r\n    var service = new  AccidentService ();\r\n    service.getAll(this.addPointsToMap);\r\n  }\r\n  addPointsToMap=(arrPoints) =>{\r\n    this.setState(() => {\r\n      return {markers: arrPoints};\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const WRAPPER_STYLES = { height: '400px', width: '100vw' };\r\n    let listMarkers = this.state.markers.map((x) => <li key={`${x._id}`} >{x.accident_year}:  ({x.latitude}, {x.longitude}, )</li>);\r\n    let rendMarkers = this.state.markers.map((x) => {\r\n      if (x.latitude !== null && x.longitude !== null){\r\n        return(\r\n          <Marker key={`marker-${x._id}`} position={[x.latitude,x.longitude]} icon={redIcon}>\r\n            <Popup maxWidth=\"300\">\r\n             {x.accident_year}\r\n            </Popup>\r\n          </Marker>)\r\n        }\r\n      else return null\r\n    });\r\n    return (\r\n      <div>\r\n        <Map\r\n          center={[32.09, 34.7818]}\r\n          zoom={13}\r\n          style={WRAPPER_STYLES}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {rendMarkers}\r\n        </Map>\r\n        <button className=\"button\" type=\"button\" onClick={this.getPoints.bind()} >Get Accidents</button>\r\n        <div className=\"listDiv\">\r\n        <ul>{listMarkers}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Map, TileLayer } from 'react-leaflet';\r\nimport {LeafletMouseEvent} from 'leaflet'\r\n// @ts-ignore\r\nimport HeatmapLayer from 'react-leaflet-heatmap-layer';\r\nimport AccidentService from '../services/Accident.Service'\r\n \r\n\r\n\r\n\r\ninterface IPoint{\r\n  lat: number,\r\n  lon: number,\r\n  _id: string\r\n}\r\ninterface IState {\r\n  layerHidden?: boolean;\r\n  fitBoundsOnUpdate?: boolean;\r\n  addressPoints?: Array<IPoint>;\r\n}\r\n\r\nconst INITIAL_ZOOM = 10;\r\n\r\nexport default class HeatMap extends React.Component<{},IState> {\r\n    public state = {\r\n      layerHidden: false,\r\n      fitBoundsOnUpdate : true,\r\n      addressPoints: []\r\n    };\r\n  \r\n  componentWillMount() {\r\n/*     const { addressPoints } = this.state\r\n    geojsonPoints.data.map ((x:any)=>{return addressPoints.push( [x.latitude,x.longitude,x.accident_timestamp]) })\r\n    // {{latitude: number, longitude: number,accident_timestamp: string}}\r\n    this.setState({ addressPoints }) */\r\n  }\r\n  getPoints =(e:object) =>{\r\n    var service = new  AccidentService ();\r\n    service.getAll(this.addPointsToMap);\r\n  }\r\n  addPoint = (e:LeafletMouseEvent) => {\r\n    let newPoint:any = [e.latlng.lat,e.latlng.lng,e.originalEvent.timeStamp.toString()]\r\n    if (this.state.addressPoints.length >0)\r\n    {\r\n      this.setState(prevState => ({\r\n        addressPoints: [...prevState.addressPoints, newPoint]\r\n      }))\r\n    }\r\n    // else{\r\n    //   this.setState(state => ({\r\n    //     addressPoints: [newPoint]\r\n    //   }))\r\n    // }\r\n  }\r\n  addPointsToMap=(arrPoints: any[]) =>{\r\n    let newArr:any[] = arrPoints.map (x => [x.latitude, x.longitude, x._id])\r\n    this.setState({ addressPoints: [...newArr]});\r\n  }\r\n  render() {\r\n    const WRAPPER_STYLES = { height: '400px', width: '100vw' }\r\n\r\n    return (\r\n      <div>\r\n        <Map center={[32.09, 34.7818]} zoom={INITIAL_ZOOM} style={WRAPPER_STYLES}\r\n         onClick={this.addPoint}\r\n        >\r\n        {!this.state.layerHidden &&\r\n          <HeatmapLayer\r\n            fitBoundsOnLoad\r\n            fitBoundsOnUpdate\r\n            points={this.state.addressPoints}\r\n            longitudeExtractor={(m:any) => m[1]}\r\n            latitudeExtractor={(m:any) => m[0]}\r\n            intensityExtractor={(m:any) => parseFloat(m[2])} />\r\n            }\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n        </Map>\r\n        <button className=\"button\" onClick={() => this.setState({ layerHidden: !this.state.layerHidden })}>Toggle Layer</button>\r\n        <button className=\"button\" type=\"button\" onClick={this.getPoints} >Add Heat Points</button>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport const geojsonPoints:any = {\r\n  data: [\r\n      {\r\n          \"longitude\": 34.9780568296871,\r\n          \"latitude\": 32.4543458814189,\r\n          \"accident_severity\": \"קשה\",\r\n          \"accident_timestamp\": \"2016-05-15 21:00:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9618510776681,\r\n          \"latitude\": 32.4494011939289,\r\n          \"accident_severity\": \"קשה\",\r\n          \"accident_timestamp\": \"2015-01-02 06:45:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.968629300414,\r\n          \"latitude\": 32.4520110942299,\r\n          \"accident_severity\": \"קשה\",\r\n          \"accident_timestamp\": \"2014-09-12 09:45:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9618510776681,\r\n          \"latitude\": 32.4494011939289,\r\n          \"accident_severity\": \"קשה\",\r\n          \"accident_timestamp\": \"2014-07-27 21:00:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9865860704716,\r\n          \"latitude\": 32.458914735012,\r\n          \"accident_severity\": \"קשה\",\r\n          \"accident_timestamp\": \"2011-03-26 19:30:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9865860704716,\r\n          \"latitude\": 32.458914735012,\r\n          \"accident_severity\": \"קלה\",\r\n          \"accident_timestamp\": \"2019-11-28 11:30:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9618510776681,\r\n          \"latitude\": 32.4494011939289,\r\n          \"accident_severity\": \"קלה\",\r\n          \"accident_timestamp\": \"2019-10-31 19:45:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9625415910224,\r\n          \"latitude\": 32.4496820631224,\r\n          \"accident_severity\": \"קלה\",\r\n          \"accident_timestamp\": \"2019-10-31 06:30:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9865860704716,\r\n          \"latitude\": 32.458914735012,\r\n          \"accident_severity\": \"קלה\",\r\n          \"accident_timestamp\": \"2019-10-28 10:30:00\"\r\n      },\r\n      {\r\n          \"longitude\": 34.9618510776681,\r\n          \"latitude\": 32.4494011939289,\r\n          \"accident_severity\": \"קלה\",\r\n          \"accident_timestamp\": \"2019-06-22 12:00:00\"\r\n      }\r\n  ],\r\n};\r\n\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n  title: string\r\n}\r\nexport default class Header extends React.Component <IProps> {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n      <h1>\r\n        {this.props.title}\r\n      </h1>\r\n    </header> \r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n  render() {\r\n    var divStyle = {\r\n      display: 'flex',\r\n      flexFlow: 'row wrap'\r\n    };\r\n    return (\r\n      <footer style={divStyle}>\r\n        <nav  className= \"App-nav\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/addmarkers\">Add Markers</Link>\r\n          <Link to=\"/accidents\">Accidents</Link>\r\n          <Link to=\"/heatmap\">HeatMap</Link>\r\n          <Link to=\"/center\">Locate</Link>\r\n          <Link to=\"/about\">About</Link>\r\n        </nav>\r\n      </footer>\r\n    );\r\n  }\r\n}","import { observable, decorate } from \"mobx\"\r\n\r\nclass MapStore {\r\n    center =  [32.09, 34.7818];\r\n}\r\ndecorate(MapStore ,{\r\n    center : observable,\r\n    }\r\n)\r\n\r\nvar mapStore = new MapStore();\r\nexport default mapStore;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport TodoList from './components/TodoList'\r\n//import MapRBasic from './components/MapRBasic';\r\nimport MapRCneterClick from './components/MapRCneterClick'\r\nimport MapRDiv from './components/MapRDiv';\r\nimport MapRAddMarkers from './components/MapRAddMarkers';\r\nimport MapAccidents from './components/MapAccidents'\r\nimport HeatMap from './components/HeatMap';\r\nimport Header from './components/Headr';\r\nimport Footer from './components/Footer';\r\nimport store from './stores/ToDoStore'\r\nimport mapStore from './stores/MapStore';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n          renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/addmarkers\">\r\n            <AddMarkers />\r\n          </Route>\r\n          <Route path=\"/accidents\">\r\n            <div className=\"App\">\r\n              <Header title=\"Accidents Map\" />\r\n              <MapAccidents />\r\n              <Footer />\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/heatmap\">\r\n            <div className=\"App\">\r\n              <Header title=\"Heat Map\" />\r\n              <HeatMap />\r\n              <Footer />\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/center\">\r\n            <Center />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (<div className=\"App\">\r\n    <Header title=\"React Test\" />\r\n    <MapRDiv store={mapStore} />\r\n    <TodoList store={store} />\r\n    <Footer />\r\n  </div>)\r\n}\r\nfunction AddMarkers() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"AddMarkers\" />\r\n      <MapRAddMarkers />\r\n      <Footer />\r\n    </div>)\r\n}\r\nfunction Center() {\r\n  return (<div className=\"App\">\r\n    <Header title=\"Click Locate Test\" />\r\n    <MapRCneterClick />\r\n    <Footer />\r\n  </div>)\r\n}\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <Header title=\"About\" />\r\n      <h1>About page</h1>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}