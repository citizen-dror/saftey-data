{"version":3,"file":"static/js/870.c05ec4aa.chunk.js","mappings":"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","sources":["components/detailsTable/DetailsTableFilter.tsx","components/detailsTable/AccidentsTable.tsx","utils/exportCSV.ts"],"sourcesContent":["// Filter.tsx\r\nimport React from 'react';\r\nimport { Column, Table } from '@tanstack/react-table'; // Ensure these are the correct types\r\nimport './detailesTable.css';\r\n\r\ninterface FilterProps {\r\n  column: Column<any, any>;\r\n  table: Table<any>;\r\n}\r\n\r\nconst DetailsTableFilter: React.FC<FilterProps> = ({ column, table }) => {\r\n  const firstValue = table\r\n    .getPreFilteredRowModel()\r\n    .flatRows[0]?.getValue(column.id);\r\n\r\n  const columnFilterValue = column.getFilterValue();\r\n\r\n  return typeof firstValue === 'number' ? (\r\n    <div className=\"flex space-x-2\" onClick={e => e.stopPropagation()}>\r\n      <input\r\n        type=\"number\"\r\n        value={(columnFilterValue as [number, number])?.[0] ?? ''}\r\n        onChange={e =>\r\n          column.setFilterValue((old: [number, number]) => [\r\n            e.target.value,\r\n            old?.[1],\r\n          ])\r\n        }\r\n        placeholder={`Min`}\r\n        className=\"filter-input-number border shadow rounded\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        value={(columnFilterValue as [number, number])?.[1] ?? ''}\r\n        onChange={e =>\r\n          column.setFilterValue((old: [number, number]) => [\r\n            old?.[0],\r\n            e.target.value,\r\n          ])\r\n        }\r\n        placeholder={`Max`}\r\n        className=\"filter-input-number border shadow rounded\"\r\n      />\r\n    </div>\r\n  ) : (\r\n    <input\r\n      className=\"filter-input border shadow rounded\"\r\n      onChange={e => column.setFilterValue(e.target.value)}\r\n      onClick={e => e.stopPropagation()}\r\n      placeholder={`Search...`}\r\n      type=\"text\"\r\n      value={(columnFilterValue ?? '') as string}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DetailsTableFilter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport {\r\n  Column,\r\n  createColumnHelper,\r\n  PaginationState,\r\n  Table,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from '@tanstack/react-table';\r\nimport { AccessorKeyColumnDef } from '@tanstack/react-table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Table as TableBootstrap}  from \"react-bootstrap\";\r\nimport { useStore } from '../../stores/storeConfig';\r\nimport SmallCard2 from '../atoms/SmallCard2';\r\nimport {Accident} from '../../types';\r\nimport {exportCSV} from '../../utils/exportCSV';\r\nimport DetailsTableFilter from './DetailsTableFilter';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\ntype AccidentColumn = AccessorKeyColumnDef<Accident, string>;\r\n\r\nconst getColumnsByWidth = (width: number, allColumns: AccidentColumn[]) => {\r\n  let filteredColumns = [...allColumns];\r\n\r\n  if (width < 900) filteredColumns = filteredColumns.filter(col => col.accessorKey !== 'vehicle_vehicle_type_hebrew');\r\n  if (width < 700) filteredColumns = filteredColumns.filter(col => col.accessorKey !== 'street1_hebrew');\r\n  if (width < 500) filteredColumns = filteredColumns.filter(col => col.accessorKey !== 'accident_yishuv_name');\r\n  console.log('filteredColumns', filteredColumns.length)\r\n  return filteredColumns;\r\n};\r\n\r\nconst columnHelper = createColumnHelper<Accident>();\r\n\r\ninterface IProps { }\r\n\r\nconst AccidentsTable: React.FC<IProps> = observer(() => {\r\n  const { filterStore } = useStore();\r\n  const { t } = useTranslation();\r\n  const reactMarkers = toJS(filterStore.dataAllInjuries);\r\n  //@ts-ignore\r\n  const defaultDAta2 = reactMarkers as Accident[];\r\n  const [data, _setData] = React.useState(() => [...defaultDAta2]);\r\n  const [pagination, setPagination] = React.useState<PaginationState>({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n  });\r\n\r\n  const allColumns : AccidentColumn[] = [\r\n\r\n    columnHelper.accessor('accident_year', {\r\n      cell: info => <i>{info.getValue()}</i>,\r\n      header: t('Year'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('injury_severity_hebrew', {\r\n      header: t('Severity'),\r\n      cell: info => info.renderValue(),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('injured_type_hebrew', {\r\n      header: t('TypeInjured'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('accident_yishuv_name', {\r\n      header: t('City'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('street1_hebrew', {\r\n      header: t('Street'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('vehicle_vehicle_type_hebrew', {\r\n      header: t('VehicleType'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('accident_type_hebrew', {\r\n      header: t('AccidentType'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('age_group_hebrew', {\r\n      header: t('Age'),\r\n      footer: info => info.column.id,\r\n    }),\r\n    columnHelper.accessor('sex_hebrew', {\r\n      header: t('Gender'),\r\n      footer: info => info.column.id,\r\n    }),\r\n  ];\r\n \r\n  const [columns, setColumns] = useState(() => getColumnsByWidth(window.innerWidth, allColumns));\r\n  console.log('columns', columns.length, 'innerWidth',window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setColumns(getColumnsByWidth(window.innerWidth, allColumns));\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n\r\n  const table = useReactTable({\r\n    columns,\r\n    data,\r\n    debugTable: true,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    onPaginationChange: setPagination,\r\n    //no need to pass pageCount or rowCount with client-side pagination as it is calculated automatically\r\n    state: {\r\n      pagination,\r\n    },\r\n    // autoResetPageIndex: false, // turn off page index reset when sorting or filtering\r\n  })\r\n  const onExportClick=()=>{\r\n    exportCSV(columns, data);\r\n  }\r\n \r\n  return (\r\n    <SmallCard2>\r\n    <div className=\"h-2\" />\r\n      <TableBootstrap striped bordered hover>\r\n        <thead>\r\n          {table.getHeaderGroups().map(headerGroup => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map(header => {\r\n                return (\r\n                  <th key={header.id} colSpan={header.colSpan}>\r\n                    <div\r\n                      {...{\r\n                        className: header.column.getCanSort()\r\n                          ? 'cursor-pointer select-none'\r\n                          : '',\r\n                        onClick: header.column.getToggleSortingHandler(),\r\n                      }}\r\n                    >\r\n                      {flexRender(\r\n                        header.column.columnDef.header,\r\n                        header.getContext()\r\n                      )}\r\n                      {{\r\n                        asc: ' 🔼',\r\n                        desc: ' 🔽',\r\n                      }[header.column.getIsSorted() as string] ?? null}\r\n                      {header.column.getCanFilter() ? (\r\n                        <div>\r\n                          <DetailsTableFilter column={header.column} table={table} />\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </th>\r\n                )\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map(row => {\r\n            return (\r\n              <tr key={row.id}>\r\n                {row.getVisibleCells().map(cell => {\r\n                  return (\r\n                    <td key={cell.id}>\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </td>\r\n                  )\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </TableBootstrap>\r\n      <Button onClick={onExportClick} className=\"export-btn\">\r\n          {t('export-to-csv')}\r\n      </Button>\r\n      <div className=\"h-2\" />\r\n    <div className=\"flex items-center gap-2\">\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.firstPage()}\r\n        disabled={!table.getCanPreviousPage()}\r\n      >\r\n        {'<<'}\r\n      </button>\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.previousPage()}\r\n        disabled={!table.getCanPreviousPage()}\r\n      >\r\n        {'<'}\r\n      </button>\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.nextPage()}\r\n        disabled={!table.getCanNextPage()}\r\n      >\r\n        {'>'}\r\n      </button>\r\n      <button\r\n        className=\"border rounded p-1\"\r\n        onClick={() => table.lastPage()}\r\n        disabled={!table.getCanNextPage()}\r\n      >\r\n        {'>>'}\r\n      </button>\r\n      <span className=\"flex items-center gap-1\">\r\n        <div>Page</div>\r\n        <strong>\r\n          {table.getState().pagination.pageIndex + 1} of{' '}\r\n          {table.getPageCount().toLocaleString()}\r\n        </strong>\r\n      </span>\r\n      <span className=\"flex items-center gap-1\">\r\n        | Go to page:\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max={table.getPageCount()}\r\n          defaultValue={table.getState().pagination.pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n            table.setPageIndex(page)\r\n          }}\r\n          className=\"border p-1 rounded w-16\"\r\n        />\r\n      </span>\r\n      <select\r\n        value={table.getState().pagination.pageSize}\r\n        onChange={e => {\r\n          table.setPageSize(Number(e.target.value))\r\n        }}\r\n      >\r\n        {[10, 20, 30, 40, 50].map(pageSize => (\r\n          <option key={pageSize} value={pageSize}>\r\n            Show {pageSize}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  </SmallCard2>\r\n  )\r\n});\r\n\r\n\r\nexport default AccidentsTable;","export  const exportCSV = (columns: any[], data: any[], fileName = 'saefty_data.csv') => {\r\n    // Generate CSV content\r\n    const headers = Object.keys(data[0]).join(',');\r\n    // const headers = columns.map((col) => col.header).join(',');\r\n    const rows = data.map((row) =>\r\n      Object.values(row)\r\n        .map((val) => `\"${val}\"`)\r\n        .join(',')\r\n    );\r\n    const csvContent = [headers, ...rows].join('\\n');\r\n\r\n    // Trigger download\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'table_data.csv';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };"],"names":["_ref","_table$getPreFiltered","_","_2","column","table","firstValue","getPreFilteredRowModel","flatRows","getValue","id","columnFilterValue","getFilterValue","_jsxs","className","onClick","e","stopPropagation","children","_jsx","type","value","onChange","setFilterValue","old","target","placeholder","getColumnsByWidth","width","allColumns","filteredColumns","filter","col","accessorKey","console","log","length","columnHelper","createColumnHelper","observer","filterStore","useStore","t","useTranslation","defaultDAta2","toJS","dataAllInjuries","data","_setData","React","pagination","setPagination","pageIndex","pageSize","accessor","cell","info","header","footer","renderValue","columns","setColumns","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","useReactTable","debugTable","getCoreRowModel","getSortedRowModel","getFilteredRowModel","getPaginationRowModel","onPaginationChange","state","SmallCard2","TableBootstrap","striped","bordered","hover","getHeaderGroups","map","headerGroup","headers","_asc$desc","colSpan","getCanSort","getToggleSortingHandler","flexRender","columnDef","getContext","asc","desc","getIsSorted","getCanFilter","DetailsTableFilter","getRowModel","rows","row","getVisibleCells","Button","onExportClick","csvContent","Object","keys","join","values","val","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","exportCSV","firstPage","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","lastPage","getState","getPageCount","toLocaleString","min","max","defaultValue","page","Number","setPageIndex","setPageSize"],"sourceRoot":""}